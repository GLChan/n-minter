{"id":"f379189c9d819dac29aaa9112887fa08","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/IERC2981.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC2981.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface for the NFT Royalty Standard.\n *\n * A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal\n * support for royalty payments across all NFT marketplaces and ecosystem participants.\n */\ninterface IERC2981 is IERC165 {\n    /**\n     * @dev Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of\n     * exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\n     *\n     * NOTE: ERC-2981 allows setting the royalty to 100% of the price. In that case all the price would be sent to the\n     * royalty receiver and 0 tokens to the seller. Contracts dealing with royalty should consider empty transfers.\n     */\n    function royaltyInfo(\n        uint256 tokenId,\n        uint256 salePrice\n    ) external view returns (address receiver, uint256 royaltyAmount);\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    // slither-disable-next-line constable-states\n    string private _nameFallback;\n    // slither-disable-next-line constable-states\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @inheritdoc IERC5267\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32.\n     */\n    function toDataWithIntendedValidatorHash(\n        address validator,\n        bytes32 messageHash\n    ) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, hex\"19_00\")\n            mstore(0x02, shl(96, validator))\n            mstore(0x16, messageHash)\n            digest := keccak256(0x00, 0x36)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        assembly (\"memory-safe\") {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {toShortStringWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {toShortStringWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(buffer, add(0x20, offset)))\n        }\n    }\n}\n"},"contracts/Marketplace.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/interfaces/IERC2981.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\n\n/**\n * @title 一个基于链下签名订单簿的去中心化 NFT 市场\n * @notice 该合约不存储挂单或报价状态，只负责验证签名并执行原子交换。\n * @dev 所有订单在链下创建和签名，只有在成交时才由其中一方提交到链上执行。\n */\ncontract Marketplace is Ownable, ReentrancyGuard, EIP712 {\n    // --- 订单结构体 ---\n    // 这是在链下创建并由用户签名的数据结构。\n    struct Order {\n        address seller;         // 卖家地址\n        address buyer;          // 买家地址 (如果为 address(0)，则为公开订单，任何人可购买)\n        address nftAddress;     // NFT 合约地址\n        uint256 tokenId;        // NFT Token ID\n        address currency;       // 支付货币的 ERC20 地址 (例如 WETH)\n        uint256 price;          // 价格 (以 currency 的最小单位)\n        uint256 nonce;          // 防止重放攻击的随机数，与签名者地址绑定\n        uint256 deadline;       // 订单过期时间戳 (Unix aTimestamp)\n    }\n\n    // --- 状态变量 ---\n    address public platformFeeRecipient;\n    uint256 public platformFeePercent;\n    \n    // 跟踪每个用户的 nonce。用户可以通过 incrementNonce() 使自己之前的所有签名失效。\n    mapping(address => uint256) public userNonces;\n    // 跟踪已成交或已取消的订单哈希，防止重放攻击。\n    mapping(bytes32 => bool) public orderStatus;\n\n    // --- 事件 ---\n    event OrderFulfilled(bytes32 indexed orderHash, address indexed seller, address indexed buyer, address nftAddress, uint256 tokenId, uint256 price);\n    event OrderCancelled(bytes32 indexed orderHash, address indexed nftAddress, uint256 indexed tokenId, address user);\n    event PlatformFeePercentUpdated(uint256 oldFeePercent, uint256 newFeePercent);\n    event PlatformFeeRecipientUpdated(address oldRecipient, address newRecipient);\n    \n    // --- EIP712 签名验证相关 ---\n    bytes32 private constant _ORDER_TYPEHASH = keccak256(\n        \"Order(address seller,address buyer,address nftAddress,uint256 tokenId,address currency,uint256 price,uint256 nonce,uint256 deadline)\"\n    );\n\n    constructor(\n        string memory name, // EIP712 域名，例如 \"My NFT Marketplace\"\n        string memory version, // EIP712 版本，例如 \"1\"\n        address initialOwner,\n        address _platformFeeRecipient,\n        uint256 _platformFeePercent\n    ) EIP712(name, version) Ownable(initialOwner) {\n        require(_platformFeeRecipient != address(0), \"Recipient cannot be zero\");\n        platformFeeRecipient = _platformFeeRecipient;\n        platformFeePercent = _platformFeePercent;\n    }\n    \n    // --- 管理员功能 ---\n    function setPlatformFeePercent(uint256 _newFeePercent) external onlyOwner {\n        require(_newFeePercent <= 10000, \"Fee percent cannot exceed 10000\"); // basis points\n        emit PlatformFeePercentUpdated(platformFeePercent, _newFeePercent);\n        platformFeePercent = _newFeePercent;\n    }\n\n    function setPlatformFeeRecipient(address _newRecipient) external onlyOwner {\n        require(_newRecipient != address(0), \"Recipient cannot be zero\");\n        emit PlatformFeeRecipientUpdated(platformFeeRecipient, _newRecipient);\n        platformFeeRecipient = _newRecipient;\n    }\n\n\n    // --- 核心交易功能 ---\n\n    /**\n     * @notice 【场景一：买家购买】执行一个由卖家签名的销售订单。\n     * @param order 包含所有订单信息的结构体，由卖家签名。\n     * @param signature 卖家的 EIP712 签名。\n     */\n    function fulfillOrder(Order calldata order, bytes calldata signature) external nonReentrant {\n        // 1. 验证订单基础信息\n        require(block.timestamp < order.deadline, \"Order: Expired\");\n        \n        address signer = order.seller;\n        bytes32 orderHash = _hashOrder(order);\n\n        // 2. 验证订单状态，防止重放\n        require(!orderStatus[orderHash], \"Order: Already handled\");\n\n        // 3. 验证签名是否来自卖家\n        require(_verifySignature(signer, orderHash, signature), \"Order: Invalid signature\");\n\n        // 4. 标记订单为已完成\n        orderStatus[orderHash] = true;\n\n        // 5. 确定买家身份\n        address buyer = msg.sender; // 交易的发起者是买家\n        if (order.buyer != address(0)) {\n            require(buyer == order.buyer, \"Order: Not for you\"); // 如果是私下销售，验证买家身份\n        }\n\n        // 6. 执行原子交换\n        _executeTrade(buyer, order.seller, order.nftAddress, order.tokenId, order.currency, order.price);\n        \n        emit OrderFulfilled(orderHash, order.seller, buyer, order.nftAddress, order.tokenId, order.price);\n    }\n    \n    /**\n     * @notice 【场景二：卖家接受报价】执行一个由买家签名的报价订单。\n     * @param order 包含所有报价信息的结构体，由买家签名。\n     * @param signature 买家的 EIP712 签名。\n     */\n    function fulfillOffer(Order calldata order, bytes calldata signature) external nonReentrant {\n        // 1. 验证订单基础信息\n        require(block.timestamp < order.deadline, \"Offer: Expired\");\n\n        address signer = order.buyer; // 在此场景下，签署者是买家\n        address seller = msg.sender; // 交易的发起者是卖家\n        bytes32 orderHash = _hashOrder(order);\n\n        // 2. 验证订单状态\n        require(!orderStatus[orderHash], \"Offer: Already handled\");\n\n        // 3. 验证此报价是否是给当前卖家的\n        require(seller == order.seller, \"Offer: Not for you\");\n\n        // 4. 验证买家的签名\n        require(_verifySignature(signer, orderHash, signature), \"Offer: Invalid buyer signature\");\n\n        // 5. 标记订单为已完成\n        orderStatus[orderHash] = true;\n\n        // 6. 执行原子交换\n        _executeTrade(order.buyer, seller, order.nftAddress, order.tokenId, order.currency, order.price);\n\n        emit OrderFulfilled(orderHash, seller, order.buyer, order.nftAddress, order.tokenId, order.price);\n    }\n    \n    // --- 订单管理功能 ---\n    /**\n     * @notice 在链上取消一个已签名的订单，使其永久失效。\n     */\n    function cancelOrder(Order calldata order) external {\n        address user = msg.sender;\n        // 订单的签署方（卖家或买家）可以取消自己的订单\n        require(user == order.seller || user == order.buyer, \"Not a party to the order\");\n\n        bytes32 orderHash = _hashOrder(order);\n        require(!orderStatus[orderHash], \"Order: Already handled\");\n\n        orderStatus[orderHash] = true;\n        emit OrderCancelled(orderHash, order.nftAddress, order.tokenId, user);\n    }\n    \n    /**\n     * @notice 递增用户的 nonce，这将使用户所有使用旧 nonce 的签名全部失效。\n     */\n    function incrementNonce() external {\n        userNonces[msg.sender]++;\n    }\n\n    // --- 内部辅助函数 ---\n    function _hashOrder(Order calldata order) internal view returns (bytes32) {\n        return _hashTypedDataV4(keccak256(abi.encode(\n            _ORDER_TYPEHASH,\n            order.seller,\n            order.buyer,\n            order.nftAddress,\n            order.tokenId,\n            order.currency,\n            order.price,\n            order.nonce,\n            order.deadline\n        )));\n    }\n\n    function _verifySignature(address signer, bytes32 digest, bytes calldata signature) internal pure returns (bool) {\n        return ECDSA.recover(digest, signature) == signer;\n    }\n\n    function _executeTrade(address buyer, address seller, address nftAddress, uint256 tokenId, address currency, uint256 price) internal {\n        // 前提：买家已授权本合约可操作其 currency 代币，卖家已授权本合约可操作其 NFT\n        IERC721 nft = IERC721(nftAddress);\n        require(nft.ownerOf(tokenId) == seller, \"Seller no longer owns NFT\");\n\n        // a. 计算费用\n        uint256 platformFee = (price * platformFeePercent) / 10000;\n        (address royaltyRecipient, uint256 royaltyFee) = _getRoyaltyInfo(nftAddress, tokenId, price);\n        require(platformFee + royaltyFee <= price, \"Fees exceed price\");\n        uint256 sellerProceeds = price - platformFee - royaltyFee;\n        \n        // b. 转移资金 (从买家到各方)\n        IERC20 token = IERC20(currency);\n        // 为了安全和gas效率，建议前端一次性授权足够的金额给合约，而不是在交易中分开授权\n        require(token.transferFrom(buyer, seller, sellerProceeds), \"Transfer to seller failed\");\n        if (platformFee > 0) { require(token.transferFrom(buyer, platformFeeRecipient, platformFee), \"Platform fee transfer failed\"); }\n        if (royaltyFee > 0 && royaltyRecipient != address(0)) { require(token.transferFrom(buyer, royaltyRecipient, royaltyFee), \"Royalty fee transfer failed\"); }\n        \n        // c. 转移 NFT (从卖家到买家)\n        nft.safeTransferFrom(seller, buyer, tokenId);\n    }\n\n    function _getRoyaltyInfo(address _nftAddress, uint256 _tokenId, uint256 _price) internal view returns (address, uint256) {\n        try IERC2981(_nftAddress).royaltyInfo(_tokenId, _price) returns (address receiver, uint256 royaltyAmount) {\n            return (receiver, royaltyAmount);\n        } catch { return (address(0), 0); }\n    }\n}"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[417],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":418,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":417,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":417,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,417],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":399,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC2981.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC2981.sol","exportedSymbols":{"IERC165":[2954],"IERC2981":[167]},"id":168,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:1"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":151,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":168,"sourceUnit":2955,"src":"133:59:1","symbolAliases":[{"foreign":{"id":150,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2954,"src":"141:7:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":153,"name":"IERC165","nameLocations":["476:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":2954,"src":"476:7:1"},"id":154,"nodeType":"InheritanceSpecifier","src":"476:7:1"}],"canonicalName":"IERC2981","contractDependencies":[],"contractKind":"interface","documentation":{"id":152,"nodeType":"StructuredDocumentation","src":"194:259:1","text":" @dev Interface for the NFT Royalty Standard.\n A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal\n support for royalty payments across all NFT marketplaces and ecosystem participants."},"fullyImplemented":false,"id":167,"linearizedBaseContracts":[167,2954],"name":"IERC2981","nameLocation":"464:8:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":155,"nodeType":"StructuredDocumentation","src":"490:473:1","text":" @dev Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of\n exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\n NOTE: ERC-2981 allows setting the royalty to 100% of the price. In that case all the price would be sent to the\n royalty receiver and 0 tokens to the seller. Contracts dealing with royalty should consider empty transfers."},"functionSelector":"2a55205a","id":166,"implemented":false,"kind":"function","modifiers":[],"name":"royaltyInfo","nameLocation":"977:11:1","nodeType":"FunctionDefinition","parameters":{"id":160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":157,"mutability":"mutable","name":"tokenId","nameLocation":"1006:7:1","nodeType":"VariableDeclaration","scope":166,"src":"998:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"998:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":159,"mutability":"mutable","name":"salePrice","nameLocation":"1031:9:1","nodeType":"VariableDeclaration","scope":166,"src":"1023:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":158,"name":"uint256","nodeType":"ElementaryTypeName","src":"1023:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"988:58:1"},"returnParameters":{"id":165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"receiver","nameLocation":"1078:8:1","nodeType":"VariableDeclaration","scope":166,"src":"1070:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"1070:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":164,"mutability":"mutable","name":"royaltyAmount","nameLocation":"1096:13:1","nodeType":"VariableDeclaration","scope":166,"src":"1088:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":163,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1069:41:1"},"scope":167,"src":"968:143:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":168,"src":"454:659:1","usedErrors":[],"usedEvents":[]}],"src":"107:1007:1"},"id":1},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[192]},"id":193,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":169,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":192,"linearizedBaseContracts":[192],"name":"IERC5267","nameLocation":"143:8:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":170,"nodeType":"StructuredDocumentation","src":"158:84:2","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":172,"name":"EIP712DomainChanged","nameLocation":"253:19:2","nodeType":"EventDefinition","parameters":{"id":171,"nodeType":"ParameterList","parameters":[],"src":"272:2:2"},"src":"247:28:2"},{"documentation":{"id":173,"nodeType":"StructuredDocumentation","src":"281:140:2","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":191,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"435:12:2","nodeType":"FunctionDefinition","parameters":{"id":174,"nodeType":"ParameterList","parameters":[],"src":"447:2:2"},"returnParameters":{"id":190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":176,"mutability":"mutable","name":"fields","nameLocation":"517:6:2","nodeType":"VariableDeclaration","scope":191,"src":"510:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":175,"name":"bytes1","nodeType":"ElementaryTypeName","src":"510:6:2","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":178,"mutability":"mutable","name":"name","nameLocation":"551:4:2","nodeType":"VariableDeclaration","scope":191,"src":"537:18:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":177,"name":"string","nodeType":"ElementaryTypeName","src":"537:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":180,"mutability":"mutable","name":"version","nameLocation":"583:7:2","nodeType":"VariableDeclaration","scope":191,"src":"569:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":179,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":182,"mutability":"mutable","name":"chainId","nameLocation":"612:7:2","nodeType":"VariableDeclaration","scope":191,"src":"604:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":181,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":184,"mutability":"mutable","name":"verifyingContract","nameLocation":"641:17:2","nodeType":"VariableDeclaration","scope":191,"src":"633:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":183,"name":"address","nodeType":"ElementaryTypeName","src":"633:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":186,"mutability":"mutable","name":"salt","nameLocation":"680:4:2","nodeType":"VariableDeclaration","scope":191,"src":"672:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":185,"name":"bytes32","nodeType":"ElementaryTypeName","src":"672:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":189,"mutability":"mutable","name":"extensions","nameLocation":"715:10:2","nodeType":"VariableDeclaration","scope":191,"src":"698:27:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":187,"name":"uint256","nodeType":"ElementaryTypeName","src":"698:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":188,"nodeType":"ArrayTypeName","src":"698:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"496:239:2"},"scope":192,"src":"426:310:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":193,"src":"133:605:2","usedErrors":[],"usedEvents":[172]}],"src":"107:632:2"},"id":2},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[270]},"id":271,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":194,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":195,"nodeType":"StructuredDocumentation","src":"132:71:3","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":270,"linearizedBaseContracts":[270],"name":"IERC20","nameLocation":"214:6:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":196,"nodeType":"StructuredDocumentation","src":"227:158:3","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":204,"name":"Transfer","nameLocation":"396:8:3","nodeType":"EventDefinition","parameters":{"id":203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:3","nodeType":"VariableDeclaration","scope":204,"src":"405:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":197,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":200,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:3","nodeType":"VariableDeclaration","scope":204,"src":"427:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":199,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":202,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:3","nodeType":"VariableDeclaration","scope":204,"src":"447:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":201,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:3"},"src":"390:72:3"},{"anonymous":false,"documentation":{"id":205,"nodeType":"StructuredDocumentation","src":"468:148:3","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":213,"name":"Approval","nameLocation":"627:8:3","nodeType":"EventDefinition","parameters":{"id":212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":207,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:3","nodeType":"VariableDeclaration","scope":213,"src":"636:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":206,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":209,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:3","nodeType":"VariableDeclaration","scope":213,"src":"659:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":208,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":211,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:3","nodeType":"VariableDeclaration","scope":213,"src":"684:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":210,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:3"},"src":"621:78:3"},{"documentation":{"id":214,"nodeType":"StructuredDocumentation","src":"705:65:3","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":219,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:3","nodeType":"FunctionDefinition","parameters":{"id":215,"nodeType":"ParameterList","parameters":[],"src":"795:2:3"},"returnParameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":219,"src":"821:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":216,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:3"},"scope":270,"src":"775:55:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"836:71:3","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":227,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:3","nodeType":"FunctionDefinition","parameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":222,"mutability":"mutable","name":"account","nameLocation":"939:7:3","nodeType":"VariableDeclaration","scope":227,"src":"931:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:3"},"returnParameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":227,"src":"971:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":224,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:3"},"scope":270,"src":"912:68:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":228,"nodeType":"StructuredDocumentation","src":"986:213:3","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":237,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:3","nodeType":"FunctionDefinition","parameters":{"id":233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":230,"mutability":"mutable","name":"to","nameLocation":"1230:2:3","nodeType":"VariableDeclaration","scope":237,"src":"1222:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":229,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":232,"mutability":"mutable","name":"value","nameLocation":"1242:5:3","nodeType":"VariableDeclaration","scope":237,"src":"1234:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":231,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:3"},"returnParameters":{"id":236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":235,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":237,"src":"1267:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":234,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:3"},"scope":270,"src":"1204:69:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":238,"nodeType":"StructuredDocumentation","src":"1279:264:3","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":247,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:3","nodeType":"FunctionDefinition","parameters":{"id":243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":240,"mutability":"mutable","name":"owner","nameLocation":"1575:5:3","nodeType":"VariableDeclaration","scope":247,"src":"1567:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":239,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":242,"mutability":"mutable","name":"spender","nameLocation":"1590:7:3","nodeType":"VariableDeclaration","scope":247,"src":"1582:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":241,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:3"},"returnParameters":{"id":246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":245,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":247,"src":"1622:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":244,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:3"},"scope":270,"src":"1548:83:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":248,"nodeType":"StructuredDocumentation","src":"1637:667:3","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":257,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:3","nodeType":"FunctionDefinition","parameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":250,"mutability":"mutable","name":"spender","nameLocation":"2334:7:3","nodeType":"VariableDeclaration","scope":257,"src":"2326:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":249,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":252,"mutability":"mutable","name":"value","nameLocation":"2351:5:3","nodeType":"VariableDeclaration","scope":257,"src":"2343:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":251,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:3"},"returnParameters":{"id":256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":255,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":257,"src":"2376:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":254,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:3"},"scope":270,"src":"2309:73:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":258,"nodeType":"StructuredDocumentation","src":"2388:297:3","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":269,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:3","nodeType":"FunctionDefinition","parameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":260,"mutability":"mutable","name":"from","nameLocation":"2720:4:3","nodeType":"VariableDeclaration","scope":269,"src":"2712:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":259,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":262,"mutability":"mutable","name":"to","nameLocation":"2734:2:3","nodeType":"VariableDeclaration","scope":269,"src":"2726:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":261,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":264,"mutability":"mutable","name":"value","nameLocation":"2746:5:3","nodeType":"VariableDeclaration","scope":269,"src":"2738:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":263,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:3"},"returnParameters":{"id":268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":267,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":269,"src":"2771:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":266,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:3"},"scope":270,"src":"2690:87:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":271,"src":"204:2575:3","usedErrors":[],"usedEvents":[204,213]}],"src":"106:2674:3"},"id":3},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[2954],"IERC721":[387]},"id":388,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":272,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:4"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":274,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":388,"sourceUnit":2955,"src":"134:62:4","symbolAliases":[{"foreign":{"id":273,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2954,"src":"142:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":276,"name":"IERC165","nameLocations":["288:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":2954,"src":"288:7:4"},"id":277,"nodeType":"InheritanceSpecifier","src":"288:7:4"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":275,"nodeType":"StructuredDocumentation","src":"198:68:4","text":" @dev Required interface of an ERC-721 compliant contract."},"fullyImplemented":false,"id":387,"linearizedBaseContracts":[387,2954],"name":"IERC721","nameLocation":"277:7:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":278,"nodeType":"StructuredDocumentation","src":"302:88:4","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":286,"name":"Transfer","nameLocation":"401:8:4","nodeType":"EventDefinition","parameters":{"id":285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":280,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"426:4:4","nodeType":"VariableDeclaration","scope":286,"src":"410:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":279,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":282,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"448:2:4","nodeType":"VariableDeclaration","scope":286,"src":"432:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"432:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":284,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"468:7:4","nodeType":"VariableDeclaration","scope":286,"src":"452:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":283,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:67:4"},"src":"395:82:4"},{"anonymous":false,"documentation":{"id":287,"nodeType":"StructuredDocumentation","src":"483:94:4","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":295,"name":"Approval","nameLocation":"588:8:4","nodeType":"EventDefinition","parameters":{"id":294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":289,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"613:5:4","nodeType":"VariableDeclaration","scope":295,"src":"597:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":288,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":291,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"636:8:4","nodeType":"VariableDeclaration","scope":295,"src":"620:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":290,"name":"address","nodeType":"ElementaryTypeName","src":"620:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":293,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"662:7:4","nodeType":"VariableDeclaration","scope":295,"src":"646:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":292,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"596:74:4"},"src":"582:89:4"},{"anonymous":false,"documentation":{"id":296,"nodeType":"StructuredDocumentation","src":"677:117:4","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":304,"name":"ApprovalForAll","nameLocation":"805:14:4","nodeType":"EventDefinition","parameters":{"id":303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":298,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"836:5:4","nodeType":"VariableDeclaration","scope":304,"src":"820:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":297,"name":"address","nodeType":"ElementaryTypeName","src":"820:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":300,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"859:8:4","nodeType":"VariableDeclaration","scope":304,"src":"843:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":299,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":302,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"874:8:4","nodeType":"VariableDeclaration","scope":304,"src":"869:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":301,"name":"bool","nodeType":"ElementaryTypeName","src":"869:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"819:64:4"},"src":"799:85:4"},{"documentation":{"id":305,"nodeType":"StructuredDocumentation","src":"890:76:4","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":312,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"980:9:4","nodeType":"FunctionDefinition","parameters":{"id":308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":307,"mutability":"mutable","name":"owner","nameLocation":"998:5:4","nodeType":"VariableDeclaration","scope":312,"src":"990:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":306,"name":"address","nodeType":"ElementaryTypeName","src":"990:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"989:15:4"},"returnParameters":{"id":311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":310,"mutability":"mutable","name":"balance","nameLocation":"1036:7:4","nodeType":"VariableDeclaration","scope":312,"src":"1028:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":309,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1027:17:4"},"scope":387,"src":"971:74:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":313,"nodeType":"StructuredDocumentation","src":"1051:131:4","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":320,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1196:7:4","nodeType":"FunctionDefinition","parameters":{"id":316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":315,"mutability":"mutable","name":"tokenId","nameLocation":"1212:7:4","nodeType":"VariableDeclaration","scope":320,"src":"1204:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":314,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1203:17:4"},"returnParameters":{"id":319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":318,"mutability":"mutable","name":"owner","nameLocation":"1252:5:4","nodeType":"VariableDeclaration","scope":320,"src":"1244:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":317,"name":"address","nodeType":"ElementaryTypeName","src":"1244:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1243:15:4"},"scope":387,"src":"1187:72:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":321,"nodeType":"StructuredDocumentation","src":"1265:565:4","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":332,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1844:16:4","nodeType":"FunctionDefinition","parameters":{"id":330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":323,"mutability":"mutable","name":"from","nameLocation":"1869:4:4","nodeType":"VariableDeclaration","scope":332,"src":"1861:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":322,"name":"address","nodeType":"ElementaryTypeName","src":"1861:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":325,"mutability":"mutable","name":"to","nameLocation":"1883:2:4","nodeType":"VariableDeclaration","scope":332,"src":"1875:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":324,"name":"address","nodeType":"ElementaryTypeName","src":"1875:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":327,"mutability":"mutable","name":"tokenId","nameLocation":"1895:7:4","nodeType":"VariableDeclaration","scope":332,"src":"1887:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":326,"name":"uint256","nodeType":"ElementaryTypeName","src":"1887:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":329,"mutability":"mutable","name":"data","nameLocation":"1919:4:4","nodeType":"VariableDeclaration","scope":332,"src":"1904:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":328,"name":"bytes","nodeType":"ElementaryTypeName","src":"1904:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1860:64:4"},"returnParameters":{"id":331,"nodeType":"ParameterList","parameters":[],"src":"1933:0:4"},"scope":387,"src":"1835:99:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":333,"nodeType":"StructuredDocumentation","src":"1940:706:4","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":342,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2660:16:4","nodeType":"FunctionDefinition","parameters":{"id":340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":335,"mutability":"mutable","name":"from","nameLocation":"2685:4:4","nodeType":"VariableDeclaration","scope":342,"src":"2677:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":334,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":337,"mutability":"mutable","name":"to","nameLocation":"2699:2:4","nodeType":"VariableDeclaration","scope":342,"src":"2691:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":336,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":339,"mutability":"mutable","name":"tokenId","nameLocation":"2711:7:4","nodeType":"VariableDeclaration","scope":342,"src":"2703:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":338,"name":"uint256","nodeType":"ElementaryTypeName","src":"2703:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:4"},"returnParameters":{"id":341,"nodeType":"ParameterList","parameters":[],"src":"2728:0:4"},"scope":387,"src":"2651:78:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":343,"nodeType":"StructuredDocumentation","src":"2735:733:4","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":352,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3482:12:4","nodeType":"FunctionDefinition","parameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":345,"mutability":"mutable","name":"from","nameLocation":"3503:4:4","nodeType":"VariableDeclaration","scope":352,"src":"3495:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":344,"name":"address","nodeType":"ElementaryTypeName","src":"3495:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":347,"mutability":"mutable","name":"to","nameLocation":"3517:2:4","nodeType":"VariableDeclaration","scope":352,"src":"3509:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":346,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":349,"mutability":"mutable","name":"tokenId","nameLocation":"3529:7:4","nodeType":"VariableDeclaration","scope":352,"src":"3521:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":348,"name":"uint256","nodeType":"ElementaryTypeName","src":"3521:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3494:43:4"},"returnParameters":{"id":351,"nodeType":"ParameterList","parameters":[],"src":"3546:0:4"},"scope":387,"src":"3473:74:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":353,"nodeType":"StructuredDocumentation","src":"3553:452:4","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":360,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4019:7:4","nodeType":"FunctionDefinition","parameters":{"id":358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":355,"mutability":"mutable","name":"to","nameLocation":"4035:2:4","nodeType":"VariableDeclaration","scope":360,"src":"4027:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":354,"name":"address","nodeType":"ElementaryTypeName","src":"4027:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":357,"mutability":"mutable","name":"tokenId","nameLocation":"4047:7:4","nodeType":"VariableDeclaration","scope":360,"src":"4039:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":356,"name":"uint256","nodeType":"ElementaryTypeName","src":"4039:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4026:29:4"},"returnParameters":{"id":359,"nodeType":"ParameterList","parameters":[],"src":"4064:0:4"},"scope":387,"src":"4010:55:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":361,"nodeType":"StructuredDocumentation","src":"4071:315:4","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":368,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4400:17:4","nodeType":"FunctionDefinition","parameters":{"id":366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":363,"mutability":"mutable","name":"operator","nameLocation":"4426:8:4","nodeType":"VariableDeclaration","scope":368,"src":"4418:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":362,"name":"address","nodeType":"ElementaryTypeName","src":"4418:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":365,"mutability":"mutable","name":"approved","nameLocation":"4441:8:4","nodeType":"VariableDeclaration","scope":368,"src":"4436:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":364,"name":"bool","nodeType":"ElementaryTypeName","src":"4436:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4417:33:4"},"returnParameters":{"id":367,"nodeType":"ParameterList","parameters":[],"src":"4459:0:4"},"scope":387,"src":"4391:69:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":369,"nodeType":"StructuredDocumentation","src":"4466:139:4","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":376,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4619:11:4","nodeType":"FunctionDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":371,"mutability":"mutable","name":"tokenId","nameLocation":"4639:7:4","nodeType":"VariableDeclaration","scope":376,"src":"4631:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":370,"name":"uint256","nodeType":"ElementaryTypeName","src":"4631:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4630:17:4"},"returnParameters":{"id":375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":374,"mutability":"mutable","name":"operator","nameLocation":"4679:8:4","nodeType":"VariableDeclaration","scope":376,"src":"4671:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":373,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4670:18:4"},"scope":387,"src":"4610:79:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":377,"nodeType":"StructuredDocumentation","src":"4695:138:4","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":386,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4847:16:4","nodeType":"FunctionDefinition","parameters":{"id":382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":379,"mutability":"mutable","name":"owner","nameLocation":"4872:5:4","nodeType":"VariableDeclaration","scope":386,"src":"4864:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":378,"name":"address","nodeType":"ElementaryTypeName","src":"4864:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":381,"mutability":"mutable","name":"operator","nameLocation":"4887:8:4","nodeType":"VariableDeclaration","scope":386,"src":"4879:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":380,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4863:33:4"},"returnParameters":{"id":385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":384,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":386,"src":"4920:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":383,"name":"bool","nodeType":"ElementaryTypeName","src":"4920:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4919:6:4"},"scope":387,"src":"4838:88:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":388,"src":"267:4661:4","usedErrors":[],"usedEvents":[286,295,304]}],"src":"108:4821:4"},"id":4},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[417]},"id":418,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":389,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:5"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":390,"nodeType":"StructuredDocumentation","src":"127:496:5","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":417,"linearizedBaseContracts":[417],"name":"Context","nameLocation":"642:7:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":398,"nodeType":"Block","src":"718:34:5","statements":[{"expression":{"expression":{"id":395,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:5","memberName":"sender","nodeType":"MemberAccess","src":"735:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":394,"id":397,"nodeType":"Return","src":"728:17:5"}]},"id":399,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:5","nodeType":"FunctionDefinition","parameters":{"id":391,"nodeType":"ParameterList","parameters":[],"src":"675:2:5"},"returnParameters":{"id":394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":399,"src":"709:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":392,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:5"},"scope":417,"src":"656:96:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":407,"nodeType":"Block","src":"825:32:5","statements":[{"expression":{"expression":{"id":404,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:5","memberName":"data","nodeType":"MemberAccess","src":"842:8:5","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":403,"id":406,"nodeType":"Return","src":"835:15:5"}]},"id":408,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:5","nodeType":"FunctionDefinition","parameters":{"id":400,"nodeType":"ParameterList","parameters":[],"src":"775:2:5"},"returnParameters":{"id":403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":402,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":408,"src":"809:14:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":401,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:5"},"scope":417,"src":"758:99:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":415,"nodeType":"Block","src":"935:25:5","statements":[{"expression":{"hexValue":"30","id":413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":412,"id":414,"nodeType":"Return","src":"945:8:5"}]},"id":416,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:5","nodeType":"FunctionDefinition","parameters":{"id":409,"nodeType":"ParameterList","parameters":[],"src":"892:2:5"},"returnParameters":{"id":412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":411,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":416,"src":"926:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":410,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:5"},"scope":417,"src":"863:97:5","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":418,"src":"624:338:5","usedErrors":[],"usedEvents":[]}],"src":"101:862:5"},"id":5},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[469]},"id":470,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":419,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":420,"nodeType":"StructuredDocumentation","src":"125:489:6","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":469,"linearizedBaseContracts":[469],"name":"Panic","nameLocation":"665:5:6","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":421,"nodeType":"StructuredDocumentation","src":"677:36:6","text":"@dev generic / unspecified error"},"id":424,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:6","nodeType":"VariableDeclaration","scope":469,"src":"718:40:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":422,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":425,"nodeType":"StructuredDocumentation","src":"764:37:6","text":"@dev used by the assert() builtin"},"id":428,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:6","nodeType":"VariableDeclaration","scope":469,"src":"806:39:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":426,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":429,"nodeType":"StructuredDocumentation","src":"851:41:6","text":"@dev arithmetic underflow or overflow"},"id":432,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:6","nodeType":"VariableDeclaration","scope":469,"src":"897:47:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":430,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:6","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":433,"nodeType":"StructuredDocumentation","src":"950:35:6","text":"@dev division or modulo by zero"},"id":436,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:6","nodeType":"VariableDeclaration","scope":469,"src":"990:49:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":434,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:6","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":437,"nodeType":"StructuredDocumentation","src":"1045:30:6","text":"@dev enum conversion error"},"id":440,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:6","nodeType":"VariableDeclaration","scope":469,"src":"1080:54:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":438,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:6","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":441,"nodeType":"StructuredDocumentation","src":"1140:36:6","text":"@dev invalid encoding in storage"},"id":444,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:6","nodeType":"VariableDeclaration","scope":469,"src":"1181:55:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":442,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:6","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":445,"nodeType":"StructuredDocumentation","src":"1242:24:6","text":"@dev empty array pop"},"id":448,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:6","nodeType":"VariableDeclaration","scope":469,"src":"1271:48:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":446,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:6","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":449,"nodeType":"StructuredDocumentation","src":"1325:35:6","text":"@dev array out of bounds access"},"id":452,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:6","nodeType":"VariableDeclaration","scope":469,"src":"1365:52:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":450,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:6","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":453,"nodeType":"StructuredDocumentation","src":"1423:65:6","text":"@dev resource error (too large allocation or too large array)"},"id":456,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:6","nodeType":"VariableDeclaration","scope":469,"src":"1493:47:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":454,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:6","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":457,"nodeType":"StructuredDocumentation","src":"1546:42:6","text":"@dev calling invalid internal function"},"id":460,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:6","nodeType":"VariableDeclaration","scope":469,"src":"1593:58:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":458,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:6","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":467,"nodeType":"Block","src":"1819:151:6","statements":[{"AST":{"nodeType":"YulBlock","src":"1854:110:6","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1875:4:6","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1881:10:6","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1868:6:6"},"nodeType":"YulFunctionCall","src":"1868:24:6"},"nodeType":"YulExpressionStatement","src":"1868:24:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:4:6","type":"","value":"0x20"},{"name":"code","nodeType":"YulIdentifier","src":"1918:4:6"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1905:6:6"},"nodeType":"YulFunctionCall","src":"1905:18:6"},"nodeType":"YulExpressionStatement","src":"1905:18:6"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1943:4:6","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"1949:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1936:6:6"},"nodeType":"YulFunctionCall","src":"1936:18:6"},"nodeType":"YulExpressionStatement","src":"1936:18:6"}]},"evmVersion":"paris","externalReferences":[{"declaration":463,"isOffset":false,"isSlot":false,"src":"1918:4:6","valueSize":1}],"flags":["memory-safe"],"id":466,"nodeType":"InlineAssembly","src":"1829:135:6"}]},"documentation":{"id":461,"nodeType":"StructuredDocumentation","src":"1658:113:6","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":468,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:6","nodeType":"FunctionDefinition","parameters":{"id":464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":463,"mutability":"mutable","name":"code","nameLocation":"1799:4:6","nodeType":"VariableDeclaration","scope":468,"src":"1791:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":462,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:6"},"returnParameters":{"id":465,"nodeType":"ParameterList","parameters":[],"src":"1819:0:6"},"scope":469,"src":"1776:194:6","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":470,"src":"657:1315:6","usedErrors":[],"usedEvents":[]}],"src":"99:1874:6"},"id":6},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[538]},"id":539,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":471,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:7"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":472,"nodeType":"StructuredDocumentation","src":"135:894:7","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":538,"linearizedBaseContracts":[538],"name":"ReentrancyGuard","nameLocation":"1048:15:7","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":475,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:7","nodeType":"VariableDeclaration","scope":538,"src":"1818:40:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":473,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":478,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:7","nodeType":"VariableDeclaration","scope":538,"src":"1864:36:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":476,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":480,"mutability":"mutable","name":"_status","nameLocation":"1923:7:7","nodeType":"VariableDeclaration","scope":538,"src":"1907:23:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":479,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":481,"nodeType":"StructuredDocumentation","src":"1937:52:7","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":483,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:7","nodeType":"ErrorDefinition","parameters":{"id":482,"nodeType":"ParameterList","parameters":[],"src":"2028:2:7"},"src":"1994:37:7"},{"body":{"id":490,"nodeType":"Block","src":"2051:38:7","statements":[{"expression":{"id":488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":486,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"2061:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":487,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"2071:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":489,"nodeType":"ExpressionStatement","src":"2061:21:7"}]},"id":491,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":484,"nodeType":"ParameterList","parameters":[],"src":"2048:2:7"},"returnParameters":{"id":485,"nodeType":"ParameterList","parameters":[],"src":"2051:0:7"},"scope":538,"src":"2037:52:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":501,"nodeType":"Block","src":"2490:79:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":494,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"2500:19:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":496,"nodeType":"ExpressionStatement","src":"2500:21:7"},{"id":497,"nodeType":"PlaceholderStatement","src":"2531:1:7"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":498,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"2542:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":500,"nodeType":"ExpressionStatement","src":"2542:20:7"}]},"documentation":{"id":492,"nodeType":"StructuredDocumentation","src":"2095:366:7","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":502,"name":"nonReentrant","nameLocation":"2475:12:7","nodeType":"ModifierDefinition","parameters":{"id":493,"nodeType":"ParameterList","parameters":[],"src":"2487:2:7"},"src":"2466:103:7","virtual":false,"visibility":"internal"},{"body":{"id":517,"nodeType":"Block","src":"2614:268:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":505,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"2702:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":506,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"2713:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":512,"nodeType":"IfStatement","src":"2698:86:7","trueBody":{"id":511,"nodeType":"Block","src":"2722:62:7","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":508,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"2743:28:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":510,"nodeType":"RevertStatement","src":"2736:37:7"}]}},{"expression":{"id":515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":513,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"2858:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":514,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"2868:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":516,"nodeType":"ExpressionStatement","src":"2858:17:7"}]},"id":518,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:7","nodeType":"FunctionDefinition","parameters":{"id":503,"nodeType":"ParameterList","parameters":[],"src":"2603:2:7"},"returnParameters":{"id":504,"nodeType":"ParameterList","parameters":[],"src":"2614:0:7"},"scope":538,"src":"2575:307:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":525,"nodeType":"Block","src":"2926:170:7","statements":[{"expression":{"id":523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":521,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"3068:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":522,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"3078:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":524,"nodeType":"ExpressionStatement","src":"3068:21:7"}]},"id":526,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:7","nodeType":"FunctionDefinition","parameters":{"id":519,"nodeType":"ParameterList","parameters":[],"src":"2915:2:7"},"returnParameters":{"id":520,"nodeType":"ParameterList","parameters":[],"src":"2926:0:7"},"scope":538,"src":"2888:208:7","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":536,"nodeType":"Block","src":"3339:42:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":532,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"3356:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":533,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"3367:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":531,"id":535,"nodeType":"Return","src":"3349:25:7"}]},"documentation":{"id":527,"nodeType":"StructuredDocumentation","src":"3102:168:7","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":537,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:7","nodeType":"FunctionDefinition","parameters":{"id":528,"nodeType":"ParameterList","parameters":[],"src":"3307:2:7"},"returnParameters":{"id":531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":530,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":537,"src":"3333:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":529,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:7"},"scope":538,"src":"3275:106:7","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":539,"src":"1030:2353:7","usedErrors":[483],"usedEvents":[]}],"src":"109:3275:7"},"id":7},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[544],"ShortStrings":[755],"StorageSlot":[879]},"id":756,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":540,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:8"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":542,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":756,"sourceUnit":880,"src":"132:46:8","symbolAliases":[{"foreign":{"id":541,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":879,"src":"140:11:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"ShortString","id":544,"name":"ShortString","nameLocation":"353:11:8","nodeType":"UserDefinedValueTypeDefinition","src":"348:28:8","underlyingType":{"id":543,"name":"bytes32","nodeType":"ElementaryTypeName","src":"368:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":545,"nodeType":"StructuredDocumentation","src":"378:876:8","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":755,"linearizedBaseContracts":[755],"name":"ShortStrings","nameLocation":"1263:12:8","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":548,"mutability":"constant","name":"FALLBACK_SENTINEL","nameLocation":"1370:17:8","nodeType":"VariableDeclaration","scope":755,"src":"1345:111:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":546,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1345:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:66:8","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":552,"name":"StringTooLong","nameLocation":"1469:13:8","nodeType":"ErrorDefinition","parameters":{"id":551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":550,"mutability":"mutable","name":"str","nameLocation":"1490:3:8","nodeType":"VariableDeclaration","scope":552,"src":"1483:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":549,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1482:12:8"},"src":"1463:32:8"},{"errorSelector":"b3512b0c","id":554,"name":"InvalidShortString","nameLocation":"1506:18:8","nodeType":"ErrorDefinition","parameters":{"id":553,"nodeType":"ParameterList","parameters":[],"src":"1524:2:8"},"src":"1500:27:8"},{"body":{"id":597,"nodeType":"Block","src":"1786:208:8","statements":[{"assignments":[564],"declarations":[{"constant":false,"id":564,"mutability":"mutable","name":"bstr","nameLocation":"1809:4:8","nodeType":"VariableDeclaration","scope":597,"src":"1796:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":563,"name":"bytes","nodeType":"ElementaryTypeName","src":"1796:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":569,"initialValue":{"arguments":[{"id":567,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"1822:3:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1816:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":565,"name":"bytes","nodeType":"ElementaryTypeName","src":"1816:5:8","typeDescriptions":{}}},"id":568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1816:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1796:30:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":570,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"1840:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1845:6:8","memberName":"length","nodeType":"MemberAccess","src":"1840:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1854:2:8","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1840:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":579,"nodeType":"IfStatement","src":"1836:72:8","trueBody":{"id":578,"nodeType":"Block","src":"1858:50:8","statements":[{"errorCall":{"arguments":[{"id":575,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"1893:3:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":574,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"1879:13:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":577,"nodeType":"RevertStatement","src":"1872:25:8"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":588,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"1965:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1957:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":586,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1957:7:8","typeDescriptions":{}}},"id":589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":585,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1949:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":584,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:8","typeDescriptions":{}}},"id":590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1949:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":591,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"1974:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1979:6:8","memberName":"length","nodeType":"MemberAccess","src":"1974:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1949:36:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1941:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":582,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1941:7:8","typeDescriptions":{}}},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1941:45:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":580,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"1924:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$544_$","typeString":"type(ShortString)"}},"id":581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1936:4:8","memberName":"wrap","nodeType":"MemberAccess","src":"1924:16:8","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$544_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:63:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$544","typeString":"ShortString"}},"functionReturnParameters":562,"id":596,"nodeType":"Return","src":"1917:70:8"}]},"documentation":{"id":555,"nodeType":"StructuredDocumentation","src":"1533:170:8","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":598,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1717:13:8","nodeType":"FunctionDefinition","parameters":{"id":558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":557,"mutability":"mutable","name":"str","nameLocation":"1745:3:8","nodeType":"VariableDeclaration","scope":598,"src":"1731:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":556,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1730:19:8"},"returnParameters":{"id":562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":561,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":598,"src":"1773:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$544","typeString":"ShortString"},"typeName":{"id":560,"nodeType":"UserDefinedTypeName","pathNode":{"id":559,"name":"ShortString","nameLocations":["1773:11:8"],"nodeType":"IdentifierPath","referencedDeclaration":544,"src":"1773:11:8"},"referencedDeclaration":544,"src":"1773:11:8","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$544","typeString":"ShortString"}},"visibility":"internal"}],"src":"1772:13:8"},"scope":755,"src":"1708:286:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":623,"nodeType":"Block","src":"2152:304:8","statements":[{"assignments":[608],"declarations":[{"constant":false,"id":608,"mutability":"mutable","name":"len","nameLocation":"2170:3:8","nodeType":"VariableDeclaration","scope":623,"src":"2162:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":607,"name":"uint256","nodeType":"ElementaryTypeName","src":"2162:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":612,"initialValue":{"arguments":[{"id":610,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"2187:4:8","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$544","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$544","typeString":"ShortString"}],"id":609,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"2176:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$544_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:16:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2162:30:8"},{"assignments":[614],"declarations":[{"constant":false,"id":614,"mutability":"mutable","name":"str","nameLocation":"2294:3:8","nodeType":"VariableDeclaration","scope":623,"src":"2280:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":613,"name":"string","nodeType":"ElementaryTypeName","src":"2280:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":619,"initialValue":{"arguments":[{"hexValue":"3332","id":617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2311:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2300:10:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":615,"name":"string","nodeType":"ElementaryTypeName","src":"2304:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2280:34:8"},{"AST":{"nodeType":"YulBlock","src":"2349:81:8","statements":[{"expression":{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2370:3:8"},{"name":"len","nodeType":"YulIdentifier","src":"2375:3:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2363:6:8"},"nodeType":"YulFunctionCall","src":"2363:16:8"},"nodeType":"YulExpressionStatement","src":"2363:16:8"},{"expression":{"arguments":[{"arguments":[{"name":"str","nodeType":"YulIdentifier","src":"2403:3:8"},{"kind":"number","nodeType":"YulLiteral","src":"2408:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2399:3:8"},"nodeType":"YulFunctionCall","src":"2399:14:8"},{"name":"sstr","nodeType":"YulIdentifier","src":"2415:4:8"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2392:6:8"},"nodeType":"YulFunctionCall","src":"2392:28:8"},"nodeType":"YulExpressionStatement","src":"2392:28:8"}]},"evmVersion":"paris","externalReferences":[{"declaration":608,"isOffset":false,"isSlot":false,"src":"2375:3:8","valueSize":1},{"declaration":602,"isOffset":false,"isSlot":false,"src":"2415:4:8","valueSize":1},{"declaration":614,"isOffset":false,"isSlot":false,"src":"2370:3:8","valueSize":1},{"declaration":614,"isOffset":false,"isSlot":false,"src":"2403:3:8","valueSize":1}],"flags":["memory-safe"],"id":620,"nodeType":"InlineAssembly","src":"2324:106:8"},{"expression":{"id":621,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"2446:3:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":606,"id":622,"nodeType":"Return","src":"2439:10:8"}]},"documentation":{"id":599,"nodeType":"StructuredDocumentation","src":"2000:73:8","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":624,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2087:8:8","nodeType":"FunctionDefinition","parameters":{"id":603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":602,"mutability":"mutable","name":"sstr","nameLocation":"2108:4:8","nodeType":"VariableDeclaration","scope":624,"src":"2096:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$544","typeString":"ShortString"},"typeName":{"id":601,"nodeType":"UserDefinedTypeName","pathNode":{"id":600,"name":"ShortString","nameLocations":["2096:11:8"],"nodeType":"IdentifierPath","referencedDeclaration":544,"src":"2096:11:8"},"referencedDeclaration":544,"src":"2096:11:8","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$544","typeString":"ShortString"}},"visibility":"internal"}],"src":"2095:18:8"},"returnParameters":{"id":606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":605,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":624,"src":"2137:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":604,"name":"string","nodeType":"ElementaryTypeName","src":"2137:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2136:15:8"},"scope":755,"src":"2078:378:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":655,"nodeType":"Block","src":"2598:175:8","statements":[{"assignments":[634],"declarations":[{"constant":false,"id":634,"mutability":"mutable","name":"result","nameLocation":"2616:6:8","nodeType":"VariableDeclaration","scope":655,"src":"2608:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":633,"name":"uint256","nodeType":"ElementaryTypeName","src":"2608:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":644,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":639,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"2652:4:8","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$544","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$544","typeString":"ShortString"}],"expression":{"id":637,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"2633:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$544_$","typeString":"type(ShortString)"}},"id":638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2645:6:8","memberName":"unwrap","nodeType":"MemberAccess","src":"2633:18:8","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$544_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2625:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":635,"name":"uint256","nodeType":"ElementaryTypeName","src":"2625:7:8","typeDescriptions":{}}},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2625:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2661:4:8","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2625:40:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2608:57:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":645,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"2679:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2688:2:8","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2679:11:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":652,"nodeType":"IfStatement","src":"2675:69:8","trueBody":{"id":651,"nodeType":"Block","src":"2692:52:8","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":648,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"2713:18:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":650,"nodeType":"RevertStatement","src":"2706:27:8"}]}},{"expression":{"id":653,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"2760:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":632,"id":654,"nodeType":"Return","src":"2753:13:8"}]},"documentation":{"id":625,"nodeType":"StructuredDocumentation","src":"2462:61:8","text":" @dev Return the length of a `ShortString`."},"id":656,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2537:10:8","nodeType":"FunctionDefinition","parameters":{"id":629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":628,"mutability":"mutable","name":"sstr","nameLocation":"2560:4:8","nodeType":"VariableDeclaration","scope":656,"src":"2548:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$544","typeString":"ShortString"},"typeName":{"id":627,"nodeType":"UserDefinedTypeName","pathNode":{"id":626,"name":"ShortString","nameLocations":["2548:11:8"],"nodeType":"IdentifierPath","referencedDeclaration":544,"src":"2548:11:8"},"referencedDeclaration":544,"src":"2548:11:8","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$544","typeString":"ShortString"}},"visibility":"internal"}],"src":"2547:18:8"},"returnParameters":{"id":632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":631,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":656,"src":"2589:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":630,"name":"uint256","nodeType":"ElementaryTypeName","src":"2589:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2588:9:8"},"scope":755,"src":"2528:245:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":695,"nodeType":"Block","src":"2996:231:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":669,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"3016:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3010:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":667,"name":"bytes","nodeType":"ElementaryTypeName","src":"3010:5:8","typeDescriptions":{}}},"id":670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3010:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3023:6:8","memberName":"length","nodeType":"MemberAccess","src":"3010:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3032:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3010:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":693,"nodeType":"Block","src":"3094:127:8","statements":[{"expression":{"id":686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":682,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"3134:5:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":679,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":879,"src":"3108:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$879_$","typeString":"type(library StorageSlot)"}},"id":681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3120:13:8","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":856,"src":"3108:25:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$776_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3108:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$776_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":684,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3141:5:8","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":775,"src":"3108:38:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"3149:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3108:46:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":687,"nodeType":"ExpressionStatement","src":"3108:46:8"},{"expression":{"arguments":[{"id":690,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"3192:17:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":688,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"3175:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$544_$","typeString":"type(ShortString)"}},"id":689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3187:4:8","memberName":"wrap","nodeType":"MemberAccess","src":"3175:16:8","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$544_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3175:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$544","typeString":"ShortString"}},"functionReturnParameters":666,"id":692,"nodeType":"Return","src":"3168:42:8"}]},"id":694,"nodeType":"IfStatement","src":"3006:215:8","trueBody":{"id":678,"nodeType":"Block","src":"3036:52:8","statements":[{"expression":{"arguments":[{"id":675,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":659,"src":"3071:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":674,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"3057:13:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$544_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$544","typeString":"ShortString"}},"functionReturnParameters":666,"id":677,"nodeType":"Return","src":"3050:27:8"}]}}]},"documentation":{"id":657,"nodeType":"StructuredDocumentation","src":"2779:103:8","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":696,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2896:25:8","nodeType":"FunctionDefinition","parameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":659,"mutability":"mutable","name":"value","nameLocation":"2936:5:8","nodeType":"VariableDeclaration","scope":696,"src":"2922:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":658,"name":"string","nodeType":"ElementaryTypeName","src":"2922:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":661,"mutability":"mutable","name":"store","nameLocation":"2958:5:8","nodeType":"VariableDeclaration","scope":696,"src":"2943:20:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":660,"name":"string","nodeType":"ElementaryTypeName","src":"2943:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2921:43:8"},"returnParameters":{"id":666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":665,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":696,"src":"2983:11:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$544","typeString":"ShortString"},"typeName":{"id":664,"nodeType":"UserDefinedTypeName","pathNode":{"id":663,"name":"ShortString","nameLocations":["2983:11:8"],"nodeType":"IdentifierPath","referencedDeclaration":544,"src":"2983:11:8"},"referencedDeclaration":544,"src":"2983:11:8","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$544","typeString":"ShortString"}},"visibility":"internal"}],"src":"2982:13:8"},"scope":755,"src":"2887:340:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":722,"nodeType":"Block","src":"3477:158:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":709,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"3510:5:8","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$544","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$544","typeString":"ShortString"}],"expression":{"id":707,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"3491:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$544_$","typeString":"type(ShortString)"}},"id":708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3503:6:8","memberName":"unwrap","nodeType":"MemberAccess","src":"3491:18:8","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$544_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3491:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":711,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"3520:17:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3491:46:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":720,"nodeType":"Block","src":"3592:37:8","statements":[{"expression":{"id":718,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"3613:5:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":706,"id":719,"nodeType":"Return","src":"3606:12:8"}]},"id":721,"nodeType":"IfStatement","src":"3487:142:8","trueBody":{"id":717,"nodeType":"Block","src":"3539:47:8","statements":[{"expression":{"arguments":[{"id":714,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"3569:5:8","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$544","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$544","typeString":"ShortString"}],"id":713,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"3560:8:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$544_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3560:15:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":706,"id":716,"nodeType":"Return","src":"3553:22:8"}]}}]},"documentation":{"id":697,"nodeType":"StructuredDocumentation","src":"3233:130:8","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {toShortStringWithFallback}."},"id":723,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3377:20:8","nodeType":"FunctionDefinition","parameters":{"id":703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":700,"mutability":"mutable","name":"value","nameLocation":"3410:5:8","nodeType":"VariableDeclaration","scope":723,"src":"3398:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$544","typeString":"ShortString"},"typeName":{"id":699,"nodeType":"UserDefinedTypeName","pathNode":{"id":698,"name":"ShortString","nameLocations":["3398:11:8"],"nodeType":"IdentifierPath","referencedDeclaration":544,"src":"3398:11:8"},"referencedDeclaration":544,"src":"3398:11:8","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$544","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":702,"mutability":"mutable","name":"store","nameLocation":"3432:5:8","nodeType":"VariableDeclaration","scope":723,"src":"3417:20:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":701,"name":"string","nodeType":"ElementaryTypeName","src":"3417:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3397:41:8"},"returnParameters":{"id":706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":705,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":723,"src":"3462:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":704,"name":"string","nodeType":"ElementaryTypeName","src":"3462:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3461:15:8"},"scope":755,"src":"3368:267:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":753,"nodeType":"Block","src":"4125:174:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":736,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"4158:5:8","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$544","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$544","typeString":"ShortString"}],"expression":{"id":734,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"4139:11:8","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$544_$","typeString":"type(ShortString)"}},"id":735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4151:6:8","memberName":"unwrap","nodeType":"MemberAccess","src":"4139:18:8","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$544_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4139:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":738,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"4168:17:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4139:46:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":751,"nodeType":"Block","src":"4242:51:8","statements":[{"expression":{"expression":{"arguments":[{"id":747,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"4269:5:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4263:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":745,"name":"bytes","nodeType":"ElementaryTypeName","src":"4263:5:8","typeDescriptions":{}}},"id":748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4263:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4276:6:8","memberName":"length","nodeType":"MemberAccess","src":"4263:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":733,"id":750,"nodeType":"Return","src":"4256:26:8"}]},"id":752,"nodeType":"IfStatement","src":"4135:158:8","trueBody":{"id":744,"nodeType":"Block","src":"4187:49:8","statements":[{"expression":{"arguments":[{"id":741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"4219:5:8","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$544","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$544","typeString":"ShortString"}],"id":740,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"4208:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$544_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4208:17:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":733,"id":743,"nodeType":"Return","src":"4201:24:8"}]}}]},"documentation":{"id":724,"nodeType":"StructuredDocumentation","src":"3641:374:8","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {toShortStringWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":754,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4029:22:8","nodeType":"FunctionDefinition","parameters":{"id":730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":727,"mutability":"mutable","name":"value","nameLocation":"4064:5:8","nodeType":"VariableDeclaration","scope":754,"src":"4052:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$544","typeString":"ShortString"},"typeName":{"id":726,"nodeType":"UserDefinedTypeName","pathNode":{"id":725,"name":"ShortString","nameLocations":["4052:11:8"],"nodeType":"IdentifierPath","referencedDeclaration":544,"src":"4052:11:8"},"referencedDeclaration":544,"src":"4052:11:8","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$544","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":729,"mutability":"mutable","name":"store","nameLocation":"4086:5:8","nodeType":"VariableDeclaration","scope":754,"src":"4071:20:8","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":728,"name":"string","nodeType":"ElementaryTypeName","src":"4071:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4051:41:8"},"returnParameters":{"id":733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":732,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":754,"src":"4116:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":731,"name":"uint256","nodeType":"ElementaryTypeName","src":"4116:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4115:9:8"},"scope":755,"src":"4020:279:8","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":756,"src":"1255:3046:8","usedErrors":[552,554],"usedEvents":[]}],"src":"106:4196:8"},"id":8},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[879]},"id":880,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":757,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":758,"nodeType":"StructuredDocumentation","src":"219:1187:9","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":879,"linearizedBaseContracts":[879],"name":"StorageSlot","nameLocation":"1415:11:9","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":761,"members":[{"constant":false,"id":760,"mutability":"mutable","name":"value","nameLocation":"1470:5:9","nodeType":"VariableDeclaration","scope":761,"src":"1462:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":759,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:9","nodeType":"StructDefinition","scope":879,"src":"1433:49:9","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":764,"members":[{"constant":false,"id":763,"mutability":"mutable","name":"value","nameLocation":"1522:5:9","nodeType":"VariableDeclaration","scope":764,"src":"1517:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":762,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:9","nodeType":"StructDefinition","scope":879,"src":"1488:46:9","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":767,"members":[{"constant":false,"id":766,"mutability":"mutable","name":"value","nameLocation":"1577:5:9","nodeType":"VariableDeclaration","scope":767,"src":"1569:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":765,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:9","nodeType":"StructDefinition","scope":879,"src":"1540:49:9","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":770,"members":[{"constant":false,"id":769,"mutability":"mutable","name":"value","nameLocation":"1632:5:9","nodeType":"VariableDeclaration","scope":770,"src":"1624:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":768,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:9","nodeType":"StructDefinition","scope":879,"src":"1595:49:9","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":773,"members":[{"constant":false,"id":772,"mutability":"mutable","name":"value","nameLocation":"1685:5:9","nodeType":"VariableDeclaration","scope":773,"src":"1678:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":771,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:9","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:9","nodeType":"StructDefinition","scope":879,"src":"1650:47:9","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":776,"members":[{"constant":false,"id":775,"mutability":"mutable","name":"value","nameLocation":"1738:5:9","nodeType":"VariableDeclaration","scope":776,"src":"1731:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":774,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:9","nodeType":"StructDefinition","scope":879,"src":"1703:47:9","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":779,"members":[{"constant":false,"id":778,"mutability":"mutable","name":"value","nameLocation":"1789:5:9","nodeType":"VariableDeclaration","scope":779,"src":"1783:11:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":777,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:9","nodeType":"StructDefinition","scope":879,"src":"1756:45:9","visibility":"public"},{"body":{"id":789,"nodeType":"Block","src":"1983:79:9","statements":[{"AST":{"nodeType":"YulBlock","src":"2018:38:9","statements":[{"nodeType":"YulAssignment","src":"2032:14:9","value":{"name":"slot","nodeType":"YulIdentifier","src":"2042:4:9"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2032:6:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":786,"isOffset":false,"isSlot":true,"src":"2032:6:9","suffix":"slot","valueSize":1},{"declaration":782,"isOffset":false,"isSlot":false,"src":"2042:4:9","valueSize":1}],"flags":["memory-safe"],"id":788,"nodeType":"InlineAssembly","src":"1993:63:9"}]},"documentation":{"id":780,"nodeType":"StructuredDocumentation","src":"1807:87:9","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":790,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:9","nodeType":"FunctionDefinition","parameters":{"id":783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":782,"mutability":"mutable","name":"slot","nameLocation":"1931:4:9","nodeType":"VariableDeclaration","scope":790,"src":"1923:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":781,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:9"},"returnParameters":{"id":787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":786,"mutability":"mutable","name":"r","nameLocation":"1980:1:9","nodeType":"VariableDeclaration","scope":790,"src":"1960:21:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$761_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":785,"nodeType":"UserDefinedTypeName","pathNode":{"id":784,"name":"AddressSlot","nameLocations":["1960:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":761,"src":"1960:11:9"},"referencedDeclaration":761,"src":"1960:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$761_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:9"},"scope":879,"src":"1899:163:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":800,"nodeType":"Block","src":"2243:79:9","statements":[{"AST":{"nodeType":"YulBlock","src":"2278:38:9","statements":[{"nodeType":"YulAssignment","src":"2292:14:9","value":{"name":"slot","nodeType":"YulIdentifier","src":"2302:4:9"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2292:6:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":797,"isOffset":false,"isSlot":true,"src":"2292:6:9","suffix":"slot","valueSize":1},{"declaration":793,"isOffset":false,"isSlot":false,"src":"2302:4:9","valueSize":1}],"flags":["memory-safe"],"id":799,"nodeType":"InlineAssembly","src":"2253:63:9"}]},"documentation":{"id":791,"nodeType":"StructuredDocumentation","src":"2068:86:9","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":801,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:9","nodeType":"FunctionDefinition","parameters":{"id":794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":793,"mutability":"mutable","name":"slot","nameLocation":"2191:4:9","nodeType":"VariableDeclaration","scope":801,"src":"2183:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":792,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:9"},"returnParameters":{"id":798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":797,"mutability":"mutable","name":"r","nameLocation":"2240:1:9","nodeType":"VariableDeclaration","scope":801,"src":"2220:21:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$764_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":796,"nodeType":"UserDefinedTypeName","pathNode":{"id":795,"name":"BooleanSlot","nameLocations":["2220:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":764,"src":"2220:11:9"},"referencedDeclaration":764,"src":"2220:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$764_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:9"},"scope":879,"src":"2159:163:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":811,"nodeType":"Block","src":"2503:79:9","statements":[{"AST":{"nodeType":"YulBlock","src":"2538:38:9","statements":[{"nodeType":"YulAssignment","src":"2552:14:9","value":{"name":"slot","nodeType":"YulIdentifier","src":"2562:4:9"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2552:6:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":808,"isOffset":false,"isSlot":true,"src":"2552:6:9","suffix":"slot","valueSize":1},{"declaration":804,"isOffset":false,"isSlot":false,"src":"2562:4:9","valueSize":1}],"flags":["memory-safe"],"id":810,"nodeType":"InlineAssembly","src":"2513:63:9"}]},"documentation":{"id":802,"nodeType":"StructuredDocumentation","src":"2328:86:9","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":812,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:9","nodeType":"FunctionDefinition","parameters":{"id":805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":804,"mutability":"mutable","name":"slot","nameLocation":"2451:4:9","nodeType":"VariableDeclaration","scope":812,"src":"2443:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":803,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:9"},"returnParameters":{"id":809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":808,"mutability":"mutable","name":"r","nameLocation":"2500:1:9","nodeType":"VariableDeclaration","scope":812,"src":"2480:21:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$767_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":807,"nodeType":"UserDefinedTypeName","pathNode":{"id":806,"name":"Bytes32Slot","nameLocations":["2480:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":767,"src":"2480:11:9"},"referencedDeclaration":767,"src":"2480:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$767_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:9"},"scope":879,"src":"2419:163:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":822,"nodeType":"Block","src":"2763:79:9","statements":[{"AST":{"nodeType":"YulBlock","src":"2798:38:9","statements":[{"nodeType":"YulAssignment","src":"2812:14:9","value":{"name":"slot","nodeType":"YulIdentifier","src":"2822:4:9"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2812:6:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":819,"isOffset":false,"isSlot":true,"src":"2812:6:9","suffix":"slot","valueSize":1},{"declaration":815,"isOffset":false,"isSlot":false,"src":"2822:4:9","valueSize":1}],"flags":["memory-safe"],"id":821,"nodeType":"InlineAssembly","src":"2773:63:9"}]},"documentation":{"id":813,"nodeType":"StructuredDocumentation","src":"2588:86:9","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":823,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:9","nodeType":"FunctionDefinition","parameters":{"id":816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":815,"mutability":"mutable","name":"slot","nameLocation":"2711:4:9","nodeType":"VariableDeclaration","scope":823,"src":"2703:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":814,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:9"},"returnParameters":{"id":820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":819,"mutability":"mutable","name":"r","nameLocation":"2760:1:9","nodeType":"VariableDeclaration","scope":823,"src":"2740:21:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$770_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":818,"nodeType":"UserDefinedTypeName","pathNode":{"id":817,"name":"Uint256Slot","nameLocations":["2740:11:9"],"nodeType":"IdentifierPath","referencedDeclaration":770,"src":"2740:11:9"},"referencedDeclaration":770,"src":"2740:11:9","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$770_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:9"},"scope":879,"src":"2679:163:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":833,"nodeType":"Block","src":"3020:79:9","statements":[{"AST":{"nodeType":"YulBlock","src":"3055:38:9","statements":[{"nodeType":"YulAssignment","src":"3069:14:9","value":{"name":"slot","nodeType":"YulIdentifier","src":"3079:4:9"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3069:6:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":830,"isOffset":false,"isSlot":true,"src":"3069:6:9","suffix":"slot","valueSize":1},{"declaration":826,"isOffset":false,"isSlot":false,"src":"3079:4:9","valueSize":1}],"flags":["memory-safe"],"id":832,"nodeType":"InlineAssembly","src":"3030:63:9"}]},"documentation":{"id":824,"nodeType":"StructuredDocumentation","src":"2848:85:9","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":834,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:9","nodeType":"FunctionDefinition","parameters":{"id":827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":826,"mutability":"mutable","name":"slot","nameLocation":"2969:4:9","nodeType":"VariableDeclaration","scope":834,"src":"2961:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":825,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:9"},"returnParameters":{"id":831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":830,"mutability":"mutable","name":"r","nameLocation":"3017:1:9","nodeType":"VariableDeclaration","scope":834,"src":"2998:20:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$773_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":829,"nodeType":"UserDefinedTypeName","pathNode":{"id":828,"name":"Int256Slot","nameLocations":["2998:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":773,"src":"2998:10:9"},"referencedDeclaration":773,"src":"2998:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$773_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:9"},"scope":879,"src":"2938:161:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":844,"nodeType":"Block","src":"3277:79:9","statements":[{"AST":{"nodeType":"YulBlock","src":"3312:38:9","statements":[{"nodeType":"YulAssignment","src":"3326:14:9","value":{"name":"slot","nodeType":"YulIdentifier","src":"3336:4:9"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3326:6:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":841,"isOffset":false,"isSlot":true,"src":"3326:6:9","suffix":"slot","valueSize":1},{"declaration":837,"isOffset":false,"isSlot":false,"src":"3336:4:9","valueSize":1}],"flags":["memory-safe"],"id":843,"nodeType":"InlineAssembly","src":"3287:63:9"}]},"documentation":{"id":835,"nodeType":"StructuredDocumentation","src":"3105:85:9","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":845,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:9","nodeType":"FunctionDefinition","parameters":{"id":838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":837,"mutability":"mutable","name":"slot","nameLocation":"3226:4:9","nodeType":"VariableDeclaration","scope":845,"src":"3218:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":836,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:9"},"returnParameters":{"id":842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":841,"mutability":"mutable","name":"r","nameLocation":"3274:1:9","nodeType":"VariableDeclaration","scope":845,"src":"3255:20:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$776_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":840,"nodeType":"UserDefinedTypeName","pathNode":{"id":839,"name":"StringSlot","nameLocations":["3255:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":776,"src":"3255:10:9"},"referencedDeclaration":776,"src":"3255:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$776_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:9"},"scope":879,"src":"3195:161:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":855,"nodeType":"Block","src":"3558:85:9","statements":[{"AST":{"nodeType":"YulBlock","src":"3593:44:9","statements":[{"nodeType":"YulAssignment","src":"3607:20:9","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3617:10:9"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3607:6:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":852,"isOffset":false,"isSlot":true,"src":"3607:6:9","suffix":"slot","valueSize":1},{"declaration":848,"isOffset":false,"isSlot":true,"src":"3617:10:9","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":854,"nodeType":"InlineAssembly","src":"3568:69:9"}]},"documentation":{"id":846,"nodeType":"StructuredDocumentation","src":"3362:101:9","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":856,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:9","nodeType":"FunctionDefinition","parameters":{"id":849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":848,"mutability":"mutable","name":"store","nameLocation":"3506:5:9","nodeType":"VariableDeclaration","scope":856,"src":"3491:20:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":847,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:9"},"returnParameters":{"id":853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":852,"mutability":"mutable","name":"r","nameLocation":"3555:1:9","nodeType":"VariableDeclaration","scope":856,"src":"3536:20:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$776_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":851,"nodeType":"UserDefinedTypeName","pathNode":{"id":850,"name":"StringSlot","nameLocations":["3536:10:9"],"nodeType":"IdentifierPath","referencedDeclaration":776,"src":"3536:10:9"},"referencedDeclaration":776,"src":"3536:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$776_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:9"},"scope":879,"src":"3468:175:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":866,"nodeType":"Block","src":"3818:79:9","statements":[{"AST":{"nodeType":"YulBlock","src":"3853:38:9","statements":[{"nodeType":"YulAssignment","src":"3867:14:9","value":{"name":"slot","nodeType":"YulIdentifier","src":"3877:4:9"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3867:6:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":863,"isOffset":false,"isSlot":true,"src":"3867:6:9","suffix":"slot","valueSize":1},{"declaration":859,"isOffset":false,"isSlot":false,"src":"3877:4:9","valueSize":1}],"flags":["memory-safe"],"id":865,"nodeType":"InlineAssembly","src":"3828:63:9"}]},"documentation":{"id":857,"nodeType":"StructuredDocumentation","src":"3649:84:9","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":867,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:9","nodeType":"FunctionDefinition","parameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":859,"mutability":"mutable","name":"slot","nameLocation":"3768:4:9","nodeType":"VariableDeclaration","scope":867,"src":"3760:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":858,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:9","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:9"},"returnParameters":{"id":864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":863,"mutability":"mutable","name":"r","nameLocation":"3815:1:9","nodeType":"VariableDeclaration","scope":867,"src":"3797:19:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$779_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":862,"nodeType":"UserDefinedTypeName","pathNode":{"id":861,"name":"BytesSlot","nameLocations":["3797:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":779,"src":"3797:9:9"},"referencedDeclaration":779,"src":"3797:9:9","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$779_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:9"},"scope":879,"src":"3738:159:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":877,"nodeType":"Block","src":"4094:85:9","statements":[{"AST":{"nodeType":"YulBlock","src":"4129:44:9","statements":[{"nodeType":"YulAssignment","src":"4143:20:9","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"4153:10:9"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"4143:6:9"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":874,"isOffset":false,"isSlot":true,"src":"4143:6:9","suffix":"slot","valueSize":1},{"declaration":870,"isOffset":false,"isSlot":true,"src":"4153:10:9","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":876,"nodeType":"InlineAssembly","src":"4104:69:9"}]},"documentation":{"id":868,"nodeType":"StructuredDocumentation","src":"3903:99:9","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":878,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:9","nodeType":"FunctionDefinition","parameters":{"id":871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":870,"mutability":"mutable","name":"store","nameLocation":"4043:5:9","nodeType":"VariableDeclaration","scope":878,"src":"4029:19:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":869,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:9"},"returnParameters":{"id":875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":874,"mutability":"mutable","name":"r","nameLocation":"4091:1:9","nodeType":"VariableDeclaration","scope":878,"src":"4073:19:9","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$779_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":873,"nodeType":"UserDefinedTypeName","pathNode":{"id":872,"name":"BytesSlot","nameLocations":["4073:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":779,"src":"4073:9:9"},"referencedDeclaration":779,"src":"4073:9:9","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$779_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:9"},"scope":879,"src":"4007:172:9","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":880,"src":"1407:2774:9","usedErrors":[],"usedEvents":[]}],"src":"193:3989:9"},"id":9},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[4575],"SafeCast":[6340],"SignedMath":[6484],"Strings":[2281]},"id":2282,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":881,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:10"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":883,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2282,"sourceUnit":4576,"src":"127:37:10","symbolAliases":[{"foreign":{"id":882,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4575,"src":"135:4:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":885,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2282,"sourceUnit":6341,"src":"165:45:10","symbolAliases":[{"foreign":{"id":884,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6340,"src":"173:8:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":887,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2282,"sourceUnit":6485,"src":"211:49:10","symbolAliases":[{"foreign":{"id":886,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6484,"src":"219:10:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":888,"nodeType":"StructuredDocumentation","src":"262:34:10","text":" @dev String operations."},"fullyImplemented":true,"id":2281,"linearizedBaseContracts":[2281],"name":"Strings","nameLocation":"305:7:10","nodeType":"ContractDefinition","nodes":[{"global":false,"id":890,"libraryName":{"id":889,"name":"SafeCast","nameLocations":["325:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":6340,"src":"325:8:10"},"nodeType":"UsingForDirective","src":"319:21:10"},{"constant":true,"id":893,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:10","nodeType":"VariableDeclaration","scope":2281,"src":"346:56:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":891,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:10","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":896,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:10","nodeType":"VariableDeclaration","scope":2281,"src":"408:42:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":894,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:10","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":932,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:10","nodeType":"VariableDeclaration","scope":2281,"src":"456:302:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":897,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":926,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":900,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:10","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":901,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:10","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:10","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:10","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":905,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:10","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:10","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:10","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":910,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:10","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:10","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:10","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:10","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":915,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:10","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:10","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:10","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:10","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":920,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:10","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:10","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:10","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:10","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":925,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:10","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:10","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":929,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:10","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:10","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":930,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:10","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:10","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":933,"nodeType":"StructuredDocumentation","src":"778:81:10","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":939,"name":"StringsInsufficientHexLength","nameLocation":"870:28:10","nodeType":"ErrorDefinition","parameters":{"id":938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":935,"mutability":"mutable","name":"value","nameLocation":"907:5:10","nodeType":"VariableDeclaration","scope":939,"src":"899:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":934,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":937,"mutability":"mutable","name":"length","nameLocation":"922:6:10","nodeType":"VariableDeclaration","scope":939,"src":"914:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":936,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:10"},"src":"864:66:10"},{"documentation":{"id":940,"nodeType":"StructuredDocumentation","src":"936:108:10","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":942,"name":"StringsInvalidChar","nameLocation":"1055:18:10","nodeType":"ErrorDefinition","parameters":{"id":941,"nodeType":"ParameterList","parameters":[],"src":"1073:2:10"},"src":"1049:27:10"},{"documentation":{"id":943,"nodeType":"StructuredDocumentation","src":"1082:84:10","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":945,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:10","nodeType":"ErrorDefinition","parameters":{"id":944,"nodeType":"ParameterList","parameters":[],"src":"1204:2:10"},"src":"1171:36:10"},{"body":{"id":992,"nodeType":"Block","src":"1379:561:10","statements":[{"id":991,"nodeType":"UncheckedBlock","src":"1389:545:10","statements":[{"assignments":[954],"declarations":[{"constant":false,"id":954,"mutability":"mutable","name":"length","nameLocation":"1421:6:10","nodeType":"VariableDeclaration","scope":991,"src":"1413:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":953,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":961,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":957,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"1441:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":955,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4575,"src":"1430:4:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4575_$","typeString":"type(library Math)"}},"id":956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:10","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":4407,"src":"1430:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:10"},{"assignments":[963],"declarations":[{"constant":false,"id":963,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:10","nodeType":"VariableDeclaration","scope":991,"src":"1465:20:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":962,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":968,"initialValue":{"arguments":[{"id":966,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"1499:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":964,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:10"},{"assignments":[970],"declarations":[{"constant":false,"id":970,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:10","nodeType":"VariableDeclaration","scope":991,"src":"1520:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":969,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":971,"nodeType":"VariableDeclarationStatement","src":"1520:11:10"},{"AST":{"nodeType":"YulBlock","src":"1570:67:10","statements":[{"nodeType":"YulAssignment","src":"1588:35:10","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"1599:6:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1611:2:10","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"1615:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1607:3:10"},"nodeType":"YulFunctionCall","src":"1607:15:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1595:3:10"},"nodeType":"YulFunctionCall","src":"1595:28:10"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"1588:3:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":963,"isOffset":false,"isSlot":false,"src":"1599:6:10","valueSize":1},{"declaration":954,"isOffset":false,"isSlot":false,"src":"1615:6:10","valueSize":1},{"declaration":970,"isOffset":false,"isSlot":false,"src":"1588:3:10","valueSize":1}],"flags":["memory-safe"],"id":972,"nodeType":"InlineAssembly","src":"1545:92:10"},{"body":{"id":987,"nodeType":"Block","src":"1663:234:10","statements":[{"expression":{"id":975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1681:5:10","subExpression":{"id":974,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"1681:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":976,"nodeType":"ExpressionStatement","src":"1681:5:10"},{"AST":{"nodeType":"YulBlock","src":"1729:86:10","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1759:3:10"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1773:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"1780:2:10","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1769:3:10"},"nodeType":"YulFunctionCall","src":"1769:14:10"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1785:10:10"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1764:4:10"},"nodeType":"YulFunctionCall","src":"1764:32:10"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1751:7:10"},"nodeType":"YulFunctionCall","src":"1751:46:10"},"nodeType":"YulExpressionStatement","src":"1751:46:10"}]},"evmVersion":"paris","externalReferences":[{"declaration":893,"isOffset":false,"isSlot":false,"src":"1785:10:10","valueSize":1},{"declaration":970,"isOffset":false,"isSlot":false,"src":"1759:3:10","valueSize":1},{"declaration":948,"isOffset":false,"isSlot":false,"src":"1773:5:10","valueSize":1}],"flags":["memory-safe"],"id":977,"nodeType":"InlineAssembly","src":"1704:111:10"},{"expression":{"id":980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":978,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"1832:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1841:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1832:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":981,"nodeType":"ExpressionStatement","src":"1832:11:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":982,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"1865:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1865:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":986,"nodeType":"IfStatement","src":"1861:21:10","trueBody":{"id":985,"nodeType":"Break","src":"1877:5:10"}}]},"condition":{"hexValue":"74727565","id":973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1657:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":988,"nodeType":"WhileStatement","src":"1650:247:10"},{"expression":{"id":989,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":963,"src":"1917:6:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":952,"id":990,"nodeType":"Return","src":"1910:13:10"}]}]},"documentation":{"id":946,"nodeType":"StructuredDocumentation","src":"1213:90:10","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":993,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:10","nodeType":"FunctionDefinition","parameters":{"id":949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":948,"mutability":"mutable","name":"value","nameLocation":"1334:5:10","nodeType":"VariableDeclaration","scope":993,"src":"1326:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":947,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:10"},"returnParameters":{"id":952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":951,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":993,"src":"1364:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":950,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:10"},"scope":2281,"src":"1308:632:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1018,"nodeType":"Block","src":"2116:92:10","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1004,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"2147:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2155:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2147:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2165:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2147:20:10","trueExpression":{"hexValue":"2d","id":1007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2159:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1013,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"2193:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1011,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6484,"src":"2178:10:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$6484_$","typeString":"type(library SignedMath)"}},"id":1012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2189:3:10","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":6483,"src":"2178:14:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2178:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1010,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"2169:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2169:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2133:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1001,"name":"string","nodeType":"ElementaryTypeName","src":"2133:6:10","typeDescriptions":{}}},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2140:6:10","memberName":"concat","nodeType":"MemberAccess","src":"2133:13:10","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2133:68:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1000,"id":1017,"nodeType":"Return","src":"2126:75:10"}]},"documentation":{"id":994,"nodeType":"StructuredDocumentation","src":"1946:89:10","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1019,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2049:14:10","nodeType":"FunctionDefinition","parameters":{"id":997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":996,"mutability":"mutable","name":"value","nameLocation":"2071:5:10","nodeType":"VariableDeclaration","scope":1019,"src":"2064:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":995,"name":"int256","nodeType":"ElementaryTypeName","src":"2064:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2063:14:10"},"returnParameters":{"id":1000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":999,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1019,"src":"2101:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":998,"name":"string","nodeType":"ElementaryTypeName","src":"2101:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2100:15:10"},"scope":2281,"src":"2040:168:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1038,"nodeType":"Block","src":"2387:100:10","statements":[{"id":1037,"nodeType":"UncheckedBlock","src":"2397:84:10","statements":[{"expression":{"arguments":[{"id":1028,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"2440:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1031,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"2459:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1029,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4575,"src":"2447:4:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4575_$","typeString":"type(library Math)"}},"id":1030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2452:6:10","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":4518,"src":"2447:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2447:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2468:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2447:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1027,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1039,1122,1142],"referencedDeclaration":1122,"src":"2428:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2428:42:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1026,"id":1036,"nodeType":"Return","src":"2421:49:10"}]}]},"documentation":{"id":1020,"nodeType":"StructuredDocumentation","src":"2214:94:10","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1039,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2322:11:10","nodeType":"FunctionDefinition","parameters":{"id":1023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1022,"mutability":"mutable","name":"value","nameLocation":"2342:5:10","nodeType":"VariableDeclaration","scope":1039,"src":"2334:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1021,"name":"uint256","nodeType":"ElementaryTypeName","src":"2334:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2333:15:10"},"returnParameters":{"id":1026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1025,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1039,"src":"2372:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1024,"name":"string","nodeType":"ElementaryTypeName","src":"2372:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2371:15:10"},"scope":2281,"src":"2313:174:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1121,"nodeType":"Block","src":"2700:435:10","statements":[{"assignments":[1050],"declarations":[{"constant":false,"id":1050,"mutability":"mutable","name":"localValue","nameLocation":"2718:10:10","nodeType":"VariableDeclaration","scope":1121,"src":"2710:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1049,"name":"uint256","nodeType":"ElementaryTypeName","src":"2710:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1052,"initialValue":{"id":1051,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"2731:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2710:26:10"},{"assignments":[1054],"declarations":[{"constant":false,"id":1054,"mutability":"mutable","name":"buffer","nameLocation":"2759:6:10","nodeType":"VariableDeclaration","scope":1121,"src":"2746:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1053,"name":"bytes","nodeType":"ElementaryTypeName","src":"2746:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1063,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2778:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1058,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"2782:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2778:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2791:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2778:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2768:9:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1055,"name":"bytes","nodeType":"ElementaryTypeName","src":"2772:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2768:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2746:47:10"},{"expression":{"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1064,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"2803:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1066,"indexExpression":{"hexValue":"30","id":1065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2810:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2803:9:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2815:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2803:15:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1069,"nodeType":"ExpressionStatement","src":"2803:15:10"},{"expression":{"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1070,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"2828:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1072,"indexExpression":{"hexValue":"31","id":1071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2835:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2828:9:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2840:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2828:15:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1075,"nodeType":"ExpressionStatement","src":"2828:15:10"},{"body":{"id":1104,"nodeType":"Block","src":"2898:95:10","statements":[{"expression":{"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1090,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"2912:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1092,"indexExpression":{"id":1091,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"2919:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2912:9:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1093,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"2924:10:10","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1097,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1094,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"2935:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2948:3:10","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2935:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2924:28:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2912:40:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1099,"nodeType":"ExpressionStatement","src":"2912:40:10"},{"expression":{"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1100,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"2966:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2981:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2966:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1103,"nodeType":"ExpressionStatement","src":"2966:16:10"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1084,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"2886:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2890:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2886:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1105,"initializationExpression":{"assignments":[1077],"declarations":[{"constant":false,"id":1077,"mutability":"mutable","name":"i","nameLocation":"2866:1:10","nodeType":"VariableDeclaration","scope":1105,"src":"2858:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1076,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1083,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2870:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1079,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"2874:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2870:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2883:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2870:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2858:26:10"},"loopExpression":{"expression":{"id":1088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2893:3:10","subExpression":{"id":1087,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"2895:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1089,"nodeType":"ExpressionStatement","src":"2893:3:10"},"nodeType":"ForStatement","src":"2853:140:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1106,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"3006:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3020:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3006:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1115,"nodeType":"IfStatement","src":"3002:96:10","trueBody":{"id":1114,"nodeType":"Block","src":"3023:75:10","statements":[{"errorCall":{"arguments":[{"id":1110,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"3073:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1111,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"3080:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1109,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":939,"src":"3044:28:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":1112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3044:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1113,"nodeType":"RevertStatement","src":"3037:50:10"}]}},{"expression":{"arguments":[{"id":1118,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"3121:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3114:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1116,"name":"string","nodeType":"ElementaryTypeName","src":"3114:6:10","typeDescriptions":{}}},"id":1119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3114:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1048,"id":1120,"nodeType":"Return","src":"3107:21:10"}]},"documentation":{"id":1040,"nodeType":"StructuredDocumentation","src":"2493:112:10","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1122,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2619:11:10","nodeType":"FunctionDefinition","parameters":{"id":1045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1042,"mutability":"mutable","name":"value","nameLocation":"2639:5:10","nodeType":"VariableDeclaration","scope":1122,"src":"2631:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1041,"name":"uint256","nodeType":"ElementaryTypeName","src":"2631:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1044,"mutability":"mutable","name":"length","nameLocation":"2654:6:10","nodeType":"VariableDeclaration","scope":1122,"src":"2646:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1043,"name":"uint256","nodeType":"ElementaryTypeName","src":"2646:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2630:31:10"},"returnParameters":{"id":1048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1047,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1122,"src":"2685:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1046,"name":"string","nodeType":"ElementaryTypeName","src":"2685:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2684:15:10"},"scope":2281,"src":"2610:525:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1141,"nodeType":"Block","src":"3367:75:10","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1135,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"3412:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3404:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1133,"name":"uint160","nodeType":"ElementaryTypeName","src":"3404:7:10","typeDescriptions":{}}},"id":1136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3404:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3396:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1131,"name":"uint256","nodeType":"ElementaryTypeName","src":"3396:7:10","typeDescriptions":{}}},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3396:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1138,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"3420:14:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1130,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1039,1122,1142],"referencedDeclaration":1122,"src":"3384:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3384:51:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1129,"id":1140,"nodeType":"Return","src":"3377:58:10"}]},"documentation":{"id":1123,"nodeType":"StructuredDocumentation","src":"3141:148:10","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":1142,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3303:11:10","nodeType":"FunctionDefinition","parameters":{"id":1126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1125,"mutability":"mutable","name":"addr","nameLocation":"3323:4:10","nodeType":"VariableDeclaration","scope":1142,"src":"3315:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1124,"name":"address","nodeType":"ElementaryTypeName","src":"3315:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3314:14:10"},"returnParameters":{"id":1129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1128,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1142,"src":"3352:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1127,"name":"string","nodeType":"ElementaryTypeName","src":"3352:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3351:15:10"},"scope":2281,"src":"3294:148:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1206,"nodeType":"Block","src":"3699:642:10","statements":[{"assignments":[1151],"declarations":[{"constant":false,"id":1151,"mutability":"mutable","name":"buffer","nameLocation":"3722:6:10","nodeType":"VariableDeclaration","scope":1206,"src":"3709:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1150,"name":"bytes","nodeType":"ElementaryTypeName","src":"3709:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1158,"initialValue":{"arguments":[{"arguments":[{"id":1155,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"3749:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1154,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1039,1122,1142],"referencedDeclaration":1142,"src":"3737:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":1156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3737:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3731:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1152,"name":"bytes","nodeType":"ElementaryTypeName","src":"3731:5:10","typeDescriptions":{}}},"id":1157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3731:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3709:46:10"},{"assignments":[1160],"declarations":[{"constant":false,"id":1160,"mutability":"mutable","name":"hashValue","nameLocation":"3848:9:10","nodeType":"VariableDeclaration","scope":1206,"src":"3840:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1159,"name":"uint256","nodeType":"ElementaryTypeName","src":"3840:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1161,"nodeType":"VariableDeclarationStatement","src":"3840:17:10"},{"AST":{"nodeType":"YulBlock","src":"3892:78:10","statements":[{"nodeType":"YulAssignment","src":"3906:54:10","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3923:2:10","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"3941:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"3949:4:10","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3937:3:10"},"nodeType":"YulFunctionCall","src":"3937:17:10"},{"kind":"number","nodeType":"YulLiteral","src":"3956:2:10","type":"","value":"40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3927:9:10"},"nodeType":"YulFunctionCall","src":"3927:32:10"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3919:3:10"},"nodeType":"YulFunctionCall","src":"3919:41:10"},"variableNames":[{"name":"hashValue","nodeType":"YulIdentifier","src":"3906:9:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1151,"isOffset":false,"isSlot":false,"src":"3941:6:10","valueSize":1},{"declaration":1160,"isOffset":false,"isSlot":false,"src":"3906:9:10","valueSize":1}],"flags":["memory-safe"],"id":1162,"nodeType":"InlineAssembly","src":"3867:103:10"},{"body":{"id":1199,"nodeType":"Block","src":"4013:291:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1173,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"4119:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4131:3:10","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4119:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":1176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4137:1:10","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4119:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":1180,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"4148:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1182,"indexExpression":{"id":1181,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"4155:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4148:9:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4142:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1178,"name":"uint8","nodeType":"ElementaryTypeName","src":"4142:5:10","typeDescriptions":{}}},"id":1183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4142:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":1184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4161:2:10","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4142:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4119:44:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1194,"nodeType":"IfStatement","src":"4115:150:10","trueBody":{"id":1193,"nodeType":"Block","src":"4165:100:10","statements":[{"expression":{"id":1191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1187,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"4233:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1189,"indexExpression":{"id":1188,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"4240:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4233:9:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":1190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4246:4:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4233:17:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1192,"nodeType":"ExpressionStatement","src":"4233:17:10"}]}},{"expression":{"id":1197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1195,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"4278:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4292:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4278:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1198,"nodeType":"ExpressionStatement","src":"4278:15:10"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1167,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"4001:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4005:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4001:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1200,"initializationExpression":{"assignments":[1164],"declarations":[{"constant":false,"id":1164,"mutability":"mutable","name":"i","nameLocation":"3993:1:10","nodeType":"VariableDeclaration","scope":1200,"src":"3985:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1163,"name":"uint256","nodeType":"ElementaryTypeName","src":"3985:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1166,"initialValue":{"hexValue":"3431","id":1165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3997:2:10","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3985:14:10"},"loopExpression":{"expression":{"id":1171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4008:3:10","subExpression":{"id":1170,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1164,"src":"4010:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1172,"nodeType":"ExpressionStatement","src":"4008:3:10"},"nodeType":"ForStatement","src":"3980:324:10"},{"expression":{"arguments":[{"id":1203,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"4327:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4320:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1201,"name":"string","nodeType":"ElementaryTypeName","src":"4320:6:10","typeDescriptions":{}}},"id":1204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4320:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1149,"id":1205,"nodeType":"Return","src":"4313:21:10"}]},"documentation":{"id":1143,"nodeType":"StructuredDocumentation","src":"3448:165:10","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":1207,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3627:19:10","nodeType":"FunctionDefinition","parameters":{"id":1146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1145,"mutability":"mutable","name":"addr","nameLocation":"3655:4:10","nodeType":"VariableDeclaration","scope":1207,"src":"3647:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1144,"name":"address","nodeType":"ElementaryTypeName","src":"3647:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3646:14:10"},"returnParameters":{"id":1149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1148,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1207,"src":"3684:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1147,"name":"string","nodeType":"ElementaryTypeName","src":"3684:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3683:15:10"},"scope":2281,"src":"3618:723:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1243,"nodeType":"Block","src":"4496:104:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1219,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"4519:1:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4513:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1217,"name":"bytes","nodeType":"ElementaryTypeName","src":"4513:5:10","typeDescriptions":{}}},"id":1220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4513:8:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4522:6:10","memberName":"length","nodeType":"MemberAccess","src":"4513:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1224,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"4538:1:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1223,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4532:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1222,"name":"bytes","nodeType":"ElementaryTypeName","src":"4532:5:10","typeDescriptions":{}}},"id":1225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4532:8:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4541:6:10","memberName":"length","nodeType":"MemberAccess","src":"4532:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4513:34:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1231,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"4567:1:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4561:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1229,"name":"bytes","nodeType":"ElementaryTypeName","src":"4561:5:10","typeDescriptions":{}}},"id":1232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4561:8:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1228,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4551:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4551:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1237,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"4590:1:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4584:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1235,"name":"bytes","nodeType":"ElementaryTypeName","src":"4584:5:10","typeDescriptions":{}}},"id":1238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4584:8:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1234,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4574:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4574:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4551:42:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4513:80:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1216,"id":1242,"nodeType":"Return","src":"4506:87:10"}]},"documentation":{"id":1208,"nodeType":"StructuredDocumentation","src":"4347:66:10","text":" @dev Returns true if the two strings are equal."},"id":1244,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4427:5:10","nodeType":"FunctionDefinition","parameters":{"id":1213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1210,"mutability":"mutable","name":"a","nameLocation":"4447:1:10","nodeType":"VariableDeclaration","scope":1244,"src":"4433:15:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1209,"name":"string","nodeType":"ElementaryTypeName","src":"4433:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1212,"mutability":"mutable","name":"b","nameLocation":"4464:1:10","nodeType":"VariableDeclaration","scope":1244,"src":"4450:15:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1211,"name":"string","nodeType":"ElementaryTypeName","src":"4450:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4432:34:10"},"returnParameters":{"id":1216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1215,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1244,"src":"4490:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1214,"name":"bool","nodeType":"ElementaryTypeName","src":"4490:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4489:6:10"},"scope":2281,"src":"4418:182:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1262,"nodeType":"Block","src":"4897:64:10","statements":[{"expression":{"arguments":[{"id":1253,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"4924:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4931:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1257,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"4940:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4934:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1255,"name":"bytes","nodeType":"ElementaryTypeName","src":"4934:5:10","typeDescriptions":{}}},"id":1258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4934:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4947:6:10","memberName":"length","nodeType":"MemberAccess","src":"4934:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1252,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[1263,1294],"referencedDeclaration":1294,"src":"4914:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":1260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4914:40:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1251,"id":1261,"nodeType":"Return","src":"4907:47:10"}]},"documentation":{"id":1245,"nodeType":"StructuredDocumentation","src":"4606:214:10","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":1263,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4834:9:10","nodeType":"FunctionDefinition","parameters":{"id":1248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1247,"mutability":"mutable","name":"input","nameLocation":"4858:5:10","nodeType":"VariableDeclaration","scope":1263,"src":"4844:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1246,"name":"string","nodeType":"ElementaryTypeName","src":"4844:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4843:21:10"},"returnParameters":{"id":1251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1250,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1263,"src":"4888:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1249,"name":"uint256","nodeType":"ElementaryTypeName","src":"4888:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4887:9:10"},"scope":2281,"src":"4825:136:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1293,"nodeType":"Block","src":"5366:153:10","statements":[{"assignments":[1276,1278],"declarations":[{"constant":false,"id":1276,"mutability":"mutable","name":"success","nameLocation":"5382:7:10","nodeType":"VariableDeclaration","scope":1293,"src":"5377:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1275,"name":"bool","nodeType":"ElementaryTypeName","src":"5377:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1278,"mutability":"mutable","name":"value","nameLocation":"5399:5:10","nodeType":"VariableDeclaration","scope":1293,"src":"5391:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1277,"name":"uint256","nodeType":"ElementaryTypeName","src":"5391:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1284,"initialValue":{"arguments":[{"id":1280,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"5421:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1281,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"5428:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1282,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"5435:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1279,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[1315,1352],"referencedDeclaration":1352,"src":"5408:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5408:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5376:63:10"},{"condition":{"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5453:8:10","subExpression":{"id":1285,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"5454:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1290,"nodeType":"IfStatement","src":"5449:41:10","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1287,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":942,"src":"5470:18:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5470:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1289,"nodeType":"RevertStatement","src":"5463:27:10"}},{"expression":{"id":1291,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"5507:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1274,"id":1292,"nodeType":"Return","src":"5500:12:10"}]},"documentation":{"id":1264,"nodeType":"StructuredDocumentation","src":"4967:294:10","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":1294,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5275:9:10","nodeType":"FunctionDefinition","parameters":{"id":1271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1266,"mutability":"mutable","name":"input","nameLocation":"5299:5:10","nodeType":"VariableDeclaration","scope":1294,"src":"5285:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1265,"name":"string","nodeType":"ElementaryTypeName","src":"5285:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1268,"mutability":"mutable","name":"begin","nameLocation":"5314:5:10","nodeType":"VariableDeclaration","scope":1294,"src":"5306:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1267,"name":"uint256","nodeType":"ElementaryTypeName","src":"5306:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1270,"mutability":"mutable","name":"end","nameLocation":"5329:3:10","nodeType":"VariableDeclaration","scope":1294,"src":"5321:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1269,"name":"uint256","nodeType":"ElementaryTypeName","src":"5321:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5284:49:10"},"returnParameters":{"id":1274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1273,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1294,"src":"5357:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1272,"name":"uint256","nodeType":"ElementaryTypeName","src":"5357:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5356:9:10"},"scope":2281,"src":"5266:253:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1314,"nodeType":"Block","src":"5840:83:10","statements":[{"expression":{"arguments":[{"id":1305,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"5886:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5893:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1309,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"5902:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5896:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1307,"name":"bytes","nodeType":"ElementaryTypeName","src":"5896:5:10","typeDescriptions":{}}},"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5896:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5909:6:10","memberName":"length","nodeType":"MemberAccess","src":"5896:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1304,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1422,"src":"5857:28:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5857:59:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1303,"id":1313,"nodeType":"Return","src":"5850:66:10"}]},"documentation":{"id":1295,"nodeType":"StructuredDocumentation","src":"5525:215:10","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":1315,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5754:12:10","nodeType":"FunctionDefinition","parameters":{"id":1298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1297,"mutability":"mutable","name":"input","nameLocation":"5781:5:10","nodeType":"VariableDeclaration","scope":1315,"src":"5767:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1296,"name":"string","nodeType":"ElementaryTypeName","src":"5767:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5766:21:10"},"returnParameters":{"id":1303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1300,"mutability":"mutable","name":"success","nameLocation":"5816:7:10","nodeType":"VariableDeclaration","scope":1315,"src":"5811:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1299,"name":"bool","nodeType":"ElementaryTypeName","src":"5811:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1302,"mutability":"mutable","name":"value","nameLocation":"5833:5:10","nodeType":"VariableDeclaration","scope":1315,"src":"5825:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1301,"name":"uint256","nodeType":"ElementaryTypeName","src":"5825:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5810:29:10"},"scope":2281,"src":"5745:178:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1351,"nodeType":"Block","src":"6325:144:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1329,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"6339:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1332,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"6351:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6345:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1330,"name":"bytes","nodeType":"ElementaryTypeName","src":"6345:5:10","typeDescriptions":{}}},"id":1333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6345:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6358:6:10","memberName":"length","nodeType":"MemberAccess","src":"6345:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6339:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1336,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"6368:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1337,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"6376:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6368:11:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6339:40:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1344,"nodeType":"IfStatement","src":"6335:63:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6389:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6396:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1342,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6388:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1328,"id":1343,"nodeType":"Return","src":"6381:17:10"}},{"expression":{"arguments":[{"id":1346,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1318,"src":"6444:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1347,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1320,"src":"6451:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1348,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1322,"src":"6458:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1345,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1422,"src":"6415:28:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6415:47:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1328,"id":1350,"nodeType":"Return","src":"6408:54:10"}]},"documentation":{"id":1316,"nodeType":"StructuredDocumentation","src":"5929:238:10","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":1352,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6181:12:10","nodeType":"FunctionDefinition","parameters":{"id":1323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1318,"mutability":"mutable","name":"input","nameLocation":"6217:5:10","nodeType":"VariableDeclaration","scope":1352,"src":"6203:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1317,"name":"string","nodeType":"ElementaryTypeName","src":"6203:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1320,"mutability":"mutable","name":"begin","nameLocation":"6240:5:10","nodeType":"VariableDeclaration","scope":1352,"src":"6232:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1319,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1322,"mutability":"mutable","name":"end","nameLocation":"6263:3:10","nodeType":"VariableDeclaration","scope":1352,"src":"6255:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1321,"name":"uint256","nodeType":"ElementaryTypeName","src":"6255:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6193:79:10"},"returnParameters":{"id":1328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1325,"mutability":"mutable","name":"success","nameLocation":"6301:7:10","nodeType":"VariableDeclaration","scope":1352,"src":"6296:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1324,"name":"bool","nodeType":"ElementaryTypeName","src":"6296:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1327,"mutability":"mutable","name":"value","nameLocation":"6318:5:10","nodeType":"VariableDeclaration","scope":1352,"src":"6310:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1326,"name":"uint256","nodeType":"ElementaryTypeName","src":"6310:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6295:29:10"},"scope":2281,"src":"6172:297:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1421,"nodeType":"Block","src":"6872:347:10","statements":[{"assignments":[1367],"declarations":[{"constant":false,"id":1367,"mutability":"mutable","name":"buffer","nameLocation":"6895:6:10","nodeType":"VariableDeclaration","scope":1421,"src":"6882:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1366,"name":"bytes","nodeType":"ElementaryTypeName","src":"6882:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1372,"initialValue":{"arguments":[{"id":1370,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"6910:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6904:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1368,"name":"bytes","nodeType":"ElementaryTypeName","src":"6904:5:10","typeDescriptions":{}}},"id":1371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6904:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6882:34:10"},{"assignments":[1374],"declarations":[{"constant":false,"id":1374,"mutability":"mutable","name":"result","nameLocation":"6935:6:10","nodeType":"VariableDeclaration","scope":1421,"src":"6927:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1373,"name":"uint256","nodeType":"ElementaryTypeName","src":"6927:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1376,"initialValue":{"hexValue":"30","id":1375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6944:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6927:18:10"},{"body":{"id":1415,"nodeType":"Block","src":"6993:189:10","statements":[{"assignments":[1388],"declarations":[{"constant":false,"id":1388,"mutability":"mutable","name":"chr","nameLocation":"7013:3:10","nodeType":"VariableDeclaration","scope":1415,"src":"7007:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1387,"name":"uint8","nodeType":"ElementaryTypeName","src":"7007:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1398,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":1393,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"7062:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1394,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"7070:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1392,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"7039:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7039:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7032:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1390,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7032:6:10","typeDescriptions":{}}},"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7032:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1389,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"7019:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":1397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7019:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7007:67:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1399,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"7092:3:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":1400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7098:1:10","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7092:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1406,"nodeType":"IfStatement","src":"7088:30:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7109:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7116:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1404,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7108:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1365,"id":1405,"nodeType":"Return","src":"7101:17:10"}},{"expression":{"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1407,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"7132:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":1408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7142:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7132:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1410,"nodeType":"ExpressionStatement","src":"7132:12:10"},{"expression":{"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1411,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"7158:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1412,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"7168:3:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7158:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1414,"nodeType":"ExpressionStatement","src":"7158:13:10"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1381,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"6979:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1382,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1359,"src":"6983:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6979:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1416,"initializationExpression":{"assignments":[1378],"declarations":[{"constant":false,"id":1378,"mutability":"mutable","name":"i","nameLocation":"6968:1:10","nodeType":"VariableDeclaration","scope":1416,"src":"6960:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1377,"name":"uint256","nodeType":"ElementaryTypeName","src":"6960:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1380,"initialValue":{"id":1379,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"6972:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6960:17:10"},"loopExpression":{"expression":{"id":1385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6988:3:10","subExpression":{"id":1384,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1378,"src":"6990:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1386,"nodeType":"ExpressionStatement","src":"6988:3:10"},"nodeType":"ForStatement","src":"6955:227:10"},{"expression":{"components":[{"hexValue":"74727565","id":1417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7199:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1418,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"7205:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1419,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7198:14:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1365,"id":1420,"nodeType":"Return","src":"7191:21:10"}]},"documentation":{"id":1353,"nodeType":"StructuredDocumentation","src":"6475:224:10","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":1422,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6713:28:10","nodeType":"FunctionDefinition","parameters":{"id":1360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1355,"mutability":"mutable","name":"input","nameLocation":"6765:5:10","nodeType":"VariableDeclaration","scope":1422,"src":"6751:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1354,"name":"string","nodeType":"ElementaryTypeName","src":"6751:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1357,"mutability":"mutable","name":"begin","nameLocation":"6788:5:10","nodeType":"VariableDeclaration","scope":1422,"src":"6780:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1356,"name":"uint256","nodeType":"ElementaryTypeName","src":"6780:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1359,"mutability":"mutable","name":"end","nameLocation":"6811:3:10","nodeType":"VariableDeclaration","scope":1422,"src":"6803:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1358,"name":"uint256","nodeType":"ElementaryTypeName","src":"6803:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6741:79:10"},"returnParameters":{"id":1365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1362,"mutability":"mutable","name":"success","nameLocation":"6848:7:10","nodeType":"VariableDeclaration","scope":1422,"src":"6843:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1361,"name":"bool","nodeType":"ElementaryTypeName","src":"6843:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1364,"mutability":"mutable","name":"value","nameLocation":"6865:5:10","nodeType":"VariableDeclaration","scope":1422,"src":"6857:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1363,"name":"uint256","nodeType":"ElementaryTypeName","src":"6857:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6842:29:10"},"scope":2281,"src":"6704:515:10","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1440,"nodeType":"Block","src":"7516:63:10","statements":[{"expression":{"arguments":[{"id":1431,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1425,"src":"7542:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7549:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1435,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1425,"src":"7558:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1434,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7552:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1433,"name":"bytes","nodeType":"ElementaryTypeName","src":"7552:5:10","typeDescriptions":{}}},"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7552:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7565:6:10","memberName":"length","nodeType":"MemberAccess","src":"7552:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1430,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[1441,1472],"referencedDeclaration":1472,"src":"7533:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7533:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1429,"id":1439,"nodeType":"Return","src":"7526:46:10"}]},"documentation":{"id":1423,"nodeType":"StructuredDocumentation","src":"7225:216:10","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":1441,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7455:8:10","nodeType":"FunctionDefinition","parameters":{"id":1426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1425,"mutability":"mutable","name":"input","nameLocation":"7478:5:10","nodeType":"VariableDeclaration","scope":1441,"src":"7464:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1424,"name":"string","nodeType":"ElementaryTypeName","src":"7464:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7463:21:10"},"returnParameters":{"id":1429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1428,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1441,"src":"7508:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1427,"name":"int256","nodeType":"ElementaryTypeName","src":"7508:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7507:8:10"},"scope":2281,"src":"7446:133:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1471,"nodeType":"Block","src":"7984:151:10","statements":[{"assignments":[1454,1456],"declarations":[{"constant":false,"id":1454,"mutability":"mutable","name":"success","nameLocation":"8000:7:10","nodeType":"VariableDeclaration","scope":1471,"src":"7995:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1453,"name":"bool","nodeType":"ElementaryTypeName","src":"7995:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1456,"mutability":"mutable","name":"value","nameLocation":"8016:5:10","nodeType":"VariableDeclaration","scope":1471,"src":"8009:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1455,"name":"int256","nodeType":"ElementaryTypeName","src":"8009:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":1462,"initialValue":{"arguments":[{"id":1458,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1444,"src":"8037:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1459,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"8044:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1460,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1448,"src":"8051:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1457,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[1493,1535],"referencedDeclaration":1535,"src":"8025:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":1461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8025:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7994:61:10"},{"condition":{"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8069:8:10","subExpression":{"id":1463,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"8070:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1468,"nodeType":"IfStatement","src":"8065:41:10","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1465,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":942,"src":"8086:18:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8086:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1467,"nodeType":"RevertStatement","src":"8079:27:10"}},{"expression":{"id":1469,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1456,"src":"8123:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1452,"id":1470,"nodeType":"Return","src":"8116:12:10"}]},"documentation":{"id":1442,"nodeType":"StructuredDocumentation","src":"7585:296:10","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":1472,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7895:8:10","nodeType":"FunctionDefinition","parameters":{"id":1449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1444,"mutability":"mutable","name":"input","nameLocation":"7918:5:10","nodeType":"VariableDeclaration","scope":1472,"src":"7904:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1443,"name":"string","nodeType":"ElementaryTypeName","src":"7904:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1446,"mutability":"mutable","name":"begin","nameLocation":"7933:5:10","nodeType":"VariableDeclaration","scope":1472,"src":"7925:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1445,"name":"uint256","nodeType":"ElementaryTypeName","src":"7925:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1448,"mutability":"mutable","name":"end","nameLocation":"7948:3:10","nodeType":"VariableDeclaration","scope":1472,"src":"7940:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1447,"name":"uint256","nodeType":"ElementaryTypeName","src":"7940:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7903:49:10"},"returnParameters":{"id":1452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1451,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1472,"src":"7976:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1450,"name":"int256","nodeType":"ElementaryTypeName","src":"7976:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7975:8:10"},"scope":2281,"src":"7886:249:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1492,"nodeType":"Block","src":"8526:82:10","statements":[{"expression":{"arguments":[{"id":1483,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"8571:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8578:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1487,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"8587:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8581:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1485,"name":"bytes","nodeType":"ElementaryTypeName","src":"8581:5:10","typeDescriptions":{}}},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8581:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8594:6:10","memberName":"length","nodeType":"MemberAccess","src":"8581:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1482,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"8543:27:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":1490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8543:58:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":1481,"id":1491,"nodeType":"Return","src":"8536:65:10"}]},"documentation":{"id":1473,"nodeType":"StructuredDocumentation","src":"8141:287:10","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":1493,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8442:11:10","nodeType":"FunctionDefinition","parameters":{"id":1476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1475,"mutability":"mutable","name":"input","nameLocation":"8468:5:10","nodeType":"VariableDeclaration","scope":1493,"src":"8454:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1474,"name":"string","nodeType":"ElementaryTypeName","src":"8454:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8453:21:10"},"returnParameters":{"id":1481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1478,"mutability":"mutable","name":"success","nameLocation":"8503:7:10","nodeType":"VariableDeclaration","scope":1493,"src":"8498:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1477,"name":"bool","nodeType":"ElementaryTypeName","src":"8498:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1480,"mutability":"mutable","name":"value","nameLocation":"8519:5:10","nodeType":"VariableDeclaration","scope":1493,"src":"8512:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1479,"name":"int256","nodeType":"ElementaryTypeName","src":"8512:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8497:28:10"},"scope":2281,"src":"8433:175:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":1498,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8639:14:10","nodeType":"VariableDeclaration","scope":2281,"src":"8614:50:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1494,"name":"uint256","nodeType":"ElementaryTypeName","src":"8614:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":1497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8656:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":1496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8661:3:10","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8656:8:10","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":1534,"nodeType":"Block","src":"9130:143:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1512,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1505,"src":"9144:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1515,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"9156:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9150:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1513,"name":"bytes","nodeType":"ElementaryTypeName","src":"9150:5:10","typeDescriptions":{}}},"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9150:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9163:6:10","memberName":"length","nodeType":"MemberAccess","src":"9150:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9144:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1519,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"9173:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1520,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1505,"src":"9181:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9173:11:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9144:40:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1527,"nodeType":"IfStatement","src":"9140:63:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9194:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9201:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1525,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9193:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1511,"id":1526,"nodeType":"Return","src":"9186:17:10"}},{"expression":{"arguments":[{"id":1529,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"9248:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1530,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1503,"src":"9255:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1531,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1505,"src":"9262:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1528,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"9220:27:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":1532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9220:46:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":1511,"id":1533,"nodeType":"Return","src":"9213:53:10"}]},"documentation":{"id":1499,"nodeType":"StructuredDocumentation","src":"8671:303:10","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":1535,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8988:11:10","nodeType":"FunctionDefinition","parameters":{"id":1506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1501,"mutability":"mutable","name":"input","nameLocation":"9023:5:10","nodeType":"VariableDeclaration","scope":1535,"src":"9009:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1500,"name":"string","nodeType":"ElementaryTypeName","src":"9009:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1503,"mutability":"mutable","name":"begin","nameLocation":"9046:5:10","nodeType":"VariableDeclaration","scope":1535,"src":"9038:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1502,"name":"uint256","nodeType":"ElementaryTypeName","src":"9038:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1505,"mutability":"mutable","name":"end","nameLocation":"9069:3:10","nodeType":"VariableDeclaration","scope":1535,"src":"9061:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1504,"name":"uint256","nodeType":"ElementaryTypeName","src":"9061:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8999:79:10"},"returnParameters":{"id":1511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1508,"mutability":"mutable","name":"success","nameLocation":"9107:7:10","nodeType":"VariableDeclaration","scope":1535,"src":"9102:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1507,"name":"bool","nodeType":"ElementaryTypeName","src":"9102:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1510,"mutability":"mutable","name":"value","nameLocation":"9123:5:10","nodeType":"VariableDeclaration","scope":1535,"src":"9116:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1509,"name":"int256","nodeType":"ElementaryTypeName","src":"9116:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9101:28:10"},"scope":2281,"src":"8979:294:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1655,"nodeType":"Block","src":"9673:812:10","statements":[{"assignments":[1550],"declarations":[{"constant":false,"id":1550,"mutability":"mutable","name":"buffer","nameLocation":"9696:6:10","nodeType":"VariableDeclaration","scope":1655,"src":"9683:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1549,"name":"bytes","nodeType":"ElementaryTypeName","src":"9683:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1555,"initialValue":{"arguments":[{"id":1553,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1538,"src":"9711:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9705:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1551,"name":"bytes","nodeType":"ElementaryTypeName","src":"9705:5:10","typeDescriptions":{}}},"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9705:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9683:34:10"},{"assignments":[1557],"declarations":[{"constant":false,"id":1557,"mutability":"mutable","name":"sign","nameLocation":"9781:4:10","nodeType":"VariableDeclaration","scope":1655,"src":"9774:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":1556,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9774:6:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":1573,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1558,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"9788:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1559,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1542,"src":"9797:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9788:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":1568,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1550,"src":"9845:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1569,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"9853:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1567,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"9822:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9822:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9815:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1565,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9815:6:10","typeDescriptions":{}}},"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9815:45:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9788:72:10","trueExpression":{"arguments":[{"hexValue":"30","id":1563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9810:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9803:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1561,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9803:6:10","typeDescriptions":{}}},"id":1564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9803:9:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9774:86:10"},{"assignments":[1575],"declarations":[{"constant":false,"id":1575,"mutability":"mutable","name":"positiveSign","nameLocation":"9946:12:10","nodeType":"VariableDeclaration","scope":1655,"src":"9941:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1574,"name":"bool","nodeType":"ElementaryTypeName","src":"9941:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1582,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1576,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"9961:4:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":1579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9976:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":1578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9969:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1577,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9969:6:10","typeDescriptions":{}}},"id":1580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9969:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9961:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9941:39:10"},{"assignments":[1584],"declarations":[{"constant":false,"id":1584,"mutability":"mutable","name":"negativeSign","nameLocation":"9995:12:10","nodeType":"VariableDeclaration","scope":1655,"src":"9990:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1583,"name":"bool","nodeType":"ElementaryTypeName","src":"9990:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1591,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1585,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"10010:4:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":1588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10025:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":1587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10018:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1586,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10018:6:10","typeDescriptions":{}}},"id":1589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10018:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10010:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9990:39:10"},{"assignments":[1593],"declarations":[{"constant":false,"id":1593,"mutability":"mutable","name":"offset","nameLocation":"10047:6:10","nodeType":"VariableDeclaration","scope":1655,"src":"10039:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1592,"name":"uint256","nodeType":"ElementaryTypeName","src":"10039:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1600,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1594,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"10057:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":1595,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"10073:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10057:28:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1597,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10056:30:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10087:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6339,"src":"10056:37:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10056:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10039:56:10"},{"assignments":[1602,1604],"declarations":[{"constant":false,"id":1602,"mutability":"mutable","name":"absSuccess","nameLocation":"10112:10:10","nodeType":"VariableDeclaration","scope":1655,"src":"10107:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1601,"name":"bool","nodeType":"ElementaryTypeName","src":"10107:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1604,"mutability":"mutable","name":"absValue","nameLocation":"10132:8:10","nodeType":"VariableDeclaration","scope":1655,"src":"10124:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1603,"name":"uint256","nodeType":"ElementaryTypeName","src":"10124:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1612,"initialValue":{"arguments":[{"id":1606,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1538,"src":"10157:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1607,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"10164:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1608,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"10172:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10164:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1610,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1542,"src":"10180:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1605,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[1315,1352],"referencedDeclaration":1352,"src":"10144:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10144:40:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10106:78:10"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1613,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"10199:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1614,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"10213:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1615,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"10224:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10213:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10199:39:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1633,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"10341:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1634,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"10355:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10341:26:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1636,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"10371:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1637,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"10383:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10371:26:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10341:56:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10469:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10476:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1651,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10468:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1548,"id":1652,"nodeType":"Return","src":"10461:17:10"},"id":1653,"nodeType":"IfStatement","src":"10337:141:10","trueBody":{"id":1648,"nodeType":"Block","src":"10399:56:10","statements":[{"expression":{"components":[{"hexValue":"74727565","id":1640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10421:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":1643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10432:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1642,"name":"int256","nodeType":"ElementaryTypeName","src":"10432:6:10","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":1641,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10427:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10427:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":1645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10440:3:10","memberName":"min","nodeType":"MemberAccess","src":"10427:16:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1646,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10420:24:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":1548,"id":1647,"nodeType":"Return","src":"10413:31:10"}]}},"id":1654,"nodeType":"IfStatement","src":"10195:283:10","trueBody":{"id":1632,"nodeType":"Block","src":"10240:91:10","statements":[{"expression":{"components":[{"hexValue":"74727565","id":1618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10262:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":1619,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"10268:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":1627,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"10310:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1626,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10303:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1625,"name":"int256","nodeType":"ElementaryTypeName","src":"10303:6:10","typeDescriptions":{}}},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10303:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":1629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10268:51:10","trueExpression":{"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10283:17:10","subExpression":{"arguments":[{"id":1622,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"10291:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10284:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1620,"name":"int256","nodeType":"ElementaryTypeName","src":"10284:6:10","typeDescriptions":{}}},"id":1623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10284:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1630,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10261:59:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":1548,"id":1631,"nodeType":"Return","src":"10254:66:10"}]}}]},"documentation":{"id":1536,"nodeType":"StructuredDocumentation","src":"9279:223:10","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":1656,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9516:27:10","nodeType":"FunctionDefinition","parameters":{"id":1543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1538,"mutability":"mutable","name":"input","nameLocation":"9567:5:10","nodeType":"VariableDeclaration","scope":1656,"src":"9553:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1537,"name":"string","nodeType":"ElementaryTypeName","src":"9553:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1540,"mutability":"mutable","name":"begin","nameLocation":"9590:5:10","nodeType":"VariableDeclaration","scope":1656,"src":"9582:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1539,"name":"uint256","nodeType":"ElementaryTypeName","src":"9582:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1542,"mutability":"mutable","name":"end","nameLocation":"9613:3:10","nodeType":"VariableDeclaration","scope":1656,"src":"9605:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1541,"name":"uint256","nodeType":"ElementaryTypeName","src":"9605:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9543:79:10"},"returnParameters":{"id":1548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1545,"mutability":"mutable","name":"success","nameLocation":"9650:7:10","nodeType":"VariableDeclaration","scope":1656,"src":"9645:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1544,"name":"bool","nodeType":"ElementaryTypeName","src":"9645:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1547,"mutability":"mutable","name":"value","nameLocation":"9666:5:10","nodeType":"VariableDeclaration","scope":1656,"src":"9659:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1546,"name":"int256","nodeType":"ElementaryTypeName","src":"9659:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9644:28:10"},"scope":2281,"src":"9507:978:10","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1674,"nodeType":"Block","src":"10830:67:10","statements":[{"expression":{"arguments":[{"id":1665,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1659,"src":"10860:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10867:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1669,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1659,"src":"10876:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10870:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1667,"name":"bytes","nodeType":"ElementaryTypeName","src":"10870:5:10","typeDescriptions":{}}},"id":1670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10870:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10883:6:10","memberName":"length","nodeType":"MemberAccess","src":"10870:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1664,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[1675,1706],"referencedDeclaration":1706,"src":"10847:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10847:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1663,"id":1673,"nodeType":"Return","src":"10840:50:10"}]},"documentation":{"id":1657,"nodeType":"StructuredDocumentation","src":"10491:259:10","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":1675,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10764:12:10","nodeType":"FunctionDefinition","parameters":{"id":1660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1659,"mutability":"mutable","name":"input","nameLocation":"10791:5:10","nodeType":"VariableDeclaration","scope":1675,"src":"10777:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1658,"name":"string","nodeType":"ElementaryTypeName","src":"10777:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10776:21:10"},"returnParameters":{"id":1663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1662,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1675,"src":"10821:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1661,"name":"uint256","nodeType":"ElementaryTypeName","src":"10821:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10820:9:10"},"scope":2281,"src":"10755:142:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1705,"nodeType":"Block","src":"11318:156:10","statements":[{"assignments":[1688,1690],"declarations":[{"constant":false,"id":1688,"mutability":"mutable","name":"success","nameLocation":"11334:7:10","nodeType":"VariableDeclaration","scope":1705,"src":"11329:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1687,"name":"bool","nodeType":"ElementaryTypeName","src":"11329:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1690,"mutability":"mutable","name":"value","nameLocation":"11351:5:10","nodeType":"VariableDeclaration","scope":1705,"src":"11343:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1689,"name":"uint256","nodeType":"ElementaryTypeName","src":"11343:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1696,"initialValue":{"arguments":[{"id":1692,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"11376:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1693,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1680,"src":"11383:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1694,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"11390:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1691,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[1727,1764],"referencedDeclaration":1764,"src":"11360:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11360:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11328:66:10"},{"condition":{"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11408:8:10","subExpression":{"id":1697,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1688,"src":"11409:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1702,"nodeType":"IfStatement","src":"11404:41:10","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1699,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":942,"src":"11425:18:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11425:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1701,"nodeType":"RevertStatement","src":"11418:27:10"}},{"expression":{"id":1703,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"11462:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1686,"id":1704,"nodeType":"Return","src":"11455:12:10"}]},"documentation":{"id":1676,"nodeType":"StructuredDocumentation","src":"10903:307:10","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":1706,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11224:12:10","nodeType":"FunctionDefinition","parameters":{"id":1683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1678,"mutability":"mutable","name":"input","nameLocation":"11251:5:10","nodeType":"VariableDeclaration","scope":1706,"src":"11237:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1677,"name":"string","nodeType":"ElementaryTypeName","src":"11237:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1680,"mutability":"mutable","name":"begin","nameLocation":"11266:5:10","nodeType":"VariableDeclaration","scope":1706,"src":"11258:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1679,"name":"uint256","nodeType":"ElementaryTypeName","src":"11258:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1682,"mutability":"mutable","name":"end","nameLocation":"11281:3:10","nodeType":"VariableDeclaration","scope":1706,"src":"11273:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1681,"name":"uint256","nodeType":"ElementaryTypeName","src":"11273:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11236:49:10"},"returnParameters":{"id":1686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1685,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1706,"src":"11309:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1684,"name":"uint256","nodeType":"ElementaryTypeName","src":"11309:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11308:9:10"},"scope":2281,"src":"11215:259:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1726,"nodeType":"Block","src":"11801:86:10","statements":[{"expression":{"arguments":[{"id":1717,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"11850:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11857:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1721,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"11866:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11860:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1719,"name":"bytes","nodeType":"ElementaryTypeName","src":"11860:5:10","typeDescriptions":{}}},"id":1722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11860:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11873:6:10","memberName":"length","nodeType":"MemberAccess","src":"11860:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1716,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"11818:31:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11818:62:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1715,"id":1725,"nodeType":"Return","src":"11811:69:10"}]},"documentation":{"id":1707,"nodeType":"StructuredDocumentation","src":"11480:218:10","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":1727,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11712:15:10","nodeType":"FunctionDefinition","parameters":{"id":1710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1709,"mutability":"mutable","name":"input","nameLocation":"11742:5:10","nodeType":"VariableDeclaration","scope":1727,"src":"11728:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1708,"name":"string","nodeType":"ElementaryTypeName","src":"11728:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11727:21:10"},"returnParameters":{"id":1715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1712,"mutability":"mutable","name":"success","nameLocation":"11777:7:10","nodeType":"VariableDeclaration","scope":1727,"src":"11772:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1711,"name":"bool","nodeType":"ElementaryTypeName","src":"11772:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1714,"mutability":"mutable","name":"value","nameLocation":"11794:5:10","nodeType":"VariableDeclaration","scope":1727,"src":"11786:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1713,"name":"uint256","nodeType":"ElementaryTypeName","src":"11786:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11771:29:10"},"scope":2281,"src":"11703:184:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1763,"nodeType":"Block","src":"12295:147:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1741,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"12309:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1744,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"12321:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12315:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1742,"name":"bytes","nodeType":"ElementaryTypeName","src":"12315:5:10","typeDescriptions":{}}},"id":1745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12315:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12328:6:10","memberName":"length","nodeType":"MemberAccess","src":"12315:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12309:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1748,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"12338:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1749,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"12346:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12338:11:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12309:40:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1756,"nodeType":"IfStatement","src":"12305:63:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12359:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12366:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1754,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12358:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1740,"id":1755,"nodeType":"Return","src":"12351:17:10"}},{"expression":{"arguments":[{"id":1758,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"12417:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1759,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"12424:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1760,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"12431:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1757,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"12385:31:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":1761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12385:50:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1740,"id":1762,"nodeType":"Return","src":"12378:57:10"}]},"documentation":{"id":1728,"nodeType":"StructuredDocumentation","src":"11893:241:10","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":1764,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12148:15:10","nodeType":"FunctionDefinition","parameters":{"id":1735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1730,"mutability":"mutable","name":"input","nameLocation":"12187:5:10","nodeType":"VariableDeclaration","scope":1764,"src":"12173:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1729,"name":"string","nodeType":"ElementaryTypeName","src":"12173:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1732,"mutability":"mutable","name":"begin","nameLocation":"12210:5:10","nodeType":"VariableDeclaration","scope":1764,"src":"12202:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1731,"name":"uint256","nodeType":"ElementaryTypeName","src":"12202:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1734,"mutability":"mutable","name":"end","nameLocation":"12233:3:10","nodeType":"VariableDeclaration","scope":1764,"src":"12225:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1733,"name":"uint256","nodeType":"ElementaryTypeName","src":"12225:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12163:79:10"},"returnParameters":{"id":1740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1737,"mutability":"mutable","name":"success","nameLocation":"12271:7:10","nodeType":"VariableDeclaration","scope":1764,"src":"12266:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1736,"name":"bool","nodeType":"ElementaryTypeName","src":"12266:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1739,"mutability":"mutable","name":"value","nameLocation":"12288:5:10","nodeType":"VariableDeclaration","scope":1764,"src":"12280:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1738,"name":"uint256","nodeType":"ElementaryTypeName","src":"12280:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12265:29:10"},"scope":2281,"src":"12139:303:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1866,"nodeType":"Block","src":"12851:881:10","statements":[{"assignments":[1779],"declarations":[{"constant":false,"id":1779,"mutability":"mutable","name":"buffer","nameLocation":"12874:6:10","nodeType":"VariableDeclaration","scope":1866,"src":"12861:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1778,"name":"bytes","nodeType":"ElementaryTypeName","src":"12861:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1784,"initialValue":{"arguments":[{"id":1782,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"12889:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12883:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1780,"name":"bytes","nodeType":"ElementaryTypeName","src":"12883:5:10","typeDescriptions":{}}},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12883:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12861:34:10"},{"assignments":[1786],"declarations":[{"constant":false,"id":1786,"mutability":"mutable","name":"hasPrefix","nameLocation":"12948:9:10","nodeType":"VariableDeclaration","scope":1866,"src":"12943:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1785,"name":"bool","nodeType":"ElementaryTypeName","src":"12943:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1806,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1787,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"12961:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1788,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"12967:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12975:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12967:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12961:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1792,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12960:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":1804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1796,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"13011:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1797,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"13019:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1795,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"12988:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12988:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12981:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1793,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12981:6:10","typeDescriptions":{}}},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12981:45:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":1802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13037:4:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":1801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13030:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1800,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13030:6:10","typeDescriptions":{}}},"id":1803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13030:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12981:61:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12960:82:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12943:99:10"},{"assignments":[1808],"declarations":[{"constant":false,"id":1808,"mutability":"mutable","name":"offset","nameLocation":"13131:6:10","nodeType":"VariableDeclaration","scope":1866,"src":"13123:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1807,"name":"uint256","nodeType":"ElementaryTypeName","src":"13123:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1814,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1809,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"13140:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13150:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6339,"src":"13140:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13140:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":1812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13161:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13140:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13123:39:10"},{"assignments":[1816],"declarations":[{"constant":false,"id":1816,"mutability":"mutable","name":"result","nameLocation":"13181:6:10","nodeType":"VariableDeclaration","scope":1866,"src":"13173:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1815,"name":"uint256","nodeType":"ElementaryTypeName","src":"13173:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1818,"initialValue":{"hexValue":"30","id":1817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13190:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13173:18:10"},{"body":{"id":1860,"nodeType":"Block","src":"13248:447:10","statements":[{"assignments":[1832],"declarations":[{"constant":false,"id":1832,"mutability":"mutable","name":"chr","nameLocation":"13268:3:10","nodeType":"VariableDeclaration","scope":1860,"src":"13262:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1831,"name":"uint8","nodeType":"ElementaryTypeName","src":"13262:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1842,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":1837,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"13317:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1838,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"13325:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1836,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"13294:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13294:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13287:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1834,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13287:6:10","typeDescriptions":{}}},"id":1840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13287:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":1833,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2102,"src":"13274:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":1841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13274:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13262:67:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1843,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"13347:3:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":1844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13353:2:10","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13347:8:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1850,"nodeType":"IfStatement","src":"13343:31:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13365:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13372:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1848,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13364:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1777,"id":1849,"nodeType":"Return","src":"13357:17:10"}},{"expression":{"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1851,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1816,"src":"13388:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":1852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13398:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13388:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1854,"nodeType":"ExpressionStatement","src":"13388:12:10"},{"id":1859,"nodeType":"UncheckedBlock","src":"13414:271:10","statements":[{"expression":{"id":1857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1855,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1816,"src":"13657:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1856,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"13667:3:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13657:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1858,"nodeType":"ExpressionStatement","src":"13657:13:10"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1825,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"13234:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1826,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"13238:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13234:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1861,"initializationExpression":{"assignments":[1820],"declarations":[{"constant":false,"id":1820,"mutability":"mutable","name":"i","nameLocation":"13214:1:10","nodeType":"VariableDeclaration","scope":1861,"src":"13206:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1819,"name":"uint256","nodeType":"ElementaryTypeName","src":"13206:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1824,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1821,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1769,"src":"13218:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1822,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1808,"src":"13226:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13218:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13206:26:10"},"loopExpression":{"expression":{"id":1829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13243:3:10","subExpression":{"id":1828,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"13245:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1830,"nodeType":"ExpressionStatement","src":"13243:3:10"},"nodeType":"ForStatement","src":"13201:494:10"},{"expression":{"components":[{"hexValue":"74727565","id":1862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13712:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1863,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1816,"src":"13718:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1864,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13711:14:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1777,"id":1865,"nodeType":"Return","src":"13704:21:10"}]},"documentation":{"id":1765,"nodeType":"StructuredDocumentation","src":"12448:227:10","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":1867,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12689:31:10","nodeType":"FunctionDefinition","parameters":{"id":1772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1767,"mutability":"mutable","name":"input","nameLocation":"12744:5:10","nodeType":"VariableDeclaration","scope":1867,"src":"12730:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1766,"name":"string","nodeType":"ElementaryTypeName","src":"12730:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1769,"mutability":"mutable","name":"begin","nameLocation":"12767:5:10","nodeType":"VariableDeclaration","scope":1867,"src":"12759:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1768,"name":"uint256","nodeType":"ElementaryTypeName","src":"12759:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1771,"mutability":"mutable","name":"end","nameLocation":"12790:3:10","nodeType":"VariableDeclaration","scope":1867,"src":"12782:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1770,"name":"uint256","nodeType":"ElementaryTypeName","src":"12782:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12720:79:10"},"returnParameters":{"id":1777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1774,"mutability":"mutable","name":"success","nameLocation":"12827:7:10","nodeType":"VariableDeclaration","scope":1867,"src":"12822:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1773,"name":"bool","nodeType":"ElementaryTypeName","src":"12822:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1776,"mutability":"mutable","name":"value","nameLocation":"12844:5:10","nodeType":"VariableDeclaration","scope":1867,"src":"12836:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1775,"name":"uint256","nodeType":"ElementaryTypeName","src":"12836:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12821:29:10"},"scope":2281,"src":"12680:1052:10","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1885,"nodeType":"Block","src":"14030:67:10","statements":[{"expression":{"arguments":[{"id":1876,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"14060:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14067:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1880,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"14076:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14070:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1878,"name":"bytes","nodeType":"ElementaryTypeName","src":"14070:5:10","typeDescriptions":{}}},"id":1881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14070:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14083:6:10","memberName":"length","nodeType":"MemberAccess","src":"14070:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1875,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[1886,1917],"referencedDeclaration":1917,"src":"14047:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":1883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14047:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1874,"id":1884,"nodeType":"Return","src":"14040:50:10"}]},"documentation":{"id":1868,"nodeType":"StructuredDocumentation","src":"13738:212:10","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":1886,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13964:12:10","nodeType":"FunctionDefinition","parameters":{"id":1871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1870,"mutability":"mutable","name":"input","nameLocation":"13991:5:10","nodeType":"VariableDeclaration","scope":1886,"src":"13977:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1869,"name":"string","nodeType":"ElementaryTypeName","src":"13977:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13976:21:10"},"returnParameters":{"id":1874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1873,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1886,"src":"14021:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1872,"name":"address","nodeType":"ElementaryTypeName","src":"14021:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14020:9:10"},"scope":2281,"src":"13955:142:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1916,"nodeType":"Block","src":"14470:165:10","statements":[{"assignments":[1899,1901],"declarations":[{"constant":false,"id":1899,"mutability":"mutable","name":"success","nameLocation":"14486:7:10","nodeType":"VariableDeclaration","scope":1916,"src":"14481:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1898,"name":"bool","nodeType":"ElementaryTypeName","src":"14481:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1901,"mutability":"mutable","name":"value","nameLocation":"14503:5:10","nodeType":"VariableDeclaration","scope":1916,"src":"14495:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1900,"name":"address","nodeType":"ElementaryTypeName","src":"14495:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1907,"initialValue":{"arguments":[{"id":1903,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1889,"src":"14528:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1904,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1891,"src":"14535:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1905,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1893,"src":"14542:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1902,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[1938,2042],"referencedDeclaration":2042,"src":"14512:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":1906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14512:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14480:66:10"},{"condition":{"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14560:8:10","subExpression":{"id":1908,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"14561:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1913,"nodeType":"IfStatement","src":"14556:50:10","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1910,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"14577:27:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":1911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14577:29:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1912,"nodeType":"RevertStatement","src":"14570:36:10"}},{"expression":{"id":1914,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1901,"src":"14623:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1897,"id":1915,"nodeType":"Return","src":"14616:12:10"}]},"documentation":{"id":1887,"nodeType":"StructuredDocumentation","src":"14103:259:10","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":1917,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14376:12:10","nodeType":"FunctionDefinition","parameters":{"id":1894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1889,"mutability":"mutable","name":"input","nameLocation":"14403:5:10","nodeType":"VariableDeclaration","scope":1917,"src":"14389:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1888,"name":"string","nodeType":"ElementaryTypeName","src":"14389:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1891,"mutability":"mutable","name":"begin","nameLocation":"14418:5:10","nodeType":"VariableDeclaration","scope":1917,"src":"14410:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1890,"name":"uint256","nodeType":"ElementaryTypeName","src":"14410:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1893,"mutability":"mutable","name":"end","nameLocation":"14433:3:10","nodeType":"VariableDeclaration","scope":1917,"src":"14425:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1892,"name":"uint256","nodeType":"ElementaryTypeName","src":"14425:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14388:49:10"},"returnParameters":{"id":1897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1896,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1917,"src":"14461:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1895,"name":"address","nodeType":"ElementaryTypeName","src":"14461:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14460:9:10"},"scope":2281,"src":"14367:268:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1937,"nodeType":"Block","src":"14942:70:10","statements":[{"expression":{"arguments":[{"id":1928,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1920,"src":"14975:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":1929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14982:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":1932,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1920,"src":"14991:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14985:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1930,"name":"bytes","nodeType":"ElementaryTypeName","src":"14985:5:10","typeDescriptions":{}}},"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14985:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14998:6:10","memberName":"length","nodeType":"MemberAccess","src":"14985:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1927,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[1938,2042],"referencedDeclaration":2042,"src":"14959:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":1935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14959:46:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":1926,"id":1936,"nodeType":"Return","src":"14952:53:10"}]},"documentation":{"id":1918,"nodeType":"StructuredDocumentation","src":"14641:198:10","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":1938,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14853:15:10","nodeType":"FunctionDefinition","parameters":{"id":1921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1920,"mutability":"mutable","name":"input","nameLocation":"14883:5:10","nodeType":"VariableDeclaration","scope":1938,"src":"14869:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1919,"name":"string","nodeType":"ElementaryTypeName","src":"14869:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14868:21:10"},"returnParameters":{"id":1926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1923,"mutability":"mutable","name":"success","nameLocation":"14918:7:10","nodeType":"VariableDeclaration","scope":1938,"src":"14913:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1922,"name":"bool","nodeType":"ElementaryTypeName","src":"14913:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1925,"mutability":"mutable","name":"value","nameLocation":"14935:5:10","nodeType":"VariableDeclaration","scope":1938,"src":"14927:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1924,"name":"address","nodeType":"ElementaryTypeName","src":"14927:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14912:29:10"},"scope":2281,"src":"14844:168:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2041,"nodeType":"Block","src":"15405:733:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1952,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"15419:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":1955,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"15431:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15425:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1953,"name":"bytes","nodeType":"ElementaryTypeName","src":"15425:5:10","typeDescriptions":{}}},"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15425:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15438:6:10","memberName":"length","nodeType":"MemberAccess","src":"15425:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15419:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1959,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"15448:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1960,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"15456:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15448:11:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15419:40:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1970,"nodeType":"IfStatement","src":"15415:72:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15469:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":1966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15484:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15476:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1964,"name":"address","nodeType":"ElementaryTypeName","src":"15476:7:10","typeDescriptions":{}}},"id":1967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15476:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1968,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15468:19:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":1951,"id":1969,"nodeType":"Return","src":"15461:26:10"}},{"assignments":[1972],"declarations":[{"constant":false,"id":1972,"mutability":"mutable","name":"hasPrefix","nameLocation":"15503:9:10","nodeType":"VariableDeclaration","scope":2041,"src":"15498:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1971,"name":"bool","nodeType":"ElementaryTypeName","src":"15498:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1995,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1973,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"15516:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1974,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"15522:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15530:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15522:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15516:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1978,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15515:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":1993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":1984,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"15572:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15566:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1982,"name":"bytes","nodeType":"ElementaryTypeName","src":"15566:5:10","typeDescriptions":{}}},"id":1985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15566:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1986,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"15580:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1981,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"15543:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":1987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15543:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1980,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15536:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1979,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15536:6:10","typeDescriptions":{}}},"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15536:51:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":1991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15598:4:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":1990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15591:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":1989,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15591:6:10","typeDescriptions":{}}},"id":1992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15591:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15536:67:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15515:88:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15498:105:10"},{"assignments":[1997],"declarations":[{"constant":false,"id":1997,"mutability":"mutable","name":"expectedLength","nameLocation":"15692:14:10","nodeType":"VariableDeclaration","scope":2041,"src":"15684:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1996,"name":"uint256","nodeType":"ElementaryTypeName","src":"15684:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2005,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":1998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15709:2:10","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1999,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"15714:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15724:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6339,"src":"15714:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15714:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15735:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15714:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15709:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15684:52:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2006,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"15801:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2007,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"15807:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15801:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2009,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"15816:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15801:29:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2039,"nodeType":"Block","src":"16081:51:10","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":2032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16103:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16118:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16110:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2033,"name":"address","nodeType":"ElementaryTypeName","src":"16110:7:10","typeDescriptions":{}}},"id":2036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2037,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16102:19:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":1951,"id":2038,"nodeType":"Return","src":"16095:26:10"}]},"id":2040,"nodeType":"IfStatement","src":"15797:335:10","trueBody":{"id":2031,"nodeType":"Block","src":"15832:243:10","statements":[{"assignments":[2012,2014],"declarations":[{"constant":false,"id":2012,"mutability":"mutable","name":"s","nameLocation":"15953:1:10","nodeType":"VariableDeclaration","scope":2031,"src":"15948:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2011,"name":"bool","nodeType":"ElementaryTypeName","src":"15948:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2014,"mutability":"mutable","name":"v","nameLocation":"15964:1:10","nodeType":"VariableDeclaration","scope":2031,"src":"15956:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2013,"name":"uint256","nodeType":"ElementaryTypeName","src":"15956:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2020,"initialValue":{"arguments":[{"id":2016,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"16001:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2017,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"16008:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2018,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"16015:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2015,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"15969:31:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15969:50:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15947:72:10"},{"expression":{"components":[{"id":2021,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2012,"src":"16041:1:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":2026,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2014,"src":"16060:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2025,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16052:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2024,"name":"uint160","nodeType":"ElementaryTypeName","src":"16052:7:10","typeDescriptions":{}}},"id":2027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16052:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16044:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2022,"name":"address","nodeType":"ElementaryTypeName","src":"16044:7:10","typeDescriptions":{}}},"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16044:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2029,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16040:24:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":1951,"id":2030,"nodeType":"Return","src":"16033:31:10"}]}}]},"documentation":{"id":1939,"nodeType":"StructuredDocumentation","src":"15018:226:10","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":2042,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15258:15:10","nodeType":"FunctionDefinition","parameters":{"id":1946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1941,"mutability":"mutable","name":"input","nameLocation":"15297:5:10","nodeType":"VariableDeclaration","scope":2042,"src":"15283:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1940,"name":"string","nodeType":"ElementaryTypeName","src":"15283:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1943,"mutability":"mutable","name":"begin","nameLocation":"15320:5:10","nodeType":"VariableDeclaration","scope":2042,"src":"15312:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1942,"name":"uint256","nodeType":"ElementaryTypeName","src":"15312:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1945,"mutability":"mutable","name":"end","nameLocation":"15343:3:10","nodeType":"VariableDeclaration","scope":2042,"src":"15335:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1944,"name":"uint256","nodeType":"ElementaryTypeName","src":"15335:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15273:79:10"},"returnParameters":{"id":1951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1948,"mutability":"mutable","name":"success","nameLocation":"15381:7:10","nodeType":"VariableDeclaration","scope":2042,"src":"15376:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1947,"name":"bool","nodeType":"ElementaryTypeName","src":"15376:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1950,"mutability":"mutable","name":"value","nameLocation":"15398:5:10","nodeType":"VariableDeclaration","scope":2042,"src":"15390:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1949,"name":"address","nodeType":"ElementaryTypeName","src":"15390:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15375:29:10"},"scope":2281,"src":"15249:889:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2101,"nodeType":"Block","src":"16207:461:10","statements":[{"assignments":[2050],"declarations":[{"constant":false,"id":2050,"mutability":"mutable","name":"value","nameLocation":"16223:5:10","nodeType":"VariableDeclaration","scope":2101,"src":"16217:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2049,"name":"uint8","nodeType":"ElementaryTypeName","src":"16217:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2055,"initialValue":{"arguments":[{"id":2053,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"16237:3:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16231:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2051,"name":"uint8","nodeType":"ElementaryTypeName","src":"16231:5:10","typeDescriptions":{}}},"id":2054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16231:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16217:24:10"},{"id":2098,"nodeType":"UncheckedBlock","src":"16401:238:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2056,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"16429:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":2057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16437:2:10","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16429:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2059,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"16443:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":2060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16451:2:10","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16443:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16429:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"16489:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16497:2:10","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16489:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2070,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"16503:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":2071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16511:3:10","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16503:11:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16489:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2078,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"16550:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":2079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16558:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16550:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2081,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"16564:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":2082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16572:2:10","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16564:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16550:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":2091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16618:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2090,"name":"uint8","nodeType":"ElementaryTypeName","src":"16618:5:10","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":2089,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16613:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16613:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":2093,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16625:3:10","memberName":"max","nodeType":"MemberAccess","src":"16613:15:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2048,"id":2094,"nodeType":"Return","src":"16606:22:10"},"id":2095,"nodeType":"IfStatement","src":"16546:82:10","trueBody":{"expression":{"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2085,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"16576:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":2086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16585:2:10","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16576:11:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2088,"nodeType":"ExpressionStatement","src":"16576:11:10"}},"id":2096,"nodeType":"IfStatement","src":"16485:143:10","trueBody":{"expression":{"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2074,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"16516:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":2075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16525:2:10","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16516:11:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2077,"nodeType":"ExpressionStatement","src":"16516:11:10"}},"id":2097,"nodeType":"IfStatement","src":"16425:203:10","trueBody":{"expression":{"id":2065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2063,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"16455:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":2064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16464:2:10","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16455:11:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2066,"nodeType":"ExpressionStatement","src":"16455:11:10"}}]},{"expression":{"id":2099,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2050,"src":"16656:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2048,"id":2100,"nodeType":"Return","src":"16649:12:10"}]},"id":2102,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16153:12:10","nodeType":"FunctionDefinition","parameters":{"id":2045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2044,"mutability":"mutable","name":"chr","nameLocation":"16173:3:10","nodeType":"VariableDeclaration","scope":2102,"src":"16166:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2043,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16166:6:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16165:12:10"},"returnParameters":{"id":2048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2047,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2102,"src":"16200:5:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2046,"name":"uint8","nodeType":"ElementaryTypeName","src":"16200:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16199:7:10"},"scope":2281,"src":"16144:524:10","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2267,"nodeType":"Block","src":"17334:1331:10","statements":[{"assignments":[2111],"declarations":[{"constant":false,"id":2111,"mutability":"mutable","name":"buffer","nameLocation":"17357:6:10","nodeType":"VariableDeclaration","scope":2267,"src":"17344:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2110,"name":"bytes","nodeType":"ElementaryTypeName","src":"17344:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2116,"initialValue":{"arguments":[{"id":2114,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2105,"src":"17372:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2113,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17366:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2112,"name":"bytes","nodeType":"ElementaryTypeName","src":"17366:5:10","typeDescriptions":{}}},"id":2115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17366:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17344:34:10"},{"assignments":[2118],"declarations":[{"constant":false,"id":2118,"mutability":"mutable","name":"output","nameLocation":"17401:6:10","nodeType":"VariableDeclaration","scope":2267,"src":"17388:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2117,"name":"bytes","nodeType":"ElementaryTypeName","src":"17388:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2126,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17420:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":2122,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2111,"src":"17424:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17431:6:10","memberName":"length","nodeType":"MemberAccess","src":"17424:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17420:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17410:9:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2119,"name":"bytes","nodeType":"ElementaryTypeName","src":"17414:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17410:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17388:50:10"},{"assignments":[2128],"declarations":[{"constant":false,"id":2128,"mutability":"mutable","name":"outputLength","nameLocation":"17479:12:10","nodeType":"VariableDeclaration","scope":2267,"src":"17471:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2127,"name":"uint256","nodeType":"ElementaryTypeName","src":"17471:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2130,"initialValue":{"hexValue":"30","id":2129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17494:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17471:24:10"},{"body":{"id":2259,"nodeType":"Block","src":"17546:854:10","statements":[{"assignments":[2142],"declarations":[{"constant":false,"id":2142,"mutability":"mutable","name":"char","nameLocation":"17567:4:10","nodeType":"VariableDeclaration","scope":2259,"src":"17560:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2141,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17560:6:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2150,"initialValue":{"arguments":[{"arguments":[{"id":2146,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2111,"src":"17604:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2147,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"17612:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2145,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"17581:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17581:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17574:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2143,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17574:6:10","typeDescriptions":{}}},"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17574:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17560:55:10"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2151,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"17635:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17659:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":2155,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"17670:4:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17664:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2153,"name":"uint8","nodeType":"ElementaryTypeName","src":"17664:5:10","typeDescriptions":{}}},"id":2156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17664:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17659:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2158,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17658:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17635:41:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2160,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17634:43:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17681:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17634:48:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2163,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17633:50:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2257,"nodeType":"Block","src":"18328:62:10","statements":[{"expression":{"id":2255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2250,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"18346:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2253,"indexExpression":{"id":2252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18353:14:10","subExpression":{"id":2251,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"18353:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18346:22:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2254,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"18371:4:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18346:29:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2256,"nodeType":"ExpressionStatement","src":"18346:29:10"}]},"id":2258,"nodeType":"IfStatement","src":"17629:761:10","trueBody":{"id":2249,"nodeType":"Block","src":"17685:637:10","statements":[{"expression":{"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2164,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"17703:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2167,"indexExpression":{"id":2166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17710:14:10","subExpression":{"id":2165,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"17710:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17703:22:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":2168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17728:4:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17703:29:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2170,"nodeType":"ExpressionStatement","src":"17703:29:10"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2171,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"17754:4:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":2172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17762:4:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17754:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2181,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"17823:4:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":2182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17831:4:10","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17823:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2191,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"17892:4:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":2192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17900:4:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17892:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2201,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"17961:4:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":2202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17969:4:10","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17961:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2211,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"18030:4:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":2212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18038:4:10","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18030:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2221,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"18099:4:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":2222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18107:4:10","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18099:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2231,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"18169:4:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":2232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18177:4:10","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18169:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2242,"nodeType":"IfStatement","src":"18165:143:10","trueBody":{"id":2241,"nodeType":"Block","src":"18183:125:10","statements":[{"expression":{"id":2239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2234,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"18261:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2237,"indexExpression":{"id":2236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18268:14:10","subExpression":{"id":2235,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"18268:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18261:22:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":2238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18286:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18261:28:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2240,"nodeType":"ExpressionStatement","src":"18261:28:10"}]}},"id":2243,"nodeType":"IfStatement","src":"18095:213:10","trueBody":{"expression":{"id":2229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2224,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"18113:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2227,"indexExpression":{"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18120:14:10","subExpression":{"id":2225,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"18120:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18113:22:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":2228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18138:4:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18113:29:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2230,"nodeType":"ExpressionStatement","src":"18113:29:10"}},"id":2244,"nodeType":"IfStatement","src":"18026:282:10","trueBody":{"expression":{"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2214,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"18044:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2217,"indexExpression":{"id":2216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18051:14:10","subExpression":{"id":2215,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"18051:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18044:22:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":2218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18069:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18044:28:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2220,"nodeType":"ExpressionStatement","src":"18044:28:10"}},"id":2245,"nodeType":"IfStatement","src":"17957:351:10","trueBody":{"expression":{"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2204,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"17975:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2207,"indexExpression":{"id":2206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17982:14:10","subExpression":{"id":2205,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"17982:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17975:22:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":2208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18000:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17975:28:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2210,"nodeType":"ExpressionStatement","src":"17975:28:10"}},"id":2246,"nodeType":"IfStatement","src":"17888:420:10","trueBody":{"expression":{"id":2199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2194,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"17906:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2197,"indexExpression":{"id":2196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17913:14:10","subExpression":{"id":2195,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"17913:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17906:22:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":2198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17931:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17906:28:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2200,"nodeType":"ExpressionStatement","src":"17906:28:10"}},"id":2247,"nodeType":"IfStatement","src":"17819:489:10","trueBody":{"expression":{"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2184,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"17837:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2187,"indexExpression":{"id":2186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17844:14:10","subExpression":{"id":2185,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"17844:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17837:22:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":2188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17862:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17837:28:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2190,"nodeType":"ExpressionStatement","src":"17837:28:10"}},"id":2248,"nodeType":"IfStatement","src":"17750:558:10","trueBody":{"expression":{"id":2179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2174,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"17768:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2177,"indexExpression":{"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17775:14:10","subExpression":{"id":2175,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"17775:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17768:22:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":2178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17793:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17768:28:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2180,"nodeType":"ExpressionStatement","src":"17768:28:10"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2134,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"17522:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2135,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2111,"src":"17526:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17533:6:10","memberName":"length","nodeType":"MemberAccess","src":"17526:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17522:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2260,"initializationExpression":{"assignments":[2132],"declarations":[{"constant":false,"id":2132,"mutability":"mutable","name":"i","nameLocation":"17519:1:10","nodeType":"VariableDeclaration","scope":2260,"src":"17511:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2131,"name":"uint256","nodeType":"ElementaryTypeName","src":"17511:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2133,"nodeType":"VariableDeclarationStatement","src":"17511:9:10"},"loopExpression":{"expression":{"id":2139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17541:3:10","subExpression":{"id":2138,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"17543:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2140,"nodeType":"ExpressionStatement","src":"17541:3:10"},"nodeType":"ForStatement","src":"17506:894:10"},{"AST":{"nodeType":"YulBlock","src":"18498:129:10","statements":[{"expression":{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"18519:6:10"},{"name":"outputLength","nodeType":"YulIdentifier","src":"18527:12:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18512:6:10"},"nodeType":"YulFunctionCall","src":"18512:28:10"},"nodeType":"YulExpressionStatement","src":"18512:28:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18560:4:10","type":"","value":"0x40"},{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"18570:6:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18582:1:10","type":"","value":"5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18589:1:10","type":"","value":"5"},{"arguments":[{"name":"outputLength","nodeType":"YulIdentifier","src":"18596:12:10"},{"kind":"number","nodeType":"YulLiteral","src":"18610:2:10","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18592:3:10"},"nodeType":"YulFunctionCall","src":"18592:21:10"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"18585:3:10"},"nodeType":"YulFunctionCall","src":"18585:29:10"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18578:3:10"},"nodeType":"YulFunctionCall","src":"18578:37:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18566:3:10"},"nodeType":"YulFunctionCall","src":"18566:50:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18553:6:10"},"nodeType":"YulFunctionCall","src":"18553:64:10"},"nodeType":"YulExpressionStatement","src":"18553:64:10"}]},"evmVersion":"paris","externalReferences":[{"declaration":2118,"isOffset":false,"isSlot":false,"src":"18519:6:10","valueSize":1},{"declaration":2118,"isOffset":false,"isSlot":false,"src":"18570:6:10","valueSize":1},{"declaration":2128,"isOffset":false,"isSlot":false,"src":"18527:12:10","valueSize":1},{"declaration":2128,"isOffset":false,"isSlot":false,"src":"18596:12:10","valueSize":1}],"flags":["memory-safe"],"id":2261,"nodeType":"InlineAssembly","src":"18473:154:10"},{"expression":{"arguments":[{"id":2264,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"18651:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18644:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2262,"name":"string","nodeType":"ElementaryTypeName","src":"18644:6:10","typeDescriptions":{}}},"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18644:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2109,"id":2266,"nodeType":"Return","src":"18637:21:10"}]},"documentation":{"id":2103,"nodeType":"StructuredDocumentation","src":"16674:576:10","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":2268,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17264:10:10","nodeType":"FunctionDefinition","parameters":{"id":2106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2105,"mutability":"mutable","name":"input","nameLocation":"17289:5:10","nodeType":"VariableDeclaration","scope":2268,"src":"17275:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2104,"name":"string","nodeType":"ElementaryTypeName","src":"17275:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17274:21:10"},"returnParameters":{"id":2109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2108,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2268,"src":"17319:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2107,"name":"string","nodeType":"ElementaryTypeName","src":"17319:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17318:15:10"},"scope":2281,"src":"17255:1410:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2279,"nodeType":"Block","src":"19050:225:10","statements":[{"AST":{"nodeType":"YulBlock","src":"19199:70:10","statements":[{"nodeType":"YulAssignment","src":"19213:46:10","value":{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"19232:6:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19244:4:10","type":"","value":"0x20"},{"name":"offset","nodeType":"YulIdentifier","src":"19250:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19240:3:10"},"nodeType":"YulFunctionCall","src":"19240:17:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19228:3:10"},"nodeType":"YulFunctionCall","src":"19228:30:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19222:5:10"},"nodeType":"YulFunctionCall","src":"19222:37:10"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19213:5:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2271,"isOffset":false,"isSlot":false,"src":"19232:6:10","valueSize":1},{"declaration":2273,"isOffset":false,"isSlot":false,"src":"19250:6:10","valueSize":1},{"declaration":2276,"isOffset":false,"isSlot":false,"src":"19213:5:10","valueSize":1}],"flags":["memory-safe"],"id":2278,"nodeType":"InlineAssembly","src":"19174:95:10"}]},"documentation":{"id":2269,"nodeType":"StructuredDocumentation","src":"18671:268:10","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":2280,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18953:22:10","nodeType":"FunctionDefinition","parameters":{"id":2274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2271,"mutability":"mutable","name":"buffer","nameLocation":"18989:6:10","nodeType":"VariableDeclaration","scope":2280,"src":"18976:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2270,"name":"bytes","nodeType":"ElementaryTypeName","src":"18976:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2273,"mutability":"mutable","name":"offset","nameLocation":"19005:6:10","nodeType":"VariableDeclaration","scope":2280,"src":"18997:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2272,"name":"uint256","nodeType":"ElementaryTypeName","src":"18997:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18975:37:10"},"returnParameters":{"id":2277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2276,"mutability":"mutable","name":"value","nameLocation":"19043:5:10","nodeType":"VariableDeclaration","scope":2280,"src":"19035:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2275,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19035:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19034:15:10"},"scope":2281,"src":"18944:331:10","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2282,"src":"297:18980:10","usedErrors":[939,942,945],"usedEvents":[]}],"src":"101:19177:10"},"id":10},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[2629]},"id":2630,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2283,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:11"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":2284,"nodeType":"StructuredDocumentation","src":"138:205:11","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":2629,"linearizedBaseContracts":[2629],"name":"ECDSA","nameLocation":"352:5:11","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":2289,"members":[{"id":2285,"name":"NoError","nameLocation":"392:7:11","nodeType":"EnumValue","src":"392:7:11"},{"id":2286,"name":"InvalidSignature","nameLocation":"409:16:11","nodeType":"EnumValue","src":"409:16:11"},{"id":2287,"name":"InvalidSignatureLength","nameLocation":"435:22:11","nodeType":"EnumValue","src":"435:22:11"},{"id":2288,"name":"InvalidSignatureS","nameLocation":"467:17:11","nodeType":"EnumValue","src":"467:17:11"}],"name":"RecoverError","nameLocation":"369:12:11","nodeType":"EnumDefinition","src":"364:126:11"},{"documentation":{"id":2290,"nodeType":"StructuredDocumentation","src":"496:63:11","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":2292,"name":"ECDSAInvalidSignature","nameLocation":"570:21:11","nodeType":"ErrorDefinition","parameters":{"id":2291,"nodeType":"ParameterList","parameters":[],"src":"591:2:11"},"src":"564:30:11"},{"documentation":{"id":2293,"nodeType":"StructuredDocumentation","src":"600:60:11","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":2297,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:11","nodeType":"ErrorDefinition","parameters":{"id":2296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2295,"mutability":"mutable","name":"length","nameLocation":"707:6:11","nodeType":"VariableDeclaration","scope":2297,"src":"699:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2294,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:11"},"src":"665:50:11"},{"documentation":{"id":2298,"nodeType":"StructuredDocumentation","src":"721:85:11","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":2302,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:11","nodeType":"ErrorDefinition","parameters":{"id":2301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2300,"mutability":"mutable","name":"s","nameLocation":"848:1:11","nodeType":"VariableDeclaration","scope":2302,"src":"840:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2299,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:11"},"src":"811:40:11"},{"body":{"id":2354,"nodeType":"Block","src":"2285:622:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2317,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"2299:9:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:11","memberName":"length","nodeType":"MemberAccess","src":"2299:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":2319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:11","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2352,"nodeType":"Block","src":"2793:108:11","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2339,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:11","typeDescriptions":{}}},"id":2342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2343,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2289,"src":"2827:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2289_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:11","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2287,"src":"2827:35:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2289","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":2347,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"2872:9:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:11","memberName":"length","nodeType":"MemberAccess","src":"2872:16:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2346,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2345,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:11","typeDescriptions":{}}},"id":2349,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2350,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2289_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2316,"id":2351,"nodeType":"Return","src":"2807:83:11"}]},"id":2353,"nodeType":"IfStatement","src":"2295:606:11","trueBody":{"id":2338,"nodeType":"Block","src":"2323:464:11","statements":[{"assignments":[2322],"declarations":[{"constant":false,"id":2322,"mutability":"mutable","name":"r","nameLocation":"2345:1:11","nodeType":"VariableDeclaration","scope":2338,"src":"2337:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2321,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2323,"nodeType":"VariableDeclarationStatement","src":"2337:9:11"},{"assignments":[2325],"declarations":[{"constant":false,"id":2325,"mutability":"mutable","name":"s","nameLocation":"2368:1:11","nodeType":"VariableDeclaration","scope":2338,"src":"2360:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2324,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2326,"nodeType":"VariableDeclarationStatement","src":"2360:9:11"},{"assignments":[2328],"declarations":[{"constant":false,"id":2328,"mutability":"mutable","name":"v","nameLocation":"2389:1:11","nodeType":"VariableDeclaration","scope":2338,"src":"2383:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2327,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2329,"nodeType":"VariableDeclarationStatement","src":"2383:7:11"},{"AST":{"nodeType":"YulBlock","src":"2560:171:11","statements":[{"nodeType":"YulAssignment","src":"2578:32:11","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2593:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2604:4:11","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2589:3:11"},"nodeType":"YulFunctionCall","src":"2589:20:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2583:5:11"},"nodeType":"YulFunctionCall","src":"2583:27:11"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2578:1:11"}]},{"nodeType":"YulAssignment","src":"2627:32:11","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2642:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2653:4:11","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2638:3:11"},"nodeType":"YulFunctionCall","src":"2638:20:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2632:5:11"},"nodeType":"YulFunctionCall","src":"2632:27:11"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2627:1:11"}]},{"nodeType":"YulAssignment","src":"2676:41:11","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2686:1:11","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2699:9:11"},{"kind":"number","nodeType":"YulLiteral","src":"2710:4:11","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2695:3:11"},"nodeType":"YulFunctionCall","src":"2695:20:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2689:5:11"},"nodeType":"YulFunctionCall","src":"2689:27:11"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2681:4:11"},"nodeType":"YulFunctionCall","src":"2681:36:11"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2676:1:11"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2322,"isOffset":false,"isSlot":false,"src":"2578:1:11","valueSize":1},{"declaration":2325,"isOffset":false,"isSlot":false,"src":"2627:1:11","valueSize":1},{"declaration":2307,"isOffset":false,"isSlot":false,"src":"2593:9:11","valueSize":1},{"declaration":2307,"isOffset":false,"isSlot":false,"src":"2642:9:11","valueSize":1},{"declaration":2307,"isOffset":false,"isSlot":false,"src":"2699:9:11","valueSize":1},{"declaration":2328,"isOffset":false,"isSlot":false,"src":"2676:1:11","valueSize":1}],"flags":["memory-safe"],"id":2330,"nodeType":"InlineAssembly","src":"2535:196:11"},{"expression":{"arguments":[{"id":2332,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"2762:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2333,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"2768:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2334,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"2771:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2335,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2325,"src":"2774:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2331,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2355,2435,2543],"referencedDeclaration":2543,"src":"2751:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2289_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2289_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2316,"id":2337,"nodeType":"Return","src":"2744:32:11"}]}}]},"documentation":{"id":2303,"nodeType":"StructuredDocumentation","src":"857:1267:11","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":2355,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:11","nodeType":"FunctionDefinition","parameters":{"id":2308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2305,"mutability":"mutable","name":"hash","nameLocation":"2166:4:11","nodeType":"VariableDeclaration","scope":2355,"src":"2158:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2304,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2307,"mutability":"mutable","name":"signature","nameLocation":"2193:9:11","nodeType":"VariableDeclaration","scope":2355,"src":"2180:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2306,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:11"},"returnParameters":{"id":2316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2310,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:11","nodeType":"VariableDeclaration","scope":2355,"src":"2232:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2309,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2313,"mutability":"mutable","name":"err","nameLocation":"2264:3:11","nodeType":"VariableDeclaration","scope":2355,"src":"2251:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2289","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2312,"nodeType":"UserDefinedTypeName","pathNode":{"id":2311,"name":"RecoverError","nameLocations":["2251:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":2289,"src":"2251:12:11"},"referencedDeclaration":2289,"src":"2251:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2289","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2315,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:11","nodeType":"VariableDeclaration","scope":2355,"src":"2269:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2314,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:11"},"scope":2629,"src":"2129:778:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2384,"nodeType":"Block","src":"3801:168:11","statements":[{"assignments":[2366,2369,2371],"declarations":[{"constant":false,"id":2366,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:11","nodeType":"VariableDeclaration","scope":2384,"src":"3812:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2365,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2369,"mutability":"mutable","name":"error","nameLocation":"3844:5:11","nodeType":"VariableDeclaration","scope":2384,"src":"3831:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2289","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2368,"nodeType":"UserDefinedTypeName","pathNode":{"id":2367,"name":"RecoverError","nameLocations":["3831:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":2289,"src":"3831:12:11"},"referencedDeclaration":2289,"src":"3831:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2289","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2371,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:11","nodeType":"VariableDeclaration","scope":2384,"src":"3851:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2370,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2376,"initialValue":{"arguments":[{"id":2373,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2358,"src":"3882:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2374,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2360,"src":"3888:9:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2372,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2355,2435,2543],"referencedDeclaration":2355,"src":"3871:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$2289_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2289_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:11"},{"expression":{"arguments":[{"id":2378,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"3920:5:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2289","typeString":"enum ECDSA.RecoverError"}},{"id":2379,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2371,"src":"3927:8:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2289","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2377,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"3908:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2289_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2381,"nodeType":"ExpressionStatement","src":"3908:28:11"},{"expression":{"id":2382,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"3953:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2364,"id":2383,"nodeType":"Return","src":"3946:16:11"}]},"documentation":{"id":2356,"nodeType":"StructuredDocumentation","src":"2913:796:11","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":2385,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:11","nodeType":"FunctionDefinition","parameters":{"id":2361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2358,"mutability":"mutable","name":"hash","nameLocation":"3739:4:11","nodeType":"VariableDeclaration","scope":2385,"src":"3731:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2357,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2360,"mutability":"mutable","name":"signature","nameLocation":"3758:9:11","nodeType":"VariableDeclaration","scope":2385,"src":"3745:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2359,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:11"},"returnParameters":{"id":2364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2363,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2385,"src":"3792:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2362,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:11"},"scope":2629,"src":"3714:255:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2434,"nodeType":"Block","src":"4348:342:11","statements":[{"id":2433,"nodeType":"UncheckedBlock","src":"4358:326:11","statements":[{"assignments":[2403],"declarations":[{"constant":false,"id":2403,"mutability":"mutable","name":"s","nameLocation":"4390:1:11","nodeType":"VariableDeclaration","scope":2433,"src":"4382:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2402,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2410,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2404,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"4394:2:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":2407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:11","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":2406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2405,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:11","typeDescriptions":{}}},"id":2408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:11"},{"assignments":[2412],"declarations":[{"constant":false,"id":2412,"mutability":"mutable","name":"v","nameLocation":"4591:1:11","nodeType":"VariableDeclaration","scope":2433,"src":"4585:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2411,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2425,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2417,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"4610:2:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2415,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:11","typeDescriptions":{}}},"id":2418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":2419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:11","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2421,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":2422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:11","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2413,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:11","typeDescriptions":{}}},"id":2424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:11"},{"expression":{"arguments":[{"id":2427,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"4659:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2428,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2412,"src":"4665:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2429,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2390,"src":"4668:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2430,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"4671:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2426,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2355,2435,2543],"referencedDeclaration":2543,"src":"4648:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2289_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2289_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2401,"id":2432,"nodeType":"Return","src":"4641:32:11"}]}]},"documentation":{"id":2386,"nodeType":"StructuredDocumentation","src":"3975:205:11","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":2435,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:11","nodeType":"FunctionDefinition","parameters":{"id":2393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2388,"mutability":"mutable","name":"hash","nameLocation":"4222:4:11","nodeType":"VariableDeclaration","scope":2435,"src":"4214:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2387,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2390,"mutability":"mutable","name":"r","nameLocation":"4244:1:11","nodeType":"VariableDeclaration","scope":2435,"src":"4236:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2389,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2392,"mutability":"mutable","name":"vs","nameLocation":"4263:2:11","nodeType":"VariableDeclaration","scope":2435,"src":"4255:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2391,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:11"},"returnParameters":{"id":2401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2395,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:11","nodeType":"VariableDeclaration","scope":2435,"src":"4295:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2394,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2398,"mutability":"mutable","name":"err","nameLocation":"4327:3:11","nodeType":"VariableDeclaration","scope":2435,"src":"4314:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2289","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2397,"nodeType":"UserDefinedTypeName","pathNode":{"id":2396,"name":"RecoverError","nameLocations":["4314:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":2289,"src":"4314:12:11"},"referencedDeclaration":2289,"src":"4314:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2289","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2400,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:11","nodeType":"VariableDeclaration","scope":2435,"src":"4332:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2399,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:11"},"scope":2629,"src":"4185:505:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2467,"nodeType":"Block","src":"4903:164:11","statements":[{"assignments":[2448,2451,2453],"declarations":[{"constant":false,"id":2448,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:11","nodeType":"VariableDeclaration","scope":2467,"src":"4914:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2447,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2451,"mutability":"mutable","name":"error","nameLocation":"4946:5:11","nodeType":"VariableDeclaration","scope":2467,"src":"4933:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2289","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2450,"nodeType":"UserDefinedTypeName","pathNode":{"id":2449,"name":"RecoverError","nameLocations":["4933:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":2289,"src":"4933:12:11"},"referencedDeclaration":2289,"src":"4933:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2289","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2453,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:11","nodeType":"VariableDeclaration","scope":2467,"src":"4953:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2452,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2459,"initialValue":{"arguments":[{"id":2455,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2438,"src":"4984:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2456,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2440,"src":"4990:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2457,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"4993:2:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2454,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2355,2435,2543],"referencedDeclaration":2435,"src":"4973:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2289_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2289_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:11"},{"expression":{"arguments":[{"id":2461,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2451,"src":"5018:5:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2289","typeString":"enum ECDSA.RecoverError"}},{"id":2462,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2453,"src":"5025:8:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2289","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2460,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"5006:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2289_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2464,"nodeType":"ExpressionStatement","src":"5006:28:11"},{"expression":{"id":2465,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"5051:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2446,"id":2466,"nodeType":"Return","src":"5044:16:11"}]},"documentation":{"id":2436,"nodeType":"StructuredDocumentation","src":"4696:116:11","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":2468,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:11","nodeType":"FunctionDefinition","parameters":{"id":2443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2438,"mutability":"mutable","name":"hash","nameLocation":"4842:4:11","nodeType":"VariableDeclaration","scope":2468,"src":"4834:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2437,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2440,"mutability":"mutable","name":"r","nameLocation":"4856:1:11","nodeType":"VariableDeclaration","scope":2468,"src":"4848:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2439,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2442,"mutability":"mutable","name":"vs","nameLocation":"4867:2:11","nodeType":"VariableDeclaration","scope":2468,"src":"4859:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2441,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:11"},"returnParameters":{"id":2446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2445,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2468,"src":"4894:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2444,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:11"},"scope":2629,"src":"4817:250:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2542,"nodeType":"Block","src":"5382:1372:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2489,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"6278:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2487,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:11","typeDescriptions":{}}},"id":2490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":2491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:11","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2503,"nodeType":"IfStatement","src":"6266:164:11","trueBody":{"id":2502,"nodeType":"Block","src":"6351:79:11","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2493,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:11","typeDescriptions":{}}},"id":2496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2497,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2289,"src":"6385:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2289_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:11","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2288,"src":"6385:30:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2289","typeString":"enum ECDSA.RecoverError"}},{"id":2499,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"6417:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2500,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2289_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2486,"id":2501,"nodeType":"Return","src":"6365:54:11"}]}},{"assignments":[2505],"declarations":[{"constant":false,"id":2505,"mutability":"mutable","name":"signer","nameLocation":"6532:6:11","nodeType":"VariableDeclaration","scope":2542,"src":"6524:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2504,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2512,"initialValue":{"arguments":[{"id":2507,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"6551:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2508,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"6557:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2509,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2475,"src":"6560:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2510,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2477,"src":"6563:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2506,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6541:9:11","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":2511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:11"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2513,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2505,"src":"6579:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2514,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:11","typeDescriptions":{}}},"id":2517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2532,"nodeType":"IfStatement","src":"6575:113:11","trueBody":{"id":2531,"nodeType":"Block","src":"6601:87:11","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2519,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:11","typeDescriptions":{}}},"id":2522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2523,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2289,"src":"6635:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2289_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:11","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2286,"src":"6635:29:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2289","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":2527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2525,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:11","typeDescriptions":{}}},"id":2528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2529,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2289_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2486,"id":2530,"nodeType":"Return","src":"6615:62:11"}]}},{"expression":{"components":[{"id":2533,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2505,"src":"6706:6:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2534,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2289,"src":"6714:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2289_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:11","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2285,"src":"6714:20:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2289","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":2538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2536,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:11","typeDescriptions":{}}},"id":2539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2540,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:11","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2289_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2486,"id":2541,"nodeType":"Return","src":"6698:49:11"}]},"documentation":{"id":2469,"nodeType":"StructuredDocumentation","src":"5073:125:11","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":2543,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:11","nodeType":"FunctionDefinition","parameters":{"id":2478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2471,"mutability":"mutable","name":"hash","nameLocation":"5240:4:11","nodeType":"VariableDeclaration","scope":2543,"src":"5232:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2470,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2473,"mutability":"mutable","name":"v","nameLocation":"5260:1:11","nodeType":"VariableDeclaration","scope":2543,"src":"5254:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2472,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2475,"mutability":"mutable","name":"r","nameLocation":"5279:1:11","nodeType":"VariableDeclaration","scope":2543,"src":"5271:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2474,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2477,"mutability":"mutable","name":"s","nameLocation":"5298:1:11","nodeType":"VariableDeclaration","scope":2543,"src":"5290:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2476,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:11"},"returnParameters":{"id":2486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2480,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:11","nodeType":"VariableDeclaration","scope":2543,"src":"5329:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2479,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2483,"mutability":"mutable","name":"err","nameLocation":"5361:3:11","nodeType":"VariableDeclaration","scope":2543,"src":"5348:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2289","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2482,"nodeType":"UserDefinedTypeName","pathNode":{"id":2481,"name":"RecoverError","nameLocations":["5348:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":2289,"src":"5348:12:11"},"referencedDeclaration":2289,"src":"5348:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2289","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2485,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:11","nodeType":"VariableDeclaration","scope":2543,"src":"5366:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2484,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:11"},"scope":2629,"src":"5203:1551:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2578,"nodeType":"Block","src":"6981:166:11","statements":[{"assignments":[2558,2561,2563],"declarations":[{"constant":false,"id":2558,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:11","nodeType":"VariableDeclaration","scope":2578,"src":"6992:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2557,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2561,"mutability":"mutable","name":"error","nameLocation":"7024:5:11","nodeType":"VariableDeclaration","scope":2578,"src":"7011:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2289","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2560,"nodeType":"UserDefinedTypeName","pathNode":{"id":2559,"name":"RecoverError","nameLocations":["7011:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":2289,"src":"7011:12:11"},"referencedDeclaration":2289,"src":"7011:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2289","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2563,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:11","nodeType":"VariableDeclaration","scope":2578,"src":"7031:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2562,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2570,"initialValue":{"arguments":[{"id":2565,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"7062:4:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2566,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"7068:1:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2567,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"7071:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2568,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2552,"src":"7074:1:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2564,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2355,2435,2543],"referencedDeclaration":2543,"src":"7051:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2289_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2289_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:11"},{"expression":{"arguments":[{"id":2572,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2561,"src":"7098:5:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2289","typeString":"enum ECDSA.RecoverError"}},{"id":2573,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"7105:8:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2289","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2571,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"7086:11:11","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2289_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2575,"nodeType":"ExpressionStatement","src":"7086:28:11"},{"expression":{"id":2576,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"7131:9:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2556,"id":2577,"nodeType":"Return","src":"7124:16:11"}]},"documentation":{"id":2544,"nodeType":"StructuredDocumentation","src":"6760:122:11","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":2579,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:11","nodeType":"FunctionDefinition","parameters":{"id":2553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2546,"mutability":"mutable","name":"hash","nameLocation":"6912:4:11","nodeType":"VariableDeclaration","scope":2579,"src":"6904:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2545,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2548,"mutability":"mutable","name":"v","nameLocation":"6924:1:11","nodeType":"VariableDeclaration","scope":2579,"src":"6918:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2547,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2550,"mutability":"mutable","name":"r","nameLocation":"6935:1:11","nodeType":"VariableDeclaration","scope":2579,"src":"6927:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2549,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2552,"mutability":"mutable","name":"s","nameLocation":"6946:1:11","nodeType":"VariableDeclaration","scope":2579,"src":"6938:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2551,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:11"},"returnParameters":{"id":2556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2555,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2579,"src":"6972:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2554,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:11"},"scope":2629,"src":"6887:260:11","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2627,"nodeType":"Block","src":"7352:460:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2289","typeString":"enum ECDSA.RecoverError"},"id":2591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2588,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"7366:5:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2289","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2589,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2289,"src":"7375:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2289_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:11","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2285,"src":"7375:20:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2289","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2289","typeString":"enum ECDSA.RecoverError"},"id":2597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2594,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"7462:5:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2289","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2595,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2289,"src":"7471:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2289_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:11","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2286,"src":"7471:29:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2289","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2289","typeString":"enum ECDSA.RecoverError"},"id":2605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2602,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"7567:5:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2289","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2603,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2289,"src":"7576:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2289_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:11","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2287,"src":"7576:35:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2289","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2289","typeString":"enum ECDSA.RecoverError"},"id":2617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2614,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"7701:5:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2289","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2615,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2289,"src":"7710:12:11","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2289_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:11","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2288,"src":"7710:30:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2289","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2623,"nodeType":"IfStatement","src":"7697:109:11","trueBody":{"id":2622,"nodeType":"Block","src":"7742:64:11","statements":[{"errorCall":{"arguments":[{"id":2619,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"7786:8:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2618,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2302,"src":"7763:22:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":2620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2621,"nodeType":"RevertStatement","src":"7756:39:11"}]}},"id":2624,"nodeType":"IfStatement","src":"7563:243:11","trueBody":{"id":2613,"nodeType":"Block","src":"7613:78:11","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2609,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"7670:8:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2607,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:11","typeDescriptions":{}}},"id":2610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2606,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2297,"src":"7634:27:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2612,"nodeType":"RevertStatement","src":"7627:53:11"}]}},"id":2625,"nodeType":"IfStatement","src":"7458:348:11","trueBody":{"id":2601,"nodeType":"Block","src":"7502:55:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2598,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2292,"src":"7523:21:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2600,"nodeType":"RevertStatement","src":"7516:30:11"}]}},"id":2626,"nodeType":"IfStatement","src":"7362:444:11","trueBody":{"id":2593,"nodeType":"Block","src":"7397:55:11","statements":[{"functionReturnParameters":2587,"id":2592,"nodeType":"Return","src":"7411:7:11"}]}}]},"documentation":{"id":2580,"nodeType":"StructuredDocumentation","src":"7153:122:11","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":2628,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:11","nodeType":"FunctionDefinition","parameters":{"id":2586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2583,"mutability":"mutable","name":"error","nameLocation":"7314:5:11","nodeType":"VariableDeclaration","scope":2628,"src":"7301:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2289","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2582,"nodeType":"UserDefinedTypeName","pathNode":{"id":2581,"name":"RecoverError","nameLocations":["7301:12:11"],"nodeType":"IdentifierPath","referencedDeclaration":2289,"src":"7301:12:11"},"referencedDeclaration":2289,"src":"7301:12:11","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2289","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2585,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:11","nodeType":"VariableDeclaration","scope":2628,"src":"7321:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2584,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:11"},"returnParameters":{"id":2587,"nodeType":"ParameterList","parameters":[],"src":"7352:0:11"},"scope":2629,"src":"7280:532:11","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2630,"src":"344:7470:11","usedErrors":[2292,2297,2302],"usedEvents":[]}],"src":"112:7703:11"},"id":11},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"EIP712":[2856],"IERC5267":[192],"MessageHashUtils":[2942],"ShortString":[544],"ShortStrings":[755]},"id":2857,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2631,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:12"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"./MessageHashUtils.sol","id":2633,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2857,"sourceUnit":2943,"src":"139:56:12","symbolAliases":[{"foreign":{"id":2632,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2942,"src":"147:16:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":2636,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2857,"sourceUnit":756,"src":"196:62:12","symbolAliases":[{"foreign":{"id":2634,"name":"ShortStrings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"204:12:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2635,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"218:11:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":2638,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2857,"sourceUnit":193,"src":"259:55:12","symbolAliases":[{"foreign":{"id":2637,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"267:8:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2640,"name":"IERC5267","nameLocations":["1988:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":192,"src":"1988:8:12"},"id":2641,"nodeType":"InheritanceSpecifier","src":"1988:8:12"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":2639,"nodeType":"StructuredDocumentation","src":"316:1643:12","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"},"fullyImplemented":true,"id":2856,"linearizedBaseContracts":[2856,192],"name":"EIP712","nameLocation":"1978:6:12","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2643,"libraryName":{"id":2642,"name":"ShortStrings","nameLocations":["2009:12:12"],"nodeType":"IdentifierPath","referencedDeclaration":755,"src":"2009:12:12"},"nodeType":"UsingForDirective","src":"2003:25:12"},{"constant":true,"id":2648,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2059:9:12","nodeType":"VariableDeclaration","scope":2856,"src":"2034:140:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2644,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2034:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":2646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2089:84:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":2645,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2079:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2079:95:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2650,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2399:22:12","nodeType":"VariableDeclaration","scope":2856,"src":"2373:48:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2649,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2373:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2652,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2453:14:12","nodeType":"VariableDeclaration","scope":2856,"src":"2427:40:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2651,"name":"uint256","nodeType":"ElementaryTypeName","src":"2427:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":2654,"mutability":"immutable","name":"_cachedThis","nameLocation":"2499:11:12","nodeType":"VariableDeclaration","scope":2856,"src":"2473:37:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2653,"name":"address","nodeType":"ElementaryTypeName","src":"2473:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":2656,"mutability":"immutable","name":"_hashedName","nameLocation":"2543:11:12","nodeType":"VariableDeclaration","scope":2856,"src":"2517:37:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2655,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2517:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2658,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2586:14:12","nodeType":"VariableDeclaration","scope":2856,"src":"2560:40:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2657,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2560:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2661,"mutability":"immutable","name":"_name","nameLocation":"2637:5:12","nodeType":"VariableDeclaration","scope":2856,"src":"2607:35:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$544","typeString":"ShortString"},"typeName":{"id":2660,"nodeType":"UserDefinedTypeName","pathNode":{"id":2659,"name":"ShortString","nameLocations":["2607:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":544,"src":"2607:11:12"},"referencedDeclaration":544,"src":"2607:11:12","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$544","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":2664,"mutability":"immutable","name":"_version","nameLocation":"2678:8:12","nodeType":"VariableDeclaration","scope":2856,"src":"2648:38:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$544","typeString":"ShortString"},"typeName":{"id":2663,"nodeType":"UserDefinedTypeName","pathNode":{"id":2662,"name":"ShortString","nameLocations":["2648:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":544,"src":"2648:11:12"},"referencedDeclaration":544,"src":"2648:11:12","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$544","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":2666,"mutability":"mutable","name":"_nameFallback","nameLocation":"2757:13:12","nodeType":"VariableDeclaration","scope":2856,"src":"2742:28:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2665,"name":"string","nodeType":"ElementaryTypeName","src":"2742:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":2668,"mutability":"mutable","name":"_versionFallback","nameLocation":"2841:16:12","nodeType":"VariableDeclaration","scope":2856,"src":"2826:31:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2667,"name":"string","nodeType":"ElementaryTypeName","src":"2826:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":2725,"nodeType":"Block","src":"3483:376:12","statements":[{"expression":{"id":2681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2676,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2661,"src":"3493:5:12","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$544","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2679,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"3532:13:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2677,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"3501:4:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3506:25:12","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":696,"src":"3501:30:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$544_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":2680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3501:45:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$544","typeString":"ShortString"}},"src":"3493:53:12","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$544","typeString":"ShortString"}},"id":2682,"nodeType":"ExpressionStatement","src":"3493:53:12"},{"expression":{"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2683,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"3556:8:12","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$544","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2686,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"3601:16:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2684,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"3567:7:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3575:25:12","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":696,"src":"3567:33:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$544_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":2687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3567:51:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$544","typeString":"ShortString"}},"src":"3556:62:12","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$544","typeString":"ShortString"}},"id":2689,"nodeType":"ExpressionStatement","src":"3556:62:12"},{"expression":{"id":2697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2690,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2656,"src":"3628:11:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":2694,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2671,"src":"3658:4:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3652:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2692,"name":"bytes","nodeType":"ElementaryTypeName","src":"3652:5:12","typeDescriptions":{}}},"id":2695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3652:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2691,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3642:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3642:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3628:36:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2698,"nodeType":"ExpressionStatement","src":"3628:36:12"},{"expression":{"id":2706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2699,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2658,"src":"3674:14:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":2703,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"3707:7:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3701:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2701,"name":"bytes","nodeType":"ElementaryTypeName","src":"3701:5:12","typeDescriptions":{}}},"id":2704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3701:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2700,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3691:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3691:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3674:42:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2707,"nodeType":"ExpressionStatement","src":"3674:42:12"},{"expression":{"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2708,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"3727:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2709,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3744:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3750:7:12","memberName":"chainid","nodeType":"MemberAccess","src":"3744:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3727:30:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2712,"nodeType":"ExpressionStatement","src":"3727:30:12"},{"expression":{"id":2716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2713,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2650,"src":"3767:22:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":2714,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"3792:21:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3792:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3767:48:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2717,"nodeType":"ExpressionStatement","src":"3767:48:12"},{"expression":{"id":2723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2718,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"3825:11:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2721,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3847:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2856","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2856","typeString":"contract EIP712"}],"id":2720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3839:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2719,"name":"address","nodeType":"ElementaryTypeName","src":"3839:7:12","typeDescriptions":{}}},"id":2722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3839:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3825:27:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2724,"nodeType":"ExpressionStatement","src":"3825:27:12"}]},"documentation":{"id":2669,"nodeType":"StructuredDocumentation","src":"2864:559:12","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":2726,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2671,"mutability":"mutable","name":"name","nameLocation":"3454:4:12","nodeType":"VariableDeclaration","scope":2726,"src":"3440:18:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2670,"name":"string","nodeType":"ElementaryTypeName","src":"3440:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2673,"mutability":"mutable","name":"version","nameLocation":"3474:7:12","nodeType":"VariableDeclaration","scope":2726,"src":"3460:21:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2672,"name":"string","nodeType":"ElementaryTypeName","src":"3460:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3439:43:12"},"returnParameters":{"id":2675,"nodeType":"ParameterList","parameters":[],"src":"3483:0:12"},"scope":2856,"src":"3428:431:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2751,"nodeType":"Block","src":"4007:200:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2734,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4029:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2856","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2856","typeString":"contract EIP712"}],"id":2733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4021:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2732,"name":"address","nodeType":"ElementaryTypeName","src":"4021:7:12","typeDescriptions":{}}},"id":2735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4021:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2736,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"4038:11:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4021:28:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2738,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4053:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4059:7:12","memberName":"chainid","nodeType":"MemberAccess","src":"4053:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2740,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"4070:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4053:31:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4021:63:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2749,"nodeType":"Block","src":"4146:55:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2746,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2773,"src":"4167:21:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4167:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2731,"id":2748,"nodeType":"Return","src":"4160:30:12"}]},"id":2750,"nodeType":"IfStatement","src":"4017:184:12","trueBody":{"id":2745,"nodeType":"Block","src":"4086:54:12","statements":[{"expression":{"id":2743,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2650,"src":"4107:22:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2731,"id":2744,"nodeType":"Return","src":"4100:29:12"}]}}]},"documentation":{"id":2727,"nodeType":"StructuredDocumentation","src":"3865:75:12","text":" @dev Returns the domain separator for the current chain."},"id":2752,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3954:18:12","nodeType":"FunctionDefinition","parameters":{"id":2728,"nodeType":"ParameterList","parameters":[],"src":"3972:2:12"},"returnParameters":{"id":2731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2730,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2752,"src":"3998:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2729,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3998:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3997:9:12"},"scope":2856,"src":"3945:262:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2772,"nodeType":"Block","src":"4277:115:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":2760,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"4315:9:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2761,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2656,"src":"4326:11:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2762,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2658,"src":"4339:14:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2763,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4355:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4361:7:12","memberName":"chainid","nodeType":"MemberAccess","src":"4355:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2767,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4378:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2856","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2856","typeString":"contract EIP712"}],"id":2766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4370:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2765,"name":"address","nodeType":"ElementaryTypeName","src":"4370:7:12","typeDescriptions":{}}},"id":2768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4370:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2758,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4304:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4308:6:12","memberName":"encode","nodeType":"MemberAccess","src":"4304:10:12","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4304:80:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2757,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4294:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4294:91:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2756,"id":2771,"nodeType":"Return","src":"4287:98:12"}]},"id":2773,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4222:21:12","nodeType":"FunctionDefinition","parameters":{"id":2753,"nodeType":"ParameterList","parameters":[],"src":"4243:2:12"},"returnParameters":{"id":2756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2755,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2773,"src":"4268:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2754,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4268:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4267:9:12"},"scope":2856,"src":"4213:179:12","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":2788,"nodeType":"Block","src":"5103:90:12","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2783,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2752,"src":"5153:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5153:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2785,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"5175:10:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2781,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2942,"src":"5120:16:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$2942_$","typeString":"type(library MessageHashUtils)"}},"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5137:15:12","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":2941,"src":"5120:32:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":2786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5120:66:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2780,"id":2787,"nodeType":"Return","src":"5113:73:12"}]},"documentation":{"id":2774,"nodeType":"StructuredDocumentation","src":"4398:614:12","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":2789,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"5026:16:12","nodeType":"FunctionDefinition","parameters":{"id":2777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2776,"mutability":"mutable","name":"structHash","nameLocation":"5051:10:12","nodeType":"VariableDeclaration","scope":2789,"src":"5043:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2775,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5043:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5042:20:12"},"returnParameters":{"id":2780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2779,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2789,"src":"5094:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2778,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5094:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5093:9:12"},"scope":2856,"src":"5017:176:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[191],"body":{"id":2830,"nodeType":"Block","src":"5571:229:12","statements":[{"expression":{"components":[{"hexValue":"0f","id":2808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5602:7:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":2809,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"5632:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5632:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2811,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2855,"src":"5659:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5659:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":2813,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5689:5:12","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5695:7:12","memberName":"chainid","nodeType":"MemberAccess","src":"5689:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2817,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5724:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2856","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2856","typeString":"contract EIP712"}],"id":2816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5716:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2815,"name":"address","nodeType":"ElementaryTypeName","src":"5716:7:12","typeDescriptions":{}}},"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5716:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5751:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5743:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2819,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5743:7:12","typeDescriptions":{}}},"id":2822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5743:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":2826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5781:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5767:13:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":2823,"name":"uint256","nodeType":"ElementaryTypeName","src":"5771:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2824,"nodeType":"ArrayTypeName","src":"5771:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":2827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5767:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":2828,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5588:205:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":2807,"id":2829,"nodeType":"Return","src":"5581:212:12"}]},"documentation":{"id":2790,"nodeType":"StructuredDocumentation","src":"5199:39:12","text":" @inheritdoc IERC5267"},"functionSelector":"84b0196e","id":2831,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5252:12:12","nodeType":"FunctionDefinition","parameters":{"id":2791,"nodeType":"ParameterList","parameters":[],"src":"5264:2:12"},"returnParameters":{"id":2807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2793,"mutability":"mutable","name":"fields","nameLocation":"5348:6:12","nodeType":"VariableDeclaration","scope":2831,"src":"5341:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2792,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5341:6:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":2795,"mutability":"mutable","name":"name","nameLocation":"5382:4:12","nodeType":"VariableDeclaration","scope":2831,"src":"5368:18:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2794,"name":"string","nodeType":"ElementaryTypeName","src":"5368:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2797,"mutability":"mutable","name":"version","nameLocation":"5414:7:12","nodeType":"VariableDeclaration","scope":2831,"src":"5400:21:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2796,"name":"string","nodeType":"ElementaryTypeName","src":"5400:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2799,"mutability":"mutable","name":"chainId","nameLocation":"5443:7:12","nodeType":"VariableDeclaration","scope":2831,"src":"5435:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2798,"name":"uint256","nodeType":"ElementaryTypeName","src":"5435:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2801,"mutability":"mutable","name":"verifyingContract","nameLocation":"5472:17:12","nodeType":"VariableDeclaration","scope":2831,"src":"5464:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2800,"name":"address","nodeType":"ElementaryTypeName","src":"5464:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2803,"mutability":"mutable","name":"salt","nameLocation":"5511:4:12","nodeType":"VariableDeclaration","scope":2831,"src":"5503:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2802,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5503:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2806,"mutability":"mutable","name":"extensions","nameLocation":"5546:10:12","nodeType":"VariableDeclaration","scope":2831,"src":"5529:27:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2804,"name":"uint256","nodeType":"ElementaryTypeName","src":"5529:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2805,"nodeType":"ArrayTypeName","src":"5529:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5327:239:12"},"scope":2856,"src":"5243:557:12","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2842,"nodeType":"Block","src":"6181:65:12","statements":[{"expression":{"arguments":[{"id":2839,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"6225:13:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2837,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2661,"src":"6198:5:12","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$544","typeString":"ShortString"}},"id":2838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6204:20:12","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":723,"src":"6198:26:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$544_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$544_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":2840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6198:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2836,"id":2841,"nodeType":"Return","src":"6191:48:12"}]},"documentation":{"id":2832,"nodeType":"StructuredDocumentation","src":"5806:256:12","text":" @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":2843,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6129:11:12","nodeType":"FunctionDefinition","parameters":{"id":2833,"nodeType":"ParameterList","parameters":[],"src":"6140:2:12"},"returnParameters":{"id":2836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2835,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2843,"src":"6166:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2834,"name":"string","nodeType":"ElementaryTypeName","src":"6166:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6165:15:12"},"scope":2856,"src":"6120:126:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2854,"nodeType":"Block","src":"6636:71:12","statements":[{"expression":{"arguments":[{"id":2851,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"6683:16:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2849,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"6653:8:12","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$544","typeString":"ShortString"}},"id":2850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6662:20:12","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":723,"src":"6653:29:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$544_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$544_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":2852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6653:47:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2848,"id":2853,"nodeType":"Return","src":"6646:54:12"}]},"documentation":{"id":2844,"nodeType":"StructuredDocumentation","src":"6252:262:12","text":" @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":2855,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6581:14:12","nodeType":"FunctionDefinition","parameters":{"id":2845,"nodeType":"ParameterList","parameters":[],"src":"6595:2:12"},"returnParameters":{"id":2848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2847,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2855,"src":"6621:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2846,"name":"string","nodeType":"ElementaryTypeName","src":"6621:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6620:15:12"},"scope":2856,"src":"6572:135:12","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2857,"src":"1960:4749:12","usedErrors":[552,554],"usedEvents":[172]}],"src":"113:6597:12"},"id":12},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[2942],"Strings":[2281]},"id":2943,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2858,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:13"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":2860,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2943,"sourceUnit":2282,"src":"149:39:13","symbolAliases":[{"foreign":{"id":2859,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"157:7:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":2861,"nodeType":"StructuredDocumentation","src":"190:330:13","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":2942,"linearizedBaseContracts":[2942],"name":"MessageHashUtils","nameLocation":"529:16:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":2870,"nodeType":"Block","src":"1339:341:13","statements":[{"AST":{"nodeType":"YulBlock","src":"1374:300:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1395:4:13","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nodeType":"YulLiteral","src":"1401:34:13","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1388:6:13"},"nodeType":"YulFunctionCall","src":"1388:48:13"},"nodeType":"YulExpressionStatement","src":"1388:48:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1497:4:13","type":"","value":"0x1c"},{"name":"messageHash","nodeType":"YulIdentifier","src":"1503:11:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1490:6:13"},"nodeType":"YulFunctionCall","src":"1490:25:13"},"nodeType":"YulExpressionStatement","src":"1490:25:13"},{"nodeType":"YulAssignment","src":"1569:31:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1589:4:13","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1595:4:13","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1579:9:13"},"nodeType":"YulFunctionCall","src":"1579:21:13"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"1569:6:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2867,"isOffset":false,"isSlot":false,"src":"1569:6:13","valueSize":1},{"declaration":2864,"isOffset":false,"isSlot":false,"src":"1503:11:13","valueSize":1}],"flags":["memory-safe"],"id":2869,"nodeType":"InlineAssembly","src":"1349:325:13"}]},"documentation":{"id":2862,"nodeType":"StructuredDocumentation","src":"552:690:13","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":2871,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1256:22:13","nodeType":"FunctionDefinition","parameters":{"id":2865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2864,"mutability":"mutable","name":"messageHash","nameLocation":"1287:11:13","nodeType":"VariableDeclaration","scope":2871,"src":"1279:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2863,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1279:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1278:21:13"},"returnParameters":{"id":2868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2867,"mutability":"mutable","name":"digest","nameLocation":"1331:6:13","nodeType":"VariableDeclaration","scope":2871,"src":"1323:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2866,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1323:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1322:16:13"},"scope":2942,"src":"1247:433:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2896,"nodeType":"Block","src":"2257:143:13","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":2883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2309:32:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":2888,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2874,"src":"2366:7:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2374:6:13","memberName":"length","nodeType":"MemberAccess","src":"2366:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2886,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"2349:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2281_$","typeString":"type(library Strings)"}},"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2357:8:13","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":993,"src":"2349:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2349:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2343:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2884,"name":"bytes","nodeType":"ElementaryTypeName","src":"2343:5:13","typeDescriptions":{}}},"id":2891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2343:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2892,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2874,"src":"2384:7:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2296:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2880,"name":"bytes","nodeType":"ElementaryTypeName","src":"2296:5:13","typeDescriptions":{}}},"id":2882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2302:6:13","memberName":"concat","nodeType":"MemberAccess","src":"2296:12:13","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2296:96:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2879,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2286:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2286:107:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2878,"id":2895,"nodeType":"Return","src":"2267:126:13"}]},"documentation":{"id":2872,"nodeType":"StructuredDocumentation","src":"1686:480:13","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":2897,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2180:22:13","nodeType":"FunctionDefinition","parameters":{"id":2875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2874,"mutability":"mutable","name":"message","nameLocation":"2216:7:13","nodeType":"VariableDeclaration","scope":2897,"src":"2203:20:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2873,"name":"bytes","nodeType":"ElementaryTypeName","src":"2203:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2202:22:13"},"returnParameters":{"id":2878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2877,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2897,"src":"2248:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2876,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2248:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2247:9:13"},"scope":2942,"src":"2171:229:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2916,"nodeType":"Block","src":"2854:80:13","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":2910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2898:10:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":2911,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"2910:9:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2912,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2902,"src":"2921:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2908,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2881:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2885:12:13","memberName":"encodePacked","nodeType":"MemberAccess","src":"2881:16:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2881:45:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2907,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2871:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2871:56:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2906,"id":2915,"nodeType":"Return","src":"2864:63:13"}]},"documentation":{"id":2898,"nodeType":"StructuredDocumentation","src":"2406:332:13","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":2917,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2752:31:13","nodeType":"FunctionDefinition","parameters":{"id":2903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2900,"mutability":"mutable","name":"validator","nameLocation":"2792:9:13","nodeType":"VariableDeclaration","scope":2917,"src":"2784:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2899,"name":"address","nodeType":"ElementaryTypeName","src":"2784:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2902,"mutability":"mutable","name":"data","nameLocation":"2816:4:13","nodeType":"VariableDeclaration","scope":2917,"src":"2803:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2901,"name":"bytes","nodeType":"ElementaryTypeName","src":"2803:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2783:38:13"},"returnParameters":{"id":2906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2905,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2917,"src":"2845:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2904,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2845:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2844:9:13"},"scope":2942,"src":"2743:191:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2928,"nodeType":"Block","src":"3216:216:13","statements":[{"AST":{"nodeType":"YulBlock","src":"3251:175:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3272:4:13","type":"","value":"0x00"},{"hexValue":"1900","kind":"string","nodeType":"YulLiteral","src":"3278:10:13","type":"","value":"\u0019\u0000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3265:6:13"},"nodeType":"YulFunctionCall","src":"3265:24:13"},"nodeType":"YulExpressionStatement","src":"3265:24:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3309:4:13","type":"","value":"0x02"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3319:2:13","type":"","value":"96"},{"name":"validator","nodeType":"YulIdentifier","src":"3323:9:13"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3315:3:13"},"nodeType":"YulFunctionCall","src":"3315:18:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3302:6:13"},"nodeType":"YulFunctionCall","src":"3302:32:13"},"nodeType":"YulExpressionStatement","src":"3302:32:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3354:4:13","type":"","value":"0x16"},{"name":"messageHash","nodeType":"YulIdentifier","src":"3360:11:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3347:6:13"},"nodeType":"YulFunctionCall","src":"3347:25:13"},"nodeType":"YulExpressionStatement","src":"3347:25:13"},{"nodeType":"YulAssignment","src":"3385:31:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3405:4:13","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"3411:4:13","type":"","value":"0x36"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3395:9:13"},"nodeType":"YulFunctionCall","src":"3395:21:13"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"3385:6:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2925,"isOffset":false,"isSlot":false,"src":"3385:6:13","valueSize":1},{"declaration":2922,"isOffset":false,"isSlot":false,"src":"3360:11:13","valueSize":1},{"declaration":2920,"isOffset":false,"isSlot":false,"src":"3323:9:13","valueSize":1}],"flags":["memory-safe"],"id":2927,"nodeType":"InlineAssembly","src":"3226:200:13"}]},"documentation":{"id":2918,"nodeType":"StructuredDocumentation","src":"2940:129:13","text":" @dev Variant of {toDataWithIntendedValidatorHash-address-bytes} optimized for cases where `data` is a bytes32."},"id":2929,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"3083:31:13","nodeType":"FunctionDefinition","parameters":{"id":2923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2920,"mutability":"mutable","name":"validator","nameLocation":"3132:9:13","nodeType":"VariableDeclaration","scope":2929,"src":"3124:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2919,"name":"address","nodeType":"ElementaryTypeName","src":"3124:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2922,"mutability":"mutable","name":"messageHash","nameLocation":"3159:11:13","nodeType":"VariableDeclaration","scope":2929,"src":"3151:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2921,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3151:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3114:62:13"},"returnParameters":{"id":2926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2925,"mutability":"mutable","name":"digest","nameLocation":"3208:6:13","nodeType":"VariableDeclaration","scope":2929,"src":"3200:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2924,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3200:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3199:16:13"},"scope":2942,"src":"3074:358:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2940,"nodeType":"Block","src":"3983:265:13","statements":[{"AST":{"nodeType":"YulBlock","src":"4018:224:13","statements":[{"nodeType":"YulVariableDeclaration","src":"4032:22:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4049:4:13","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4043:5:13"},"nodeType":"YulFunctionCall","src":"4043:11:13"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"4036:3:13","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4074:3:13"},{"hexValue":"1901","kind":"string","nodeType":"YulLiteral","src":"4079:10:13","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4067:6:13"},"nodeType":"YulFunctionCall","src":"4067:23:13"},"nodeType":"YulExpressionStatement","src":"4067:23:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4114:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"4119:4:13","type":"","value":"0x02"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4110:3:13"},"nodeType":"YulFunctionCall","src":"4110:14:13"},{"name":"domainSeparator","nodeType":"YulIdentifier","src":"4126:15:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4103:6:13"},"nodeType":"YulFunctionCall","src":"4103:39:13"},"nodeType":"YulExpressionStatement","src":"4103:39:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4166:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"4171:4:13","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4162:3:13"},"nodeType":"YulFunctionCall","src":"4162:14:13"},{"name":"structHash","nodeType":"YulIdentifier","src":"4178:10:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4155:6:13"},"nodeType":"YulFunctionCall","src":"4155:34:13"},"nodeType":"YulExpressionStatement","src":"4155:34:13"},{"nodeType":"YulAssignment","src":"4202:30:13","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4222:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"4227:4:13","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4212:9:13"},"nodeType":"YulFunctionCall","src":"4212:20:13"},"variableNames":[{"name":"digest","nodeType":"YulIdentifier","src":"4202:6:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2937,"isOffset":false,"isSlot":false,"src":"4202:6:13","valueSize":1},{"declaration":2932,"isOffset":false,"isSlot":false,"src":"4126:15:13","valueSize":1},{"declaration":2934,"isOffset":false,"isSlot":false,"src":"4178:10:13","valueSize":1}],"flags":["memory-safe"],"id":2939,"nodeType":"InlineAssembly","src":"3993:249:13"}]},"documentation":{"id":2930,"nodeType":"StructuredDocumentation","src":"3438:431:13","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":2941,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3883:15:13","nodeType":"FunctionDefinition","parameters":{"id":2935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2932,"mutability":"mutable","name":"domainSeparator","nameLocation":"3907:15:13","nodeType":"VariableDeclaration","scope":2941,"src":"3899:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2931,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3899:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2934,"mutability":"mutable","name":"structHash","nameLocation":"3932:10:13","nodeType":"VariableDeclaration","scope":2941,"src":"3924:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2933,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3924:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3898:45:13"},"returnParameters":{"id":2938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2937,"mutability":"mutable","name":"digest","nameLocation":"3975:6:13","nodeType":"VariableDeclaration","scope":2941,"src":"3967:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2936,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3967:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3966:16:13"},"scope":2942,"src":"3874:374:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2943,"src":"521:3729:13","usedErrors":[],"usedEvents":[]}],"src":"123:4128:13"},"id":13},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[2954]},"id":2955,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2944,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":2945,"nodeType":"StructuredDocumentation","src":"141:280:14","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":2954,"linearizedBaseContracts":[2954],"name":"IERC165","nameLocation":"432:7:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2946,"nodeType":"StructuredDocumentation","src":"446:340:14","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":2953,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:14","nodeType":"FunctionDefinition","parameters":{"id":2949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2948,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:14","nodeType":"VariableDeclaration","scope":2953,"src":"818:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2947,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:14"},"returnParameters":{"id":2952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2951,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2953,"src":"861:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2950,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:14"},"scope":2954,"src":"791:76:14","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2955,"src":"422:447:14","usedErrors":[],"usedEvents":[]}],"src":"115:755:14"},"id":14},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[4575],"Panic":[469],"SafeCast":[6340]},"id":4576,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2956,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:15"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":2958,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4576,"sourceUnit":470,"src":"129:35:15","symbolAliases":[{"foreign":{"id":2957,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"137:5:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":2960,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4576,"sourceUnit":6341,"src":"165:40:15","symbolAliases":[{"foreign":{"id":2959,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6340,"src":"173:8:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":2961,"nodeType":"StructuredDocumentation","src":"207:73:15","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4575,"linearizedBaseContracts":[4575],"name":"Math","nameLocation":"289:4:15","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":2966,"members":[{"id":2962,"name":"Floor","nameLocation":"324:5:15","nodeType":"EnumValue","src":"324:5:15"},{"id":2963,"name":"Ceil","nameLocation":"367:4:15","nodeType":"EnumValue","src":"367:4:15"},{"id":2964,"name":"Trunc","nameLocation":"409:5:15","nodeType":"EnumValue","src":"409:5:15"},{"id":2965,"name":"Expand","nameLocation":"439:6:15","nodeType":"EnumValue","src":"439:6:15"}],"name":"Rounding","nameLocation":"305:8:15","nodeType":"EnumDefinition","src":"300:169:15"},{"body":{"id":2979,"nodeType":"Block","src":"731:112:15","statements":[{"AST":{"nodeType":"YulBlock","src":"766:71:15","statements":[{"nodeType":"YulAssignment","src":"780:16:15","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"791:1:15"},{"name":"b","nodeType":"YulIdentifier","src":"794:1:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"787:3:15"},"nodeType":"YulFunctionCall","src":"787:9:15"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"780:3:15"}]},{"nodeType":"YulAssignment","src":"809:18:15","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"820:3:15"},{"name":"a","nodeType":"YulIdentifier","src":"825:1:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"817:2:15"},"nodeType":"YulFunctionCall","src":"817:10:15"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"809:4:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2969,"isOffset":false,"isSlot":false,"src":"791:1:15","valueSize":1},{"declaration":2969,"isOffset":false,"isSlot":false,"src":"825:1:15","valueSize":1},{"declaration":2971,"isOffset":false,"isSlot":false,"src":"794:1:15","valueSize":1},{"declaration":2974,"isOffset":false,"isSlot":false,"src":"809:4:15","valueSize":1},{"declaration":2976,"isOffset":false,"isSlot":false,"src":"780:3:15","valueSize":1},{"declaration":2976,"isOffset":false,"isSlot":false,"src":"820:3:15","valueSize":1}],"flags":["memory-safe"],"id":2978,"nodeType":"InlineAssembly","src":"741:96:15"}]},"documentation":{"id":2967,"nodeType":"StructuredDocumentation","src":"475:163:15","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":2980,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:15","nodeType":"FunctionDefinition","parameters":{"id":2972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2969,"mutability":"mutable","name":"a","nameLocation":"667:1:15","nodeType":"VariableDeclaration","scope":2980,"src":"659:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2968,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2971,"mutability":"mutable","name":"b","nameLocation":"678:1:15","nodeType":"VariableDeclaration","scope":2980,"src":"670:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2970,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:15"},"returnParameters":{"id":2977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2974,"mutability":"mutable","name":"high","nameLocation":"712:4:15","nodeType":"VariableDeclaration","scope":2980,"src":"704:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2973,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2976,"mutability":"mutable","name":"low","nameLocation":"726:3:15","nodeType":"VariableDeclaration","scope":2980,"src":"718:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2975,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:15"},"scope":4575,"src":"643:200:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2993,"nodeType":"Block","src":"1115:462:15","statements":[{"AST":{"nodeType":"YulBlock","src":"1437:134:15","statements":[{"nodeType":"YulVariableDeclaration","src":"1451:30:15","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1468:1:15"},{"name":"b","nodeType":"YulIdentifier","src":"1471:1:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1478:1:15","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1474:3:15"},"nodeType":"YulFunctionCall","src":"1474:6:15"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"1461:6:15"},"nodeType":"YulFunctionCall","src":"1461:20:15"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"1455:2:15","type":""}]},{"nodeType":"YulAssignment","src":"1494:16:15","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1505:1:15"},{"name":"b","nodeType":"YulIdentifier","src":"1508:1:15"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1501:3:15"},"nodeType":"YulFunctionCall","src":"1501:9:15"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"1494:3:15"}]},{"nodeType":"YulAssignment","src":"1523:38:15","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1539:2:15"},{"name":"low","nodeType":"YulIdentifier","src":"1543:3:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1535:3:15"},"nodeType":"YulFunctionCall","src":"1535:12:15"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1552:2:15"},{"name":"low","nodeType":"YulIdentifier","src":"1556:3:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1549:2:15"},"nodeType":"YulFunctionCall","src":"1549:11:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1531:3:15"},"nodeType":"YulFunctionCall","src":"1531:30:15"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"1523:4:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2983,"isOffset":false,"isSlot":false,"src":"1468:1:15","valueSize":1},{"declaration":2983,"isOffset":false,"isSlot":false,"src":"1505:1:15","valueSize":1},{"declaration":2985,"isOffset":false,"isSlot":false,"src":"1471:1:15","valueSize":1},{"declaration":2985,"isOffset":false,"isSlot":false,"src":"1508:1:15","valueSize":1},{"declaration":2988,"isOffset":false,"isSlot":false,"src":"1523:4:15","valueSize":1},{"declaration":2990,"isOffset":false,"isSlot":false,"src":"1494:3:15","valueSize":1},{"declaration":2990,"isOffset":false,"isSlot":false,"src":"1543:3:15","valueSize":1},{"declaration":2990,"isOffset":false,"isSlot":false,"src":"1556:3:15","valueSize":1}],"flags":["memory-safe"],"id":2992,"nodeType":"InlineAssembly","src":"1412:159:15"}]},"documentation":{"id":2981,"nodeType":"StructuredDocumentation","src":"849:173:15","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":2994,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:15","nodeType":"FunctionDefinition","parameters":{"id":2986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2983,"mutability":"mutable","name":"a","nameLocation":"1051:1:15","nodeType":"VariableDeclaration","scope":2994,"src":"1043:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2982,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2985,"mutability":"mutable","name":"b","nameLocation":"1062:1:15","nodeType":"VariableDeclaration","scope":2994,"src":"1054:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2984,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:15"},"returnParameters":{"id":2991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2988,"mutability":"mutable","name":"high","nameLocation":"1096:4:15","nodeType":"VariableDeclaration","scope":2994,"src":"1088:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2987,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2990,"mutability":"mutable","name":"low","nameLocation":"1110:3:15","nodeType":"VariableDeclaration","scope":2994,"src":"1102:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2989,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:15"},"scope":4575,"src":"1027:550:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3028,"nodeType":"Block","src":"1784:149:15","statements":[{"id":3027,"nodeType":"UncheckedBlock","src":"1794:133:15","statements":[{"assignments":[3007],"declarations":[{"constant":false,"id":3007,"mutability":"mutable","name":"c","nameLocation":"1826:1:15","nodeType":"VariableDeclaration","scope":3027,"src":"1818:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3006,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3011,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3008,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"1830:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3009,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2999,"src":"1834:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:15"},{"expression":{"id":3016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3012,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"1849:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3013,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"1859:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3014,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"1864:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3017,"nodeType":"ExpressionStatement","src":"1849:16:15"},{"expression":{"id":3025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3018,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"1879:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3019,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"1888:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3022,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"1908:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3020,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6340,"src":"1892:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6340_$","typeString":"type(library SafeCast)"}},"id":3021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6339,"src":"1892:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3026,"nodeType":"ExpressionStatement","src":"1879:37:15"}]}]},"documentation":{"id":2995,"nodeType":"StructuredDocumentation","src":"1583:105:15","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":3029,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:15","nodeType":"FunctionDefinition","parameters":{"id":3000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2997,"mutability":"mutable","name":"a","nameLocation":"1717:1:15","nodeType":"VariableDeclaration","scope":3029,"src":"1709:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2996,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2999,"mutability":"mutable","name":"b","nameLocation":"1728:1:15","nodeType":"VariableDeclaration","scope":3029,"src":"1720:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2998,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:15"},"returnParameters":{"id":3005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3002,"mutability":"mutable","name":"success","nameLocation":"1759:7:15","nodeType":"VariableDeclaration","scope":3029,"src":"1754:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3001,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3004,"mutability":"mutable","name":"result","nameLocation":"1776:6:15","nodeType":"VariableDeclaration","scope":3029,"src":"1768:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3003,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:15"},"scope":4575,"src":"1693:240:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3063,"nodeType":"Block","src":"2143:149:15","statements":[{"id":3062,"nodeType":"UncheckedBlock","src":"2153:133:15","statements":[{"assignments":[3042],"declarations":[{"constant":false,"id":3042,"mutability":"mutable","name":"c","nameLocation":"2185:1:15","nodeType":"VariableDeclaration","scope":3062,"src":"2177:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3041,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3046,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3043,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3032,"src":"2189:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3044,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"2193:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:15"},{"expression":{"id":3051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3047,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3037,"src":"2208:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3048,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"2218:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3049,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3032,"src":"2223:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3052,"nodeType":"ExpressionStatement","src":"2208:16:15"},{"expression":{"id":3060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3053,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"2238:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3054,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"2247:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3057,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3037,"src":"2267:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3055,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6340,"src":"2251:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6340_$","typeString":"type(library SafeCast)"}},"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6339,"src":"2251:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3061,"nodeType":"ExpressionStatement","src":"2238:37:15"}]}]},"documentation":{"id":3030,"nodeType":"StructuredDocumentation","src":"1939:108:15","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":3064,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:15","nodeType":"FunctionDefinition","parameters":{"id":3035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3032,"mutability":"mutable","name":"a","nameLocation":"2076:1:15","nodeType":"VariableDeclaration","scope":3064,"src":"2068:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3031,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3034,"mutability":"mutable","name":"b","nameLocation":"2087:1:15","nodeType":"VariableDeclaration","scope":3064,"src":"2079:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3033,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:15"},"returnParameters":{"id":3040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3037,"mutability":"mutable","name":"success","nameLocation":"2118:7:15","nodeType":"VariableDeclaration","scope":3064,"src":"2113:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3036,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3039,"mutability":"mutable","name":"result","nameLocation":"2135:6:15","nodeType":"VariableDeclaration","scope":3064,"src":"2127:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3038,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:15"},"scope":4575,"src":"2052:240:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3093,"nodeType":"Block","src":"2505:391:15","statements":[{"id":3092,"nodeType":"UncheckedBlock","src":"2515:375:15","statements":[{"assignments":[3077],"declarations":[{"constant":false,"id":3077,"mutability":"mutable","name":"c","nameLocation":"2547:1:15","nodeType":"VariableDeclaration","scope":3092,"src":"2539:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3076,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3081,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3078,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3067,"src":"2551:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3079,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3069,"src":"2555:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:15"},{"AST":{"nodeType":"YulBlock","src":"2595:188:15","statements":[{"nodeType":"YulAssignment","src":"2727:42:15","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nodeType":"YulIdentifier","src":"2748:1:15"},{"name":"a","nodeType":"YulIdentifier","src":"2751:1:15"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2744:3:15"},"nodeType":"YulFunctionCall","src":"2744:9:15"},{"name":"b","nodeType":"YulIdentifier","src":"2755:1:15"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2741:2:15"},"nodeType":"YulFunctionCall","src":"2741:16:15"},{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"2766:1:15"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2759:6:15"},"nodeType":"YulFunctionCall","src":"2759:9:15"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2738:2:15"},"nodeType":"YulFunctionCall","src":"2738:31:15"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"2727:7:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3067,"isOffset":false,"isSlot":false,"src":"2751:1:15","valueSize":1},{"declaration":3067,"isOffset":false,"isSlot":false,"src":"2766:1:15","valueSize":1},{"declaration":3069,"isOffset":false,"isSlot":false,"src":"2755:1:15","valueSize":1},{"declaration":3077,"isOffset":false,"isSlot":false,"src":"2748:1:15","valueSize":1},{"declaration":3072,"isOffset":false,"isSlot":false,"src":"2727:7:15","valueSize":1}],"flags":["memory-safe"],"id":3082,"nodeType":"InlineAssembly","src":"2570:213:15"},{"expression":{"id":3090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3083,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3074,"src":"2842:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3084,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"2851:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3087,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3072,"src":"2871:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3085,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6340,"src":"2855:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6340_$","typeString":"type(library SafeCast)"}},"id":3086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6339,"src":"2855:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3091,"nodeType":"ExpressionStatement","src":"2842:37:15"}]}]},"documentation":{"id":3065,"nodeType":"StructuredDocumentation","src":"2298:111:15","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":3094,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:15","nodeType":"FunctionDefinition","parameters":{"id":3070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3067,"mutability":"mutable","name":"a","nameLocation":"2438:1:15","nodeType":"VariableDeclaration","scope":3094,"src":"2430:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3066,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3069,"mutability":"mutable","name":"b","nameLocation":"2449:1:15","nodeType":"VariableDeclaration","scope":3094,"src":"2441:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3068,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:15"},"returnParameters":{"id":3075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3072,"mutability":"mutable","name":"success","nameLocation":"2480:7:15","nodeType":"VariableDeclaration","scope":3094,"src":"2475:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3071,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3074,"mutability":"mutable","name":"result","nameLocation":"2497:6:15","nodeType":"VariableDeclaration","scope":3094,"src":"2489:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3073,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:15"},"scope":4575,"src":"2414:482:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3114,"nodeType":"Block","src":"3111:231:15","statements":[{"id":3113,"nodeType":"UncheckedBlock","src":"3121:215:15","statements":[{"expression":{"id":3110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3106,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3102,"src":"3145:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3107,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3099,"src":"3155:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3111,"nodeType":"ExpressionStatement","src":"3145:15:15"},{"AST":{"nodeType":"YulBlock","src":"3199:127:15","statements":[{"nodeType":"YulAssignment","src":"3293:19:15","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3307:1:15"},{"name":"b","nodeType":"YulIdentifier","src":"3310:1:15"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3303:3:15"},"nodeType":"YulFunctionCall","src":"3303:9:15"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3293:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3097,"isOffset":false,"isSlot":false,"src":"3307:1:15","valueSize":1},{"declaration":3099,"isOffset":false,"isSlot":false,"src":"3310:1:15","valueSize":1},{"declaration":3104,"isOffset":false,"isSlot":false,"src":"3293:6:15","valueSize":1}],"flags":["memory-safe"],"id":3112,"nodeType":"InlineAssembly","src":"3174:152:15"}]}]},"documentation":{"id":3095,"nodeType":"StructuredDocumentation","src":"2902:113:15","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":3115,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:15","nodeType":"FunctionDefinition","parameters":{"id":3100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3097,"mutability":"mutable","name":"a","nameLocation":"3044:1:15","nodeType":"VariableDeclaration","scope":3115,"src":"3036:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3096,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3099,"mutability":"mutable","name":"b","nameLocation":"3055:1:15","nodeType":"VariableDeclaration","scope":3115,"src":"3047:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3098,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:15"},"returnParameters":{"id":3105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3102,"mutability":"mutable","name":"success","nameLocation":"3086:7:15","nodeType":"VariableDeclaration","scope":3115,"src":"3081:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3101,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3104,"mutability":"mutable","name":"result","nameLocation":"3103:6:15","nodeType":"VariableDeclaration","scope":3115,"src":"3095:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3103,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:15"},"scope":4575,"src":"3020:322:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3135,"nodeType":"Block","src":"3567:231:15","statements":[{"id":3134,"nodeType":"UncheckedBlock","src":"3577:215:15","statements":[{"expression":{"id":3131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3127,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3123,"src":"3601:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3128,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"3611:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3132,"nodeType":"ExpressionStatement","src":"3601:15:15"},{"AST":{"nodeType":"YulBlock","src":"3655:127:15","statements":[{"nodeType":"YulAssignment","src":"3749:19:15","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3763:1:15"},{"name":"b","nodeType":"YulIdentifier","src":"3766:1:15"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"3759:3:15"},"nodeType":"YulFunctionCall","src":"3759:9:15"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3749:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3118,"isOffset":false,"isSlot":false,"src":"3763:1:15","valueSize":1},{"declaration":3120,"isOffset":false,"isSlot":false,"src":"3766:1:15","valueSize":1},{"declaration":3125,"isOffset":false,"isSlot":false,"src":"3749:6:15","valueSize":1}],"flags":["memory-safe"],"id":3133,"nodeType":"InlineAssembly","src":"3630:152:15"}]}]},"documentation":{"id":3116,"nodeType":"StructuredDocumentation","src":"3348:123:15","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":3136,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:15","nodeType":"FunctionDefinition","parameters":{"id":3121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3118,"mutability":"mutable","name":"a","nameLocation":"3500:1:15","nodeType":"VariableDeclaration","scope":3136,"src":"3492:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3117,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3120,"mutability":"mutable","name":"b","nameLocation":"3511:1:15","nodeType":"VariableDeclaration","scope":3136,"src":"3503:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3119,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:15"},"returnParameters":{"id":3126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3123,"mutability":"mutable","name":"success","nameLocation":"3542:7:15","nodeType":"VariableDeclaration","scope":3136,"src":"3537:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3122,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3125,"mutability":"mutable","name":"result","nameLocation":"3559:6:15","nodeType":"VariableDeclaration","scope":3136,"src":"3551:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3124,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:15"},"scope":4575,"src":"3476:322:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3165,"nodeType":"Block","src":"3989:122:15","statements":[{"assignments":[3147,3149],"declarations":[{"constant":false,"id":3147,"mutability":"mutable","name":"success","nameLocation":"4005:7:15","nodeType":"VariableDeclaration","scope":3165,"src":"4000:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3146,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3149,"mutability":"mutable","name":"result","nameLocation":"4022:6:15","nodeType":"VariableDeclaration","scope":3165,"src":"4014:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3148,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3154,"initialValue":{"arguments":[{"id":3151,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"4039:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3152,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3141,"src":"4042:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3150,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"4032:6:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:15"},{"expression":{"arguments":[{"id":3156,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3147,"src":"4069:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3157,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3149,"src":"4078:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":3160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3159,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3158,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:15","memberName":"max","nodeType":"MemberAccess","src":"4086:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3155,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"4061:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3145,"id":3164,"nodeType":"Return","src":"4054:50:15"}]},"documentation":{"id":3137,"nodeType":"StructuredDocumentation","src":"3804:103:15","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":3166,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:15","nodeType":"FunctionDefinition","parameters":{"id":3142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3139,"mutability":"mutable","name":"a","nameLocation":"3943:1:15","nodeType":"VariableDeclaration","scope":3166,"src":"3935:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3138,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3141,"mutability":"mutable","name":"b","nameLocation":"3954:1:15","nodeType":"VariableDeclaration","scope":3166,"src":"3946:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3140,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:15"},"returnParameters":{"id":3145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3144,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3166,"src":"3980:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3143,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:15"},"scope":4575,"src":"3912:199:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3185,"nodeType":"Block","src":"4294:73:15","statements":[{"assignments":[null,3177],"declarations":[null,{"constant":false,"id":3177,"mutability":"mutable","name":"result","nameLocation":"4315:6:15","nodeType":"VariableDeclaration","scope":3185,"src":"4307:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3176,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3182,"initialValue":{"arguments":[{"id":3179,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"4332:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3180,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3171,"src":"4335:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3178,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3064,"src":"4325:6:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:15"},{"expression":{"id":3183,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3177,"src":"4354:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3175,"id":3184,"nodeType":"Return","src":"4347:13:15"}]},"documentation":{"id":3167,"nodeType":"StructuredDocumentation","src":"4117:95:15","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":3186,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:15","nodeType":"FunctionDefinition","parameters":{"id":3172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3169,"mutability":"mutable","name":"a","nameLocation":"4248:1:15","nodeType":"VariableDeclaration","scope":3186,"src":"4240:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3168,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3171,"mutability":"mutable","name":"b","nameLocation":"4259:1:15","nodeType":"VariableDeclaration","scope":3186,"src":"4251:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3170,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:15"},"returnParameters":{"id":3175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3174,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3186,"src":"4285:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3173,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:15"},"scope":4575,"src":"4217:150:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3215,"nodeType":"Block","src":"4564:122:15","statements":[{"assignments":[3197,3199],"declarations":[{"constant":false,"id":3197,"mutability":"mutable","name":"success","nameLocation":"4580:7:15","nodeType":"VariableDeclaration","scope":3215,"src":"4575:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3196,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3199,"mutability":"mutable","name":"result","nameLocation":"4597:6:15","nodeType":"VariableDeclaration","scope":3215,"src":"4589:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3198,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3204,"initialValue":{"arguments":[{"id":3201,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"4614:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3202,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"4617:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3200,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3094,"src":"4607:6:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:15"},{"expression":{"arguments":[{"id":3206,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"4644:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3207,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"4653:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":3210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3209,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3208,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:15","memberName":"max","nodeType":"MemberAccess","src":"4661:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3205,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"4636:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3195,"id":3214,"nodeType":"Return","src":"4629:50:15"}]},"documentation":{"id":3187,"nodeType":"StructuredDocumentation","src":"4373:109:15","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":3216,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:15","nodeType":"FunctionDefinition","parameters":{"id":3192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3189,"mutability":"mutable","name":"a","nameLocation":"4518:1:15","nodeType":"VariableDeclaration","scope":3216,"src":"4510:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3188,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3191,"mutability":"mutable","name":"b","nameLocation":"4529:1:15","nodeType":"VariableDeclaration","scope":3216,"src":"4521:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3190,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:15"},"returnParameters":{"id":3195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3194,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3216,"src":"4555:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3193,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:15"},"scope":4575,"src":"4487:199:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3242,"nodeType":"Block","src":"5158:207:15","statements":[{"id":3241,"nodeType":"UncheckedBlock","src":"5168:191:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3228,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3223,"src":"5306:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3229,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"5312:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3230,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3223,"src":"5316:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3232,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3235,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3219,"src":"5337:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3233,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6340,"src":"5321:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6340_$","typeString":"type(library SafeCast)"}},"id":3234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6339,"src":"5321:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3238,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3227,"id":3240,"nodeType":"Return","src":"5299:49:15"}]}]},"documentation":{"id":3217,"nodeType":"StructuredDocumentation","src":"4692:374:15","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":3243,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:15","nodeType":"FunctionDefinition","parameters":{"id":3224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3219,"mutability":"mutable","name":"condition","nameLocation":"5093:9:15","nodeType":"VariableDeclaration","scope":3243,"src":"5088:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3218,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3221,"mutability":"mutable","name":"a","nameLocation":"5112:1:15","nodeType":"VariableDeclaration","scope":3243,"src":"5104:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3220,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3223,"mutability":"mutable","name":"b","nameLocation":"5123:1:15","nodeType":"VariableDeclaration","scope":3243,"src":"5115:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3222,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:15"},"returnParameters":{"id":3227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3243,"src":"5149:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3225,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:15"},"scope":4575,"src":"5071:294:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3261,"nodeType":"Block","src":"5502:44:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3254,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3246,"src":"5527:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3255,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"5531:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3257,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3246,"src":"5534:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3258,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"5537:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3253,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"5519:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3252,"id":3260,"nodeType":"Return","src":"5512:27:15"}]},"documentation":{"id":3244,"nodeType":"StructuredDocumentation","src":"5371:59:15","text":" @dev Returns the largest of two numbers."},"id":3262,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:15","nodeType":"FunctionDefinition","parameters":{"id":3249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3246,"mutability":"mutable","name":"a","nameLocation":"5456:1:15","nodeType":"VariableDeclaration","scope":3262,"src":"5448:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3245,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3248,"mutability":"mutable","name":"b","nameLocation":"5467:1:15","nodeType":"VariableDeclaration","scope":3262,"src":"5459:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3247,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:15"},"returnParameters":{"id":3252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3251,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3262,"src":"5493:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3250,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:15"},"scope":4575,"src":"5435:111:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3280,"nodeType":"Block","src":"5684:44:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3273,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"5709:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3274,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3267,"src":"5713:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3276,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"5716:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3277,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3267,"src":"5719:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3272,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"5701:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3271,"id":3279,"nodeType":"Return","src":"5694:27:15"}]},"documentation":{"id":3263,"nodeType":"StructuredDocumentation","src":"5552:60:15","text":" @dev Returns the smallest of two numbers."},"id":3281,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:15","nodeType":"FunctionDefinition","parameters":{"id":3268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3265,"mutability":"mutable","name":"a","nameLocation":"5638:1:15","nodeType":"VariableDeclaration","scope":3281,"src":"5630:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3264,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3267,"mutability":"mutable","name":"b","nameLocation":"5649:1:15","nodeType":"VariableDeclaration","scope":3281,"src":"5641:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3266,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:15"},"returnParameters":{"id":3271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3270,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3281,"src":"5675:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3269,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:15"},"scope":4575,"src":"5617:111:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3303,"nodeType":"Block","src":"5912:82:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3291,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3284,"src":"5967:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3292,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"5971:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3294,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3295,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3284,"src":"5977:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3296,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"5981:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3298,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3290,"id":3302,"nodeType":"Return","src":"5959:28:15"}]},"documentation":{"id":3282,"nodeType":"StructuredDocumentation","src":"5734:102:15","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3304,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:15","nodeType":"FunctionDefinition","parameters":{"id":3287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3284,"mutability":"mutable","name":"a","nameLocation":"5866:1:15","nodeType":"VariableDeclaration","scope":3304,"src":"5858:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3283,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3286,"mutability":"mutable","name":"b","nameLocation":"5877:1:15","nodeType":"VariableDeclaration","scope":3304,"src":"5869:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3285,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:15"},"returnParameters":{"id":3290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3289,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3304,"src":"5903:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3288,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:15"},"scope":4575,"src":"5841:153:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3344,"nodeType":"Block","src":"6286:633:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3314,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3309,"src":"6300:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3325,"nodeType":"IfStatement","src":"6296:150:15","trueBody":{"id":3324,"nodeType":"Block","src":"6308:138:15","statements":[{"expression":{"arguments":[{"expression":{"id":3320,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"6412:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$469_$","typeString":"type(library Panic)"}},"id":3321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:15","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":436,"src":"6412:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3317,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"6400:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$469_$","typeString":"type(library Panic)"}},"id":3319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:15","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":468,"src":"6400:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3323,"nodeType":"ExpressionStatement","src":"6400:35:15"}]}},{"id":3343,"nodeType":"UncheckedBlock","src":"6829:84:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3328,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"6876:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3326,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6340,"src":"6860:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6340_$","typeString":"type(library SafeCast)"}},"id":3327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6339,"src":"6860:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3332,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"6887:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3335,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3336,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3309,"src":"6896:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3340,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3313,"id":3342,"nodeType":"Return","src":"6853:49:15"}]}]},"documentation":{"id":3305,"nodeType":"StructuredDocumentation","src":"6000:210:15","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":3345,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:15","nodeType":"FunctionDefinition","parameters":{"id":3310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3307,"mutability":"mutable","name":"a","nameLocation":"6240:1:15","nodeType":"VariableDeclaration","scope":3345,"src":"6232:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3306,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3309,"mutability":"mutable","name":"b","nameLocation":"6251:1:15","nodeType":"VariableDeclaration","scope":3345,"src":"6243:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3308,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:15"},"returnParameters":{"id":3313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3345,"src":"6277:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3311,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:15"},"scope":4575,"src":"6215:704:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3480,"nodeType":"Block","src":"7340:3585:15","statements":[{"id":3479,"nodeType":"UncheckedBlock","src":"7350:3569:15","statements":[{"assignments":[3358,3360],"declarations":[{"constant":false,"id":3358,"mutability":"mutable","name":"high","nameLocation":"7383:4:15","nodeType":"VariableDeclaration","scope":3479,"src":"7375:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3357,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3360,"mutability":"mutable","name":"low","nameLocation":"7397:3:15","nodeType":"VariableDeclaration","scope":3479,"src":"7389:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3359,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3365,"initialValue":{"arguments":[{"id":3362,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3348,"src":"7411:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3363,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"7414:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3361,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2994,"src":"7404:6:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":3364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3366,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"7498:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3374,"nodeType":"IfStatement","src":"7494:365:15","trueBody":{"id":3373,"nodeType":"Block","src":"7509:350:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3369,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3360,"src":"7827:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3370,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"7833:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3356,"id":3372,"nodeType":"Return","src":"7820:24:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3375,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"7969:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3376,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"7984:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3393,"nodeType":"IfStatement","src":"7965:142:15","trueBody":{"id":3392,"nodeType":"Block","src":"7990:117:15","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3382,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"8028:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3385,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"8046:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$469_$","typeString":"type(library Panic)"}},"id":3386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:15","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":436,"src":"8046:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3387,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"8070:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$469_$","typeString":"type(library Panic)"}},"id":3388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:15","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":432,"src":"8070:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3381,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"8020:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3378,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"8008:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$469_$","typeString":"type(library Panic)"}},"id":3380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:15","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":468,"src":"8008:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3391,"nodeType":"ExpressionStatement","src":"8008:84:15"}]}},{"assignments":[3395],"declarations":[{"constant":false,"id":3395,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:15","nodeType":"VariableDeclaration","scope":3479,"src":"8359:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3394,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3396,"nodeType":"VariableDeclarationStatement","src":"8359:17:15"},{"AST":{"nodeType":"YulBlock","src":"8415:283:15","statements":[{"nodeType":"YulAssignment","src":"8484:38:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8504:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"8507:1:15"},{"name":"denominator","nodeType":"YulIdentifier","src":"8510:11:15"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"8497:6:15"},"nodeType":"YulFunctionCall","src":"8497:25:15"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"8484:9:15"}]},{"nodeType":"YulAssignment","src":"8604:37:15","value":{"arguments":[{"name":"high","nodeType":"YulIdentifier","src":"8616:4:15"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"8625:9:15"},{"name":"low","nodeType":"YulIdentifier","src":"8636:3:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8622:2:15"},"nodeType":"YulFunctionCall","src":"8622:18:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8612:3:15"},"nodeType":"YulFunctionCall","src":"8612:29:15"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"8604:4:15"}]},{"nodeType":"YulAssignment","src":"8658:26:15","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"8669:3:15"},{"name":"remainder","nodeType":"YulIdentifier","src":"8674:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8665:3:15"},"nodeType":"YulFunctionCall","src":"8665:19:15"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"8658:3:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3352,"isOffset":false,"isSlot":false,"src":"8510:11:15","valueSize":1},{"declaration":3358,"isOffset":false,"isSlot":false,"src":"8604:4:15","valueSize":1},{"declaration":3358,"isOffset":false,"isSlot":false,"src":"8616:4:15","valueSize":1},{"declaration":3360,"isOffset":false,"isSlot":false,"src":"8636:3:15","valueSize":1},{"declaration":3360,"isOffset":false,"isSlot":false,"src":"8658:3:15","valueSize":1},{"declaration":3360,"isOffset":false,"isSlot":false,"src":"8669:3:15","valueSize":1},{"declaration":3395,"isOffset":false,"isSlot":false,"src":"8484:9:15","valueSize":1},{"declaration":3395,"isOffset":false,"isSlot":false,"src":"8625:9:15","valueSize":1},{"declaration":3395,"isOffset":false,"isSlot":false,"src":"8674:9:15","valueSize":1},{"declaration":3348,"isOffset":false,"isSlot":false,"src":"8504:1:15","valueSize":1},{"declaration":3350,"isOffset":false,"isSlot":false,"src":"8507:1:15","valueSize":1}],"flags":["memory-safe"],"id":3397,"nodeType":"InlineAssembly","src":"8390:308:15"},{"assignments":[3399],"declarations":[{"constant":false,"id":3399,"mutability":"mutable","name":"twos","nameLocation":"8910:4:15","nodeType":"VariableDeclaration","scope":3479,"src":"8902:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3398,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3406,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3400,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"8917:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":3401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3402,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"8936:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3404,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:15"},{"AST":{"nodeType":"YulBlock","src":"8987:359:15","statements":[{"nodeType":"YulAssignment","src":"9052:37:15","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"9071:11:15"},{"name":"twos","nodeType":"YulIdentifier","src":"9084:4:15"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9067:3:15"},"nodeType":"YulFunctionCall","src":"9067:22:15"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"9052:11:15"}]},{"nodeType":"YulAssignment","src":"9153:21:15","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"9164:3:15"},{"name":"twos","nodeType":"YulIdentifier","src":"9169:4:15"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9160:3:15"},"nodeType":"YulFunctionCall","src":"9160:14:15"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"9153:3:15"}]},{"nodeType":"YulAssignment","src":"9293:39:15","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9313:1:15","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"9316:4:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9309:3:15"},"nodeType":"YulFunctionCall","src":"9309:12:15"},{"name":"twos","nodeType":"YulIdentifier","src":"9323:4:15"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9305:3:15"},"nodeType":"YulFunctionCall","src":"9305:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"9330:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9301:3:15"},"nodeType":"YulFunctionCall","src":"9301:31:15"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"9293:4:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3352,"isOffset":false,"isSlot":false,"src":"9052:11:15","valueSize":1},{"declaration":3352,"isOffset":false,"isSlot":false,"src":"9071:11:15","valueSize":1},{"declaration":3360,"isOffset":false,"isSlot":false,"src":"9153:3:15","valueSize":1},{"declaration":3360,"isOffset":false,"isSlot":false,"src":"9164:3:15","valueSize":1},{"declaration":3399,"isOffset":false,"isSlot":false,"src":"9084:4:15","valueSize":1},{"declaration":3399,"isOffset":false,"isSlot":false,"src":"9169:4:15","valueSize":1},{"declaration":3399,"isOffset":false,"isSlot":false,"src":"9293:4:15","valueSize":1},{"declaration":3399,"isOffset":false,"isSlot":false,"src":"9316:4:15","valueSize":1},{"declaration":3399,"isOffset":false,"isSlot":false,"src":"9323:4:15","valueSize":1}],"flags":["memory-safe"],"id":3407,"nodeType":"InlineAssembly","src":"8962:384:15"},{"expression":{"id":3412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3408,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3360,"src":"9409:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3409,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"9416:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3410,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"9423:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3413,"nodeType":"ExpressionStatement","src":"9409:18:15"},{"assignments":[3415],"declarations":[{"constant":false,"id":3415,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:15","nodeType":"VariableDeclaration","scope":3479,"src":"9762:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3414,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3422,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:15","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3417,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"9785:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3419,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:15"},{"expression":{"id":3429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3423,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"10018:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3425,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"10033:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3426,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"10047:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3430,"nodeType":"ExpressionStatement","src":"10018:36:15"},{"expression":{"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3431,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"10088:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3433,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"10103:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3434,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"10117:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3438,"nodeType":"ExpressionStatement","src":"10088:36:15"},{"expression":{"id":3445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3439,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"10160:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3441,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"10175:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3442,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"10189:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3446,"nodeType":"ExpressionStatement","src":"10160:36:15"},{"expression":{"id":3453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3447,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"10231:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3449,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"10246:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3450,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"10260:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3454,"nodeType":"ExpressionStatement","src":"10231:36:15"},{"expression":{"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3455,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"10304:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3457,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"10319:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3458,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"10333:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3462,"nodeType":"ExpressionStatement","src":"10304:36:15"},{"expression":{"id":3469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3463,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"10378:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3465,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3352,"src":"10393:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3466,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"10407:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3470,"nodeType":"ExpressionStatement","src":"10378:36:15"},{"expression":{"id":3475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3471,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"10859:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3472,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3360,"src":"10868:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3473,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3415,"src":"10874:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3476,"nodeType":"ExpressionStatement","src":"10859:22:15"},{"expression":{"id":3477,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"10902:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3356,"id":3478,"nodeType":"Return","src":"10895:13:15"}]}]},"documentation":{"id":3346,"nodeType":"StructuredDocumentation","src":"6925:312:15","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":3481,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:15","nodeType":"FunctionDefinition","parameters":{"id":3353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3348,"mutability":"mutable","name":"x","nameLocation":"7266:1:15","nodeType":"VariableDeclaration","scope":3481,"src":"7258:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3347,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3350,"mutability":"mutable","name":"y","nameLocation":"7277:1:15","nodeType":"VariableDeclaration","scope":3481,"src":"7269:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3349,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3352,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:15","nodeType":"VariableDeclaration","scope":3481,"src":"7280:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3351,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:15"},"returnParameters":{"id":3356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3355,"mutability":"mutable","name":"result","nameLocation":"7332:6:15","nodeType":"VariableDeclaration","scope":3481,"src":"7324:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3354,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:15"},"scope":4575,"src":"7242:3683:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3517,"nodeType":"Block","src":"11164:128:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3497,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3484,"src":"11188:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3498,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"11191:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3499,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3488,"src":"11194:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3496,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3481,3518],"referencedDeclaration":3481,"src":"11181:6:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3504,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3491,"src":"11242:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2966","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2966","typeString":"enum Math.Rounding"}],"id":3503,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"11225:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2966_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3507,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3484,"src":"11262:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3508,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3486,"src":"11265:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3509,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3488,"src":"11268:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3506,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:15","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3501,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6340,"src":"11209:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6340_$","typeString":"type(library SafeCast)"}},"id":3502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6339,"src":"11209:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3495,"id":3516,"nodeType":"Return","src":"11174:111:15"}]},"documentation":{"id":3482,"nodeType":"StructuredDocumentation","src":"10931:118:15","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3518,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:15","nodeType":"FunctionDefinition","parameters":{"id":3492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3484,"mutability":"mutable","name":"x","nameLocation":"11078:1:15","nodeType":"VariableDeclaration","scope":3518,"src":"11070:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3483,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3486,"mutability":"mutable","name":"y","nameLocation":"11089:1:15","nodeType":"VariableDeclaration","scope":3518,"src":"11081:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3485,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3488,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:15","nodeType":"VariableDeclaration","scope":3518,"src":"11092:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3487,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3491,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:15","nodeType":"VariableDeclaration","scope":3518,"src":"11113:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2966","typeString":"enum Math.Rounding"},"typeName":{"id":3490,"nodeType":"UserDefinedTypeName","pathNode":{"id":3489,"name":"Rounding","nameLocations":["11113:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":2966,"src":"11113:8:15"},"referencedDeclaration":2966,"src":"11113:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2966","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:15"},"returnParameters":{"id":3495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3494,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3518,"src":"11155:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3493,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:15"},"scope":4575,"src":"11054:238:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3567,"nodeType":"Block","src":"11500:245:15","statements":[{"id":3566,"nodeType":"UncheckedBlock","src":"11510:229:15","statements":[{"assignments":[3531,3533],"declarations":[{"constant":false,"id":3531,"mutability":"mutable","name":"high","nameLocation":"11543:4:15","nodeType":"VariableDeclaration","scope":3566,"src":"11535:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3530,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3533,"mutability":"mutable","name":"low","nameLocation":"11557:3:15","nodeType":"VariableDeclaration","scope":3566,"src":"11549:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3532,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3538,"initialValue":{"arguments":[{"id":3535,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3521,"src":"11571:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3536,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3523,"src":"11574:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3534,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2994,"src":"11564:6:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":3537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3539,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"11594:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3541,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"11607:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3552,"nodeType":"IfStatement","src":"11590:86:15","trueBody":{"id":3551,"nodeType":"Block","src":"11610:66:15","statements":[{"expression":{"arguments":[{"expression":{"id":3547,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"11640:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$469_$","typeString":"type(library Panic)"}},"id":3548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:15","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":432,"src":"11640:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3544,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"11628:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$469_$","typeString":"type(library Panic)"}},"id":3546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:15","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":468,"src":"11628:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3550,"nodeType":"ExpressionStatement","src":"11628:33:15"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3553,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"11697:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":3556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":3554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:15","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3555,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"11712:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":3557,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3559,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3560,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3533,"src":"11719:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3561,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"11726:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3563,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3529,"id":3565,"nodeType":"Return","src":"11689:39:15"}]}]},"documentation":{"id":3519,"nodeType":"StructuredDocumentation","src":"11298:111:15","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":3568,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:15","nodeType":"FunctionDefinition","parameters":{"id":3526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3521,"mutability":"mutable","name":"x","nameLocation":"11438:1:15","nodeType":"VariableDeclaration","scope":3568,"src":"11430:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3520,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3523,"mutability":"mutable","name":"y","nameLocation":"11449:1:15","nodeType":"VariableDeclaration","scope":3568,"src":"11441:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3522,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3525,"mutability":"mutable","name":"n","nameLocation":"11458:1:15","nodeType":"VariableDeclaration","scope":3568,"src":"11452:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3524,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:15"},"returnParameters":{"id":3529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3528,"mutability":"mutable","name":"result","nameLocation":"11492:6:15","nodeType":"VariableDeclaration","scope":3568,"src":"11484:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3527,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:15"},"scope":4575,"src":"11414:331:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3606,"nodeType":"Block","src":"11963:113:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3584,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3571,"src":"11987:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3585,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3573,"src":"11990:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3586,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3575,"src":"11993:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3583,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[3568,3607],"referencedDeclaration":3568,"src":"11980:6:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":3587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3591,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3578,"src":"12031:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2966","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2966","typeString":"enum Math.Rounding"}],"id":3590,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"12014:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2966_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3594,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3571,"src":"12051:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3595,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3573,"src":"12054:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3597,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3575,"src":"12062:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3593,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:15","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3588,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6340,"src":"11998:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6340_$","typeString":"type(library SafeCast)"}},"id":3589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6339,"src":"11998:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3582,"id":3605,"nodeType":"Return","src":"11973:96:15"}]},"documentation":{"id":3569,"nodeType":"StructuredDocumentation","src":"11751:109:15","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":3607,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:15","nodeType":"FunctionDefinition","parameters":{"id":3579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3571,"mutability":"mutable","name":"x","nameLocation":"11889:1:15","nodeType":"VariableDeclaration","scope":3607,"src":"11881:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3570,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3573,"mutability":"mutable","name":"y","nameLocation":"11900:1:15","nodeType":"VariableDeclaration","scope":3607,"src":"11892:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3572,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3575,"mutability":"mutable","name":"n","nameLocation":"11909:1:15","nodeType":"VariableDeclaration","scope":3607,"src":"11903:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3574,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3578,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:15","nodeType":"VariableDeclaration","scope":3607,"src":"11912:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2966","typeString":"enum Math.Rounding"},"typeName":{"id":3577,"nodeType":"UserDefinedTypeName","pathNode":{"id":3576,"name":"Rounding","nameLocations":["11912:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":2966,"src":"11912:8:15"},"referencedDeclaration":2966,"src":"11912:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2966","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:15"},"returnParameters":{"id":3582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3581,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3607,"src":"11954:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3580,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:15"},"scope":4575,"src":"11865:211:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3703,"nodeType":"Block","src":"12710:1849:15","statements":[{"id":3702,"nodeType":"UncheckedBlock","src":"12720:1833:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3617,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3612,"src":"12748:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3622,"nodeType":"IfStatement","src":"12744:20:15","trueBody":{"expression":{"hexValue":"30","id":3620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3616,"id":3621,"nodeType":"Return","src":"12756:8:15"}},{"assignments":[3624],"declarations":[{"constant":false,"id":3624,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:15","nodeType":"VariableDeclaration","scope":3702,"src":"13235:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3623,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3628,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3625,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"13255:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3626,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3612,"src":"13259:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:15"},{"assignments":[3630],"declarations":[{"constant":false,"id":3630,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:15","nodeType":"VariableDeclaration","scope":3702,"src":"13274:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3629,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3632,"initialValue":{"id":3631,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3612,"src":"13288:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:15"},{"assignments":[3634],"declarations":[{"constant":false,"id":3634,"mutability":"mutable","name":"x","nameLocation":"13432:1:15","nodeType":"VariableDeclaration","scope":3702,"src":"13425:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3633,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3636,"initialValue":{"hexValue":"30","id":3635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:15"},{"assignments":[3638],"declarations":[{"constant":false,"id":3638,"mutability":"mutable","name":"y","nameLocation":"13458:1:15","nodeType":"VariableDeclaration","scope":3702,"src":"13451:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3637,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3640,"initialValue":{"hexValue":"31","id":3639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:15"},{"body":{"id":3677,"nodeType":"Block","src":"13501:882:15","statements":[{"assignments":[3645],"declarations":[{"constant":false,"id":3645,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:15","nodeType":"VariableDeclaration","scope":3677,"src":"13519:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3644,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3649,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3646,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"13538:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3647,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3624,"src":"13544:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:15"},{"expression":{"id":3660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3650,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"13573:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3651,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3624,"src":"13578:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3652,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3653,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3624,"src":"13678:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3654,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"13923:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3655,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3624,"src":"13929:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3656,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3645,"src":"13941:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3659,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:15","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3661,"nodeType":"ExpressionStatement","src":"13572:395:15"},{"expression":{"id":3675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3662,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"13987:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":3663,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3638,"src":"13990:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3664,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3665,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3638,"src":"14072:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3666,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"14326:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3667,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3638,"src":"14330:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3670,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3645,"src":"14341:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3668,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:15","typeDescriptions":{}}},"id":3671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3674,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:15","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3676,"nodeType":"ExpressionStatement","src":"13986:382:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3641,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3624,"src":"13485:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3678,"nodeType":"WhileStatement","src":"13478:905:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3679,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"14401:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":3680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3684,"nodeType":"IfStatement","src":"14397:22:15","trueBody":{"expression":{"hexValue":"30","id":3682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3616,"id":3683,"nodeType":"Return","src":"14411:8:15"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3686,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"14470:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3689,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3612,"src":"14477:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":3693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:15","subExpression":{"id":3692,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"14490:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3690,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:15","typeDescriptions":{}}},"id":3694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3698,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"14502:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3696,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:15","typeDescriptions":{}}},"id":3699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3685,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3243,"src":"14462:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3616,"id":3701,"nodeType":"Return","src":"14455:50:15"}]}]},"documentation":{"id":3608,"nodeType":"StructuredDocumentation","src":"12082:553:15","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":3704,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:15","nodeType":"FunctionDefinition","parameters":{"id":3613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3610,"mutability":"mutable","name":"a","nameLocation":"12664:1:15","nodeType":"VariableDeclaration","scope":3704,"src":"12656:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3609,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3612,"mutability":"mutable","name":"n","nameLocation":"12675:1:15","nodeType":"VariableDeclaration","scope":3704,"src":"12667:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3611,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:15"},"returnParameters":{"id":3616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3615,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3704,"src":"12701:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3614,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:15"},"scope":4575,"src":"12640:1919:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3724,"nodeType":"Block","src":"15159:82:15","statements":[{"id":3723,"nodeType":"UncheckedBlock","src":"15169:66:15","statements":[{"expression":{"arguments":[{"id":3716,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3707,"src":"15212:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3717,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"15215:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":3718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3720,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"15222:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3714,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4575,"src":"15200:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4575_$","typeString":"type(library Math)"}},"id":3715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:15","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":3761,"src":"15200:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":3721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3713,"id":3722,"nodeType":"Return","src":"15193:31:15"}]}]},"documentation":{"id":3705,"nodeType":"StructuredDocumentation","src":"14565:514:15","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":3725,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:15","nodeType":"FunctionDefinition","parameters":{"id":3710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3707,"mutability":"mutable","name":"a","nameLocation":"15113:1:15","nodeType":"VariableDeclaration","scope":3725,"src":"15105:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3706,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3709,"mutability":"mutable","name":"p","nameLocation":"15124:1:15","nodeType":"VariableDeclaration","scope":3725,"src":"15116:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3708,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:15"},"returnParameters":{"id":3713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3712,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3725,"src":"15150:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3711,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:15"},"scope":4575,"src":"15084:157:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3760,"nodeType":"Block","src":"16011:174:15","statements":[{"assignments":[3738,3740],"declarations":[{"constant":false,"id":3738,"mutability":"mutable","name":"success","nameLocation":"16027:7:15","nodeType":"VariableDeclaration","scope":3760,"src":"16022:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3737,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3740,"mutability":"mutable","name":"result","nameLocation":"16044:6:15","nodeType":"VariableDeclaration","scope":3760,"src":"16036:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3739,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3746,"initialValue":{"arguments":[{"id":3742,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3728,"src":"16064:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3743,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"16067:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3744,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3732,"src":"16070:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3741,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[3785,3867],"referencedDeclaration":3785,"src":"16054:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":3745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:15"},{"condition":{"id":3748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:15","subExpression":{"id":3747,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3738,"src":"16087:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3757,"nodeType":"IfStatement","src":"16082:74:15","trueBody":{"id":3756,"nodeType":"Block","src":"16096:60:15","statements":[{"expression":{"arguments":[{"expression":{"id":3752,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"16122:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$469_$","typeString":"type(library Panic)"}},"id":3753,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:15","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":436,"src":"16122:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3749,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"16110:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$469_$","typeString":"type(library Panic)"}},"id":3751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:15","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":468,"src":"16110:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3755,"nodeType":"ExpressionStatement","src":"16110:35:15"}]}},{"expression":{"id":3758,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3740,"src":"16172:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3736,"id":3759,"nodeType":"Return","src":"16165:13:15"}]},"documentation":{"id":3726,"nodeType":"StructuredDocumentation","src":"15247:678:15","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":3761,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:15","nodeType":"FunctionDefinition","parameters":{"id":3733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3728,"mutability":"mutable","name":"b","nameLocation":"15954:1:15","nodeType":"VariableDeclaration","scope":3761,"src":"15946:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3727,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3730,"mutability":"mutable","name":"e","nameLocation":"15965:1:15","nodeType":"VariableDeclaration","scope":3761,"src":"15957:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3729,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3732,"mutability":"mutable","name":"m","nameLocation":"15976:1:15","nodeType":"VariableDeclaration","scope":3761,"src":"15968:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3731,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:15"},"returnParameters":{"id":3736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3735,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3761,"src":"16002:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3734,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:15"},"scope":4575,"src":"15930:255:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3784,"nodeType":"Block","src":"17039:1493:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3775,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3768,"src":"17053:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3782,"nodeType":"IfStatement","src":"17049:29:15","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3780,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3774,"id":3781,"nodeType":"Return","src":"17061:17:15"}},{"AST":{"nodeType":"YulBlock","src":"17113:1413:15","statements":[{"nodeType":"YulVariableDeclaration","src":"17127:22:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17144:4:15","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17138:5:15"},"nodeType":"YulFunctionCall","src":"17138:11:15"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"17131:3:15","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18057:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"18062:4:15","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18050:6:15"},"nodeType":"YulFunctionCall","src":"18050:17:15"},"nodeType":"YulExpressionStatement","src":"18050:17:15"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18091:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"18096:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18087:3:15"},"nodeType":"YulFunctionCall","src":"18087:14:15"},{"kind":"number","nodeType":"YulLiteral","src":"18103:4:15","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18080:6:15"},"nodeType":"YulFunctionCall","src":"18080:28:15"},"nodeType":"YulExpressionStatement","src":"18080:28:15"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18132:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"18137:4:15","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18128:3:15"},"nodeType":"YulFunctionCall","src":"18128:14:15"},{"kind":"number","nodeType":"YulLiteral","src":"18144:4:15","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18121:6:15"},"nodeType":"YulFunctionCall","src":"18121:28:15"},"nodeType":"YulExpressionStatement","src":"18121:28:15"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18173:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"18178:4:15","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18169:3:15"},"nodeType":"YulFunctionCall","src":"18169:14:15"},{"name":"b","nodeType":"YulIdentifier","src":"18185:1:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18162:6:15"},"nodeType":"YulFunctionCall","src":"18162:25:15"},"nodeType":"YulExpressionStatement","src":"18162:25:15"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18211:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"18216:4:15","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18207:3:15"},"nodeType":"YulFunctionCall","src":"18207:14:15"},{"name":"e","nodeType":"YulIdentifier","src":"18223:1:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18200:6:15"},"nodeType":"YulFunctionCall","src":"18200:25:15"},"nodeType":"YulExpressionStatement","src":"18200:25:15"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18249:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"18254:4:15","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18245:3:15"},"nodeType":"YulFunctionCall","src":"18245:14:15"},{"name":"m","nodeType":"YulIdentifier","src":"18261:1:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18238:6:15"},"nodeType":"YulFunctionCall","src":"18238:25:15"},"nodeType":"YulExpressionStatement","src":"18238:25:15"},{"nodeType":"YulAssignment","src":"18425:57:15","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"18447:3:15"},"nodeType":"YulFunctionCall","src":"18447:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"18454:4:15","type":"","value":"0x05"},{"name":"ptr","nodeType":"YulIdentifier","src":"18460:3:15"},{"kind":"number","nodeType":"YulLiteral","src":"18465:4:15","type":"","value":"0xc0"},{"kind":"number","nodeType":"YulLiteral","src":"18471:4:15","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"18477:4:15","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"18436:10:15"},"nodeType":"YulFunctionCall","src":"18436:46:15"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"18425:7:15"}]},{"nodeType":"YulAssignment","src":"18495:21:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18511:4:15","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18505:5:15"},"nodeType":"YulFunctionCall","src":"18505:11:15"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"18495:6:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3764,"isOffset":false,"isSlot":false,"src":"18185:1:15","valueSize":1},{"declaration":3766,"isOffset":false,"isSlot":false,"src":"18223:1:15","valueSize":1},{"declaration":3768,"isOffset":false,"isSlot":false,"src":"18261:1:15","valueSize":1},{"declaration":3773,"isOffset":false,"isSlot":false,"src":"18495:6:15","valueSize":1},{"declaration":3771,"isOffset":false,"isSlot":false,"src":"18425:7:15","valueSize":1}],"flags":["memory-safe"],"id":3783,"nodeType":"InlineAssembly","src":"17088:1438:15"}]},"documentation":{"id":3762,"nodeType":"StructuredDocumentation","src":"16191:738:15","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":3785,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:15","nodeType":"FunctionDefinition","parameters":{"id":3769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3764,"mutability":"mutable","name":"b","nameLocation":"16961:1:15","nodeType":"VariableDeclaration","scope":3785,"src":"16953:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3763,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3766,"mutability":"mutable","name":"e","nameLocation":"16972:1:15","nodeType":"VariableDeclaration","scope":3785,"src":"16964:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3765,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3768,"mutability":"mutable","name":"m","nameLocation":"16983:1:15","nodeType":"VariableDeclaration","scope":3785,"src":"16975:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3767,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:15"},"returnParameters":{"id":3774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3771,"mutability":"mutable","name":"success","nameLocation":"17014:7:15","nodeType":"VariableDeclaration","scope":3785,"src":"17009:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3770,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3773,"mutability":"mutable","name":"result","nameLocation":"17031:6:15","nodeType":"VariableDeclaration","scope":3785,"src":"17023:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3772,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:15"},"scope":4575,"src":"16934:1598:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3820,"nodeType":"Block","src":"18729:179:15","statements":[{"assignments":[3798,3800],"declarations":[{"constant":false,"id":3798,"mutability":"mutable","name":"success","nameLocation":"18745:7:15","nodeType":"VariableDeclaration","scope":3820,"src":"18740:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3797,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3800,"mutability":"mutable","name":"result","nameLocation":"18767:6:15","nodeType":"VariableDeclaration","scope":3820,"src":"18754:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3799,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3806,"initialValue":{"arguments":[{"id":3802,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3788,"src":"18787:1:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3803,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3790,"src":"18790:1:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3804,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3792,"src":"18793:1:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3801,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[3785,3867],"referencedDeclaration":3867,"src":"18777:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":3805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:15"},{"condition":{"id":3808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:15","subExpression":{"id":3807,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3798,"src":"18810:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3817,"nodeType":"IfStatement","src":"18805:74:15","trueBody":{"id":3816,"nodeType":"Block","src":"18819:60:15","statements":[{"expression":{"arguments":[{"expression":{"id":3812,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"18845:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$469_$","typeString":"type(library Panic)"}},"id":3813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:15","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":436,"src":"18845:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3809,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"18833:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$469_$","typeString":"type(library Panic)"}},"id":3811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:15","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":468,"src":"18833:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3815,"nodeType":"ExpressionStatement","src":"18833:35:15"}]}},{"expression":{"id":3818,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"18895:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3796,"id":3819,"nodeType":"Return","src":"18888:13:15"}]},"documentation":{"id":3786,"nodeType":"StructuredDocumentation","src":"18538:85:15","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":3821,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:15","nodeType":"FunctionDefinition","parameters":{"id":3793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3788,"mutability":"mutable","name":"b","nameLocation":"18657:1:15","nodeType":"VariableDeclaration","scope":3821,"src":"18644:14:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3787,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3790,"mutability":"mutable","name":"e","nameLocation":"18673:1:15","nodeType":"VariableDeclaration","scope":3821,"src":"18660:14:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3789,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3792,"mutability":"mutable","name":"m","nameLocation":"18689:1:15","nodeType":"VariableDeclaration","scope":3821,"src":"18676:14:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3791,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:15"},"returnParameters":{"id":3796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3795,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3821,"src":"18715:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3794,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:15"},"scope":4575,"src":"18628:280:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3866,"nodeType":"Block","src":"19162:771:15","statements":[{"condition":{"arguments":[{"id":3836,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"19187:1:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3835,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"19176:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":3837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3845,"nodeType":"IfStatement","src":"19172:47:15","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3839,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":3843,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":3834,"id":3844,"nodeType":"Return","src":"19191:28:15"}},{"assignments":[3847],"declarations":[{"constant":false,"id":3847,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:15","nodeType":"VariableDeclaration","scope":3866,"src":"19230:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3846,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3850,"initialValue":{"expression":{"id":3848,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"19245:1:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:15","memberName":"length","nodeType":"MemberAccess","src":"19245:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:15"},{"expression":{"id":3863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3851,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3833,"src":"19335:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3854,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3824,"src":"19361:1:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:15","memberName":"length","nodeType":"MemberAccess","src":"19361:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3856,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3826,"src":"19371:1:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:15","memberName":"length","nodeType":"MemberAccess","src":"19371:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3858,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3847,"src":"19381:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3859,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3824,"src":"19387:1:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3860,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3826,"src":"19390:1:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3861,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"19393:1:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3852,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:15","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3864,"nodeType":"ExpressionStatement","src":"19335:60:15"},{"AST":{"nodeType":"YulBlock","src":"19431:496:15","statements":[{"nodeType":"YulVariableDeclaration","src":"19445:32:15","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19464:6:15"},{"kind":"number","nodeType":"YulLiteral","src":"19472:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19460:3:15"},"nodeType":"YulFunctionCall","src":"19460:17:15"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"19449:7:15","type":""}]},{"nodeType":"YulAssignment","src":"19567:73:15","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"19589:3:15"},"nodeType":"YulFunctionCall","src":"19589:5:15"},{"kind":"number","nodeType":"YulLiteral","src":"19596:4:15","type":"","value":"0x05"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19602:7:15"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19617:6:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19611:5:15"},"nodeType":"YulFunctionCall","src":"19611:13:15"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19626:7:15"},{"name":"mLen","nodeType":"YulIdentifier","src":"19635:4:15"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"19578:10:15"},"nodeType":"YulFunctionCall","src":"19578:62:15"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"19567:7:15"}]},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19796:6:15"},{"name":"mLen","nodeType":"YulIdentifier","src":"19804:4:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19789:6:15"},"nodeType":"YulFunctionCall","src":"19789:20:15"},"nodeType":"YulExpressionStatement","src":"19789:20:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19892:4:15","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"19902:7:15"},{"name":"mLen","nodeType":"YulIdentifier","src":"19911:4:15"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19898:3:15"},"nodeType":"YulFunctionCall","src":"19898:18:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19885:6:15"},"nodeType":"YulFunctionCall","src":"19885:32:15"},"nodeType":"YulExpressionStatement","src":"19885:32:15"}]},"evmVersion":"paris","externalReferences":[{"declaration":3847,"isOffset":false,"isSlot":false,"src":"19635:4:15","valueSize":1},{"declaration":3847,"isOffset":false,"isSlot":false,"src":"19804:4:15","valueSize":1},{"declaration":3847,"isOffset":false,"isSlot":false,"src":"19911:4:15","valueSize":1},{"declaration":3833,"isOffset":false,"isSlot":false,"src":"19464:6:15","valueSize":1},{"declaration":3833,"isOffset":false,"isSlot":false,"src":"19617:6:15","valueSize":1},{"declaration":3833,"isOffset":false,"isSlot":false,"src":"19796:6:15","valueSize":1},{"declaration":3831,"isOffset":false,"isSlot":false,"src":"19567:7:15","valueSize":1}],"flags":["memory-safe"],"id":3865,"nodeType":"InlineAssembly","src":"19406:521:15"}]},"documentation":{"id":3822,"nodeType":"StructuredDocumentation","src":"18914:88:15","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":3867,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:15","nodeType":"FunctionDefinition","parameters":{"id":3829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3824,"mutability":"mutable","name":"b","nameLocation":"19048:1:15","nodeType":"VariableDeclaration","scope":3867,"src":"19035:14:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3823,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3826,"mutability":"mutable","name":"e","nameLocation":"19072:1:15","nodeType":"VariableDeclaration","scope":3867,"src":"19059:14:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3825,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3828,"mutability":"mutable","name":"m","nameLocation":"19096:1:15","nodeType":"VariableDeclaration","scope":3867,"src":"19083:14:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3827,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:15"},"returnParameters":{"id":3834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3831,"mutability":"mutable","name":"success","nameLocation":"19132:7:15","nodeType":"VariableDeclaration","scope":3867,"src":"19127:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3830,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3833,"mutability":"mutable","name":"result","nameLocation":"19154:6:15","nodeType":"VariableDeclaration","scope":3867,"src":"19141:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3832,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:15"},"scope":4575,"src":"19007:926:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3899,"nodeType":"Block","src":"20088:176:15","statements":[{"body":{"id":3895,"nodeType":"Block","src":"20145:92:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3886,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3870,"src":"20163:9:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3888,"indexExpression":{"id":3887,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"20173:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3894,"nodeType":"IfStatement","src":"20159:68:15","trueBody":{"id":3893,"nodeType":"Block","src":"20182:45:15","statements":[{"expression":{"hexValue":"66616c7365","id":3891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3874,"id":3892,"nodeType":"Return","src":"20200:12:15"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3879,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"20118:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3880,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3870,"src":"20122:9:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:15","memberName":"length","nodeType":"MemberAccess","src":"20122:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3896,"initializationExpression":{"assignments":[3876],"declarations":[{"constant":false,"id":3876,"mutability":"mutable","name":"i","nameLocation":"20111:1:15","nodeType":"VariableDeclaration","scope":3896,"src":"20103:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3875,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3878,"initialValue":{"hexValue":"30","id":3877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:15"},"loopExpression":{"expression":{"id":3884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:15","subExpression":{"id":3883,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"20142:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3885,"nodeType":"ExpressionStatement","src":"20140:3:15"},"nodeType":"ForStatement","src":"20098:139:15"},{"expression":{"hexValue":"74727565","id":3897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3874,"id":3898,"nodeType":"Return","src":"20246:11:15"}]},"documentation":{"id":3868,"nodeType":"StructuredDocumentation","src":"19939:72:15","text":" @dev Returns whether the provided byte array is zero."},"id":3900,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:15","nodeType":"FunctionDefinition","parameters":{"id":3871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3870,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:15","nodeType":"VariableDeclaration","scope":3900,"src":"20036:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3869,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:15"},"returnParameters":{"id":3874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3873,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3900,"src":"20082:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3872,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:15"},"scope":4575,"src":"20016:248:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4118,"nodeType":"Block","src":"20624:5124:15","statements":[{"id":4117,"nodeType":"UncheckedBlock","src":"20634:5108:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3908,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3903,"src":"20728:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":3909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3914,"nodeType":"IfStatement","src":"20724:53:15","trueBody":{"id":3913,"nodeType":"Block","src":"20736:41:15","statements":[{"expression":{"id":3911,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3903,"src":"20761:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3907,"id":3912,"nodeType":"Return","src":"20754:8:15"}]}},{"assignments":[3916],"declarations":[{"constant":false,"id":3916,"mutability":"mutable","name":"aa","nameLocation":"21712:2:15","nodeType":"VariableDeclaration","scope":4117,"src":"21704:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3915,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3918,"initialValue":{"id":3917,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3903,"src":"21717:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:15"},{"assignments":[3920],"declarations":[{"constant":false,"id":3920,"mutability":"mutable","name":"xn","nameLocation":"21740:2:15","nodeType":"VariableDeclaration","scope":4117,"src":"21732:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3919,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3922,"initialValue":{"hexValue":"31","id":3921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3923,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"21765:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":3926,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":3925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:15","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:15","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":3927,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:15","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3938,"nodeType":"IfStatement","src":"21761:92:15","trueBody":{"id":3937,"nodeType":"Block","src":"21783:70:15","statements":[{"expression":{"id":3931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3929,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"21801:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:15","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3932,"nodeType":"ExpressionStatement","src":"21801:10:15"},{"expression":{"id":3935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3933,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"21829:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":3934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3936,"nodeType":"ExpressionStatement","src":"21829:9:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3939,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"21870:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":3942,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":3941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:15","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":3943,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:15","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3954,"nodeType":"IfStatement","src":"21866:90:15","trueBody":{"id":3953,"nodeType":"Block","src":"21887:69:15","statements":[{"expression":{"id":3947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3945,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"21905:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3948,"nodeType":"ExpressionStatement","src":"21905:9:15"},{"expression":{"id":3951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3949,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"21932:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":3950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3952,"nodeType":"ExpressionStatement","src":"21932:9:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3955,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"21973:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":3958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":3957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:15","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":3959,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:15","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3970,"nodeType":"IfStatement","src":"21969:90:15","trueBody":{"id":3969,"nodeType":"Block","src":"21990:69:15","statements":[{"expression":{"id":3963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3961,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"22008:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3964,"nodeType":"ExpressionStatement","src":"22008:9:15"},{"expression":{"id":3967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3965,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"22035:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":3966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3968,"nodeType":"ExpressionStatement","src":"22035:9:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3971,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"22076:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":3974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":3973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:15","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":3975,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:15","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3986,"nodeType":"IfStatement","src":"22072:89:15","trueBody":{"id":3985,"nodeType":"Block","src":"22093:68:15","statements":[{"expression":{"id":3979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3977,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"22111:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3980,"nodeType":"ExpressionStatement","src":"22111:9:15"},{"expression":{"id":3983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3981,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"22138:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":3982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3984,"nodeType":"ExpressionStatement","src":"22138:8:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3987,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"22178:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":3990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":3989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:15","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":3991,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:15","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4002,"nodeType":"IfStatement","src":"22174:87:15","trueBody":{"id":4001,"nodeType":"Block","src":"22194:67:15","statements":[{"expression":{"id":3995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3993,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"22212:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3996,"nodeType":"ExpressionStatement","src":"22212:8:15"},{"expression":{"id":3999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3997,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"22238:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":3998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4000,"nodeType":"ExpressionStatement","src":"22238:8:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4003,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"22278:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4007,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4018,"nodeType":"IfStatement","src":"22274:87:15","trueBody":{"id":4017,"nodeType":"Block","src":"22294:67:15","statements":[{"expression":{"id":4011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4009,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"22312:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4012,"nodeType":"ExpressionStatement","src":"22312:8:15"},{"expression":{"id":4015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4013,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"22338:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":4014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4016,"nodeType":"ExpressionStatement","src":"22338:8:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4019,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3916,"src":"22378:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4023,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4030,"nodeType":"IfStatement","src":"22374:61:15","trueBody":{"id":4029,"nodeType":"Block","src":"22394:41:15","statements":[{"expression":{"id":4027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4025,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"22412:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":4026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4028,"nodeType":"ExpressionStatement","src":"22412:8:15"}]}},{"expression":{"id":4038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4031,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"22855:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:15","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4033,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"22865:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4035,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4039,"nodeType":"ExpressionStatement","src":"22855:18:15"},{"expression":{"id":4049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4040,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"24760:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4041,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"24766:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4042,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3903,"src":"24771:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4043,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"24775:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4046,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4050,"nodeType":"ExpressionStatement","src":"24760:23:15"},{"expression":{"id":4060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4051,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"24869:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4052,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"24875:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4053,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3903,"src":"24880:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4054,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"24884:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4057,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4061,"nodeType":"ExpressionStatement","src":"24869:23:15"},{"expression":{"id":4071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4062,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"24980:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4063,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"24986:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4064,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3903,"src":"24991:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4065,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"24995:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4068,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4072,"nodeType":"ExpressionStatement","src":"24980:23:15"},{"expression":{"id":4082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4073,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"25089:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4074,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"25095:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4075,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3903,"src":"25100:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4076,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"25104:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4079,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4083,"nodeType":"ExpressionStatement","src":"25089:23:15"},{"expression":{"id":4093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4084,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"25199:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4085,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"25205:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4086,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3903,"src":"25210:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4087,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"25214:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4090,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4094,"nodeType":"ExpressionStatement","src":"25199:23:15"},{"expression":{"id":4104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4095,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"25309:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4096,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"25315:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4097,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3903,"src":"25320:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4098,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"25324:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4101,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4105,"nodeType":"ExpressionStatement","src":"25309:23:15"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4106,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"25698:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4109,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"25719:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4110,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3903,"src":"25724:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4111,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"25728:2:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4107,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6340,"src":"25703:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6340_$","typeString":"type(library SafeCast)"}},"id":4108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6339,"src":"25703:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3907,"id":4116,"nodeType":"Return","src":"25691:40:15"}]}]},"documentation":{"id":3901,"nodeType":"StructuredDocumentation","src":"20270:292:15","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":4119,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:15","nodeType":"FunctionDefinition","parameters":{"id":3904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3903,"mutability":"mutable","name":"a","nameLocation":"20589:1:15","nodeType":"VariableDeclaration","scope":4119,"src":"20581:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3902,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:15"},"returnParameters":{"id":3907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3906,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4119,"src":"20615:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3905,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:15"},"scope":4575,"src":"20567:5181:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4152,"nodeType":"Block","src":"25921:171:15","statements":[{"id":4151,"nodeType":"UncheckedBlock","src":"25931:155:15","statements":[{"assignments":[4131],"declarations":[{"constant":false,"id":4131,"mutability":"mutable","name":"result","nameLocation":"25963:6:15","nodeType":"VariableDeclaration","scope":4151,"src":"25955:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4130,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4135,"initialValue":{"arguments":[{"id":4133,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4122,"src":"25977:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4132,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4119,4153],"referencedDeclaration":4119,"src":"25972:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:15"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4136,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"26000:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4140,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4125,"src":"26042:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2966","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2966","typeString":"enum Math.Rounding"}],"id":4139,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"26025:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2966_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4142,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"26055:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4143,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4131,"src":"26064:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4145,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4122,"src":"26073:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4137,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6340,"src":"26009:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6340_$","typeString":"type(library SafeCast)"}},"id":4138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6339,"src":"26009:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4129,"id":4150,"nodeType":"Return","src":"25993:82:15"}]}]},"documentation":{"id":4120,"nodeType":"StructuredDocumentation","src":"25754:86:15","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":4153,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:15","nodeType":"FunctionDefinition","parameters":{"id":4126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4122,"mutability":"mutable","name":"a","nameLocation":"25867:1:15","nodeType":"VariableDeclaration","scope":4153,"src":"25859:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4121,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4125,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:15","nodeType":"VariableDeclaration","scope":4153,"src":"25870:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2966","typeString":"enum Math.Rounding"},"typeName":{"id":4124,"nodeType":"UserDefinedTypeName","pathNode":{"id":4123,"name":"Rounding","nameLocations":["25870:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":2966,"src":"25870:8:15"},"referencedDeclaration":2966,"src":"25870:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2966","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:15"},"returnParameters":{"id":4129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4128,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4153,"src":"25912:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4127,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:15"},"scope":4575,"src":"25845:247:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4243,"nodeType":"Block","src":"26281:2334:15","statements":[{"expression":{"id":4170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4161,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"26363:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4164,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4156,"src":"26383:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":4165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:15","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4162,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6340,"src":"26367:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6340_$","typeString":"type(library SafeCast)"}},"id":4163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6339,"src":"26367:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":4168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:15","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4171,"nodeType":"ExpressionStatement","src":"26363:64:15"},{"expression":{"id":4184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4172,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"26503:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4175,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4156,"src":"26525:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4176,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"26530:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4178,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":4179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:15","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4173,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6340,"src":"26508:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6340_$","typeString":"type(library SafeCast)"}},"id":4174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6339,"src":"26508:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":4182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:15","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4185,"nodeType":"ExpressionStatement","src":"26503:56:15"},{"expression":{"id":4198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4186,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"26634:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4189,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4156,"src":"26656:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4190,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"26661:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4192,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":4193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:15","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4187,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6340,"src":"26639:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6340_$","typeString":"type(library SafeCast)"}},"id":4188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6339,"src":"26639:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":4196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:15","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4199,"nodeType":"ExpressionStatement","src":"26634:48:15"},{"expression":{"id":4212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4200,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"26757:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4203,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4156,"src":"26779:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4204,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"26784:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4206,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":4207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:15","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4201,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6340,"src":"26762:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6340_$","typeString":"type(library SafeCast)"}},"id":4202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6339,"src":"26762:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4213,"nodeType":"ExpressionStatement","src":"26757:44:15"},{"expression":{"id":4226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4214,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"26874:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4217,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4156,"src":"26896:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4218,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"26901:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4220,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":4221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:15","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4215,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6340,"src":"26879:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6340_$","typeString":"type(library SafeCast)"}},"id":4216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6339,"src":"26879:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:15","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4227,"nodeType":"ExpressionStatement","src":"26874:42:15"},{"expression":{"id":4240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4228,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"26988:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4231,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4156,"src":"27010:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4232,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4159,"src":"27015:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4234,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":4235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:15","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4229,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6340,"src":"26993:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6340_$","typeString":"type(library SafeCast)"}},"id":4230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6339,"src":"26993:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4241,"nodeType":"ExpressionStatement","src":"26988:41:15"},{"AST":{"nodeType":"YulBlock","src":"28490:119:15","statements":[{"nodeType":"YulAssignment","src":"28504:95:15","value":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28512:1:15"},{"arguments":[{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28524:1:15"},{"name":"x","nodeType":"YulIdentifier","src":"28527:1:15"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"28520:3:15"},"nodeType":"YulFunctionCall","src":"28520:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"28531:66:15","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"28515:4:15"},"nodeType":"YulFunctionCall","src":"28515:83:15"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"28509:2:15"},"nodeType":"YulFunctionCall","src":"28509:90:15"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"28504:1:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4159,"isOffset":false,"isSlot":false,"src":"28504:1:15","valueSize":1},{"declaration":4159,"isOffset":false,"isSlot":false,"src":"28512:1:15","valueSize":1},{"declaration":4159,"isOffset":false,"isSlot":false,"src":"28524:1:15","valueSize":1},{"declaration":4156,"isOffset":false,"isSlot":false,"src":"28527:1:15","valueSize":1}],"flags":["memory-safe"],"id":4242,"nodeType":"InlineAssembly","src":"28465:144:15"}]},"documentation":{"id":4154,"nodeType":"StructuredDocumentation","src":"26098:119:15","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4244,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:15","nodeType":"FunctionDefinition","parameters":{"id":4157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4156,"mutability":"mutable","name":"x","nameLocation":"26244:1:15","nodeType":"VariableDeclaration","scope":4244,"src":"26236:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4155,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:15"},"returnParameters":{"id":4160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4159,"mutability":"mutable","name":"r","nameLocation":"26278:1:15","nodeType":"VariableDeclaration","scope":4244,"src":"26270:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4158,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:15"},"scope":4575,"src":"26222:2393:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4277,"nodeType":"Block","src":"28848:175:15","statements":[{"id":4276,"nodeType":"UncheckedBlock","src":"28858:159:15","statements":[{"assignments":[4256],"declarations":[{"constant":false,"id":4256,"mutability":"mutable","name":"result","nameLocation":"28890:6:15","nodeType":"VariableDeclaration","scope":4276,"src":"28882:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4255,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4260,"initialValue":{"arguments":[{"id":4258,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4247,"src":"28904:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4257,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4244,4278],"referencedDeclaration":4244,"src":"28899:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:15"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4261,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"28931:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4265,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4250,"src":"28973:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2966","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2966","typeString":"enum Math.Rounding"}],"id":4264,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"28956:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2966_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4268,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"28991:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4270,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4247,"src":"29000:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4262,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6340,"src":"28940:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6340_$","typeString":"type(library SafeCast)"}},"id":4263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6339,"src":"28940:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4254,"id":4275,"nodeType":"Return","src":"28924:82:15"}]}]},"documentation":{"id":4245,"nodeType":"StructuredDocumentation","src":"28621:142:15","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4278,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:15","nodeType":"FunctionDefinition","parameters":{"id":4251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4247,"mutability":"mutable","name":"value","nameLocation":"28790:5:15","nodeType":"VariableDeclaration","scope":4278,"src":"28782:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4246,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4250,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:15","nodeType":"VariableDeclaration","scope":4278,"src":"28797:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2966","typeString":"enum Math.Rounding"},"typeName":{"id":4249,"nodeType":"UserDefinedTypeName","pathNode":{"id":4248,"name":"Rounding","nameLocations":["28797:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":2966,"src":"28797:8:15"},"referencedDeclaration":2966,"src":"28797:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2966","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:15"},"returnParameters":{"id":4254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4253,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4278,"src":"28839:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4252,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:15"},"scope":4575,"src":"28768:255:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4406,"nodeType":"Block","src":"29216:854:15","statements":[{"assignments":[4287],"declarations":[{"constant":false,"id":4287,"mutability":"mutable","name":"result","nameLocation":"29234:6:15","nodeType":"VariableDeclaration","scope":4406,"src":"29226:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4286,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4289,"initialValue":{"hexValue":"30","id":4288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:15"},{"id":4403,"nodeType":"UncheckedBlock","src":"29254:787:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4290,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4281,"src":"29282:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:15","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4306,"nodeType":"IfStatement","src":"29278:103:15","trueBody":{"id":4305,"nodeType":"Block","src":"29301:80:15","statements":[{"expression":{"id":4299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4295,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4281,"src":"29319:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:15","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4300,"nodeType":"ExpressionStatement","src":"29319:17:15"},{"expression":{"id":4303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4301,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4287,"src":"29354:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4304,"nodeType":"ExpressionStatement","src":"29354:12:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4281,"src":"29398:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:15","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4323,"nodeType":"IfStatement","src":"29394:103:15","trueBody":{"id":4322,"nodeType":"Block","src":"29417:80:15","statements":[{"expression":{"id":4316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4312,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4281,"src":"29435:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:15","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4317,"nodeType":"ExpressionStatement","src":"29435:17:15"},{"expression":{"id":4320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4318,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4287,"src":"29470:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4321,"nodeType":"ExpressionStatement","src":"29470:12:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4324,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4281,"src":"29514:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:15","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4340,"nodeType":"IfStatement","src":"29510:103:15","trueBody":{"id":4339,"nodeType":"Block","src":"29533:80:15","statements":[{"expression":{"id":4333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4329,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4281,"src":"29551:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:15","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4334,"nodeType":"ExpressionStatement","src":"29551:17:15"},{"expression":{"id":4337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4335,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4287,"src":"29586:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4338,"nodeType":"ExpressionStatement","src":"29586:12:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4341,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4281,"src":"29630:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:15","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4357,"nodeType":"IfStatement","src":"29626:100:15","trueBody":{"id":4356,"nodeType":"Block","src":"29648:78:15","statements":[{"expression":{"id":4350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4346,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4281,"src":"29666:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:15","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4351,"nodeType":"ExpressionStatement","src":"29666:16:15"},{"expression":{"id":4354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4352,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4287,"src":"29700:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4355,"nodeType":"ExpressionStatement","src":"29700:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4358,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4281,"src":"29743:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4374,"nodeType":"IfStatement","src":"29739:100:15","trueBody":{"id":4373,"nodeType":"Block","src":"29761:78:15","statements":[{"expression":{"id":4367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4281,"src":"29779:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4368,"nodeType":"ExpressionStatement","src":"29779:16:15"},{"expression":{"id":4371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4369,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4287,"src":"29813:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4372,"nodeType":"ExpressionStatement","src":"29813:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4281,"src":"29856:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:15","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4391,"nodeType":"IfStatement","src":"29852:100:15","trueBody":{"id":4390,"nodeType":"Block","src":"29874:78:15","statements":[{"expression":{"id":4384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4380,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4281,"src":"29892:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:15","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4385,"nodeType":"ExpressionStatement","src":"29892:16:15"},{"expression":{"id":4388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4386,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4287,"src":"29926:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4389,"nodeType":"ExpressionStatement","src":"29926:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4392,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4281,"src":"29969:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":4395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":4394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4402,"nodeType":"IfStatement","src":"29965:66:15","trueBody":{"id":4401,"nodeType":"Block","src":"29987:44:15","statements":[{"expression":{"id":4399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4397,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4287,"src":"30005:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4400,"nodeType":"ExpressionStatement","src":"30005:11:15"}]}}]},{"expression":{"id":4404,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4287,"src":"30057:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4285,"id":4405,"nodeType":"Return","src":"30050:13:15"}]},"documentation":{"id":4279,"nodeType":"StructuredDocumentation","src":"29029:120:15","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4407,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:15","nodeType":"FunctionDefinition","parameters":{"id":4282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4281,"mutability":"mutable","name":"value","nameLocation":"29177:5:15","nodeType":"VariableDeclaration","scope":4407,"src":"29169:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4280,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:15"},"returnParameters":{"id":4285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4284,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4407,"src":"29207:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4283,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:15"},"scope":4575,"src":"29154:916:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4440,"nodeType":"Block","src":"30305:177:15","statements":[{"id":4439,"nodeType":"UncheckedBlock","src":"30315:161:15","statements":[{"assignments":[4419],"declarations":[{"constant":false,"id":4419,"mutability":"mutable","name":"result","nameLocation":"30347:6:15","nodeType":"VariableDeclaration","scope":4439,"src":"30339:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4418,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4423,"initialValue":{"arguments":[{"id":4421,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4410,"src":"30362:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4420,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[4407,4441],"referencedDeclaration":4407,"src":"30356:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:15"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4424,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4419,"src":"30389:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4428,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4413,"src":"30431:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2966","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2966","typeString":"enum Math.Rounding"}],"id":4427,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"30414:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2966_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4431,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4419,"src":"30450:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4433,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4410,"src":"30459:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4425,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6340,"src":"30398:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6340_$","typeString":"type(library SafeCast)"}},"id":4426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6339,"src":"30398:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4417,"id":4438,"nodeType":"Return","src":"30382:83:15"}]}]},"documentation":{"id":4408,"nodeType":"StructuredDocumentation","src":"30076:143:15","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4441,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:15","nodeType":"FunctionDefinition","parameters":{"id":4414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4410,"mutability":"mutable","name":"value","nameLocation":"30247:5:15","nodeType":"VariableDeclaration","scope":4441,"src":"30239:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4409,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4413,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:15","nodeType":"VariableDeclaration","scope":4441,"src":"30254:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2966","typeString":"enum Math.Rounding"},"typeName":{"id":4412,"nodeType":"UserDefinedTypeName","pathNode":{"id":4411,"name":"Rounding","nameLocations":["30254:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":2966,"src":"30254:8:15"},"referencedDeclaration":2966,"src":"30254:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2966","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:15"},"returnParameters":{"id":4417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4416,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4441,"src":"30296:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4415,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:15"},"scope":4575,"src":"30224:258:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4517,"nodeType":"Block","src":"30800:675:15","statements":[{"expression":{"id":4458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4449,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"30882:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4452,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4444,"src":"30902:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":4453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:15","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4450,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6340,"src":"30886:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6340_$","typeString":"type(library SafeCast)"}},"id":4451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6339,"src":"30886:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":4456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:15","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4459,"nodeType":"ExpressionStatement","src":"30882:64:15"},{"expression":{"id":4472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4460,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"31022:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4463,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4444,"src":"31044:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4464,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"31049:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4466,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":4467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:15","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4461,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6340,"src":"31027:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6340_$","typeString":"type(library SafeCast)"}},"id":4462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6339,"src":"31027:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":4470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:15","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4473,"nodeType":"ExpressionStatement","src":"31022:56:15"},{"expression":{"id":4486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4474,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"31153:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4477,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4444,"src":"31175:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4478,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"31180:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4480,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":4481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:15","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4475,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6340,"src":"31158:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6340_$","typeString":"type(library SafeCast)"}},"id":4476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6339,"src":"31158:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":4484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:15","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4487,"nodeType":"ExpressionStatement","src":"31153:48:15"},{"expression":{"id":4500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4488,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"31276:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4491,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4444,"src":"31298:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4492,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"31303:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4494,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":4495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:15","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4489,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6340,"src":"31281:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6340_$","typeString":"type(library SafeCast)"}},"id":4490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6339,"src":"31281:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4501,"nodeType":"ExpressionStatement","src":"31276:44:15"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4502,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"31426:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":4503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:15","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4505,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4508,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4444,"src":"31453:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4509,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4447,"src":"31458:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4511,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":4512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:15","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4506,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6340,"src":"31436:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6340_$","typeString":"type(library SafeCast)"}},"id":4507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6339,"src":"31436:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4448,"id":4516,"nodeType":"Return","src":"31418:50:15"}]},"documentation":{"id":4442,"nodeType":"StructuredDocumentation","src":"30488:246:15","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":4518,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:15","nodeType":"FunctionDefinition","parameters":{"id":4445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4444,"mutability":"mutable","name":"x","nameLocation":"30763:1:15","nodeType":"VariableDeclaration","scope":4518,"src":"30755:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4443,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:15"},"returnParameters":{"id":4448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4447,"mutability":"mutable","name":"r","nameLocation":"30797:1:15","nodeType":"VariableDeclaration","scope":4518,"src":"30789:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4446,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:15"},"scope":4575,"src":"30739:736:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4554,"nodeType":"Block","src":"31712:184:15","statements":[{"id":4553,"nodeType":"UncheckedBlock","src":"31722:168:15","statements":[{"assignments":[4530],"declarations":[{"constant":false,"id":4530,"mutability":"mutable","name":"result","nameLocation":"31754:6:15","nodeType":"VariableDeclaration","scope":4553,"src":"31746:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4529,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4534,"initialValue":{"arguments":[{"id":4532,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4521,"src":"31770:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4531,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[4518,4555],"referencedDeclaration":4518,"src":"31763:6:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:15"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4535,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"31797:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4539,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4524,"src":"31839:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2966","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2966","typeString":"enum Math.Rounding"}],"id":4538,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4574,"src":"31822:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$2966_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4542,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4530,"src":"31858:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:15","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4545,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4547,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4521,"src":"31873:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4536,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6340,"src":"31806:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6340_$","typeString":"type(library SafeCast)"}},"id":4537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6339,"src":"31806:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4528,"id":4552,"nodeType":"Return","src":"31790:89:15"}]}]},"documentation":{"id":4519,"nodeType":"StructuredDocumentation","src":"31481:144:15","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4555,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:15","nodeType":"FunctionDefinition","parameters":{"id":4525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4521,"mutability":"mutable","name":"value","nameLocation":"31654:5:15","nodeType":"VariableDeclaration","scope":4555,"src":"31646:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4520,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4524,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:15","nodeType":"VariableDeclaration","scope":4555,"src":"31661:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2966","typeString":"enum Math.Rounding"},"typeName":{"id":4523,"nodeType":"UserDefinedTypeName","pathNode":{"id":4522,"name":"Rounding","nameLocations":["31661:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":2966,"src":"31661:8:15"},"referencedDeclaration":2966,"src":"31661:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2966","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:15"},"returnParameters":{"id":4528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4527,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4555,"src":"31703:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4526,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:15"},"scope":4575,"src":"31630:266:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4573,"nodeType":"Block","src":"32094:48:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4566,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4559,"src":"32117:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2966","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$2966","typeString":"enum Math.Rounding"}],"id":4565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4564,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:15","typeDescriptions":{}}},"id":4567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":4568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4563,"id":4572,"nodeType":"Return","src":"32104:31:15"}]},"documentation":{"id":4556,"nodeType":"StructuredDocumentation","src":"31902:113:15","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":4574,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:15","nodeType":"FunctionDefinition","parameters":{"id":4560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4559,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:15","nodeType":"VariableDeclaration","scope":4574,"src":"32046:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2966","typeString":"enum Math.Rounding"},"typeName":{"id":4558,"nodeType":"UserDefinedTypeName","pathNode":{"id":4557,"name":"Rounding","nameLocations":["32046:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":2966,"src":"32046:8:15"},"referencedDeclaration":2966,"src":"32046:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2966","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:15"},"returnParameters":{"id":4563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4562,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4574,"src":"32088:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4561,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:15"},"scope":4575,"src":"32020:122:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4576,"src":"281:31863:15","usedErrors":[],"usedEvents":[]}],"src":"103:32042:15"},"id":15},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[6340]},"id":6341,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4577,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:16"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":4578,"nodeType":"StructuredDocumentation","src":"218:550:16","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":6340,"linearizedBaseContracts":[6340],"name":"SafeCast","nameLocation":"777:8:16","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4579,"nodeType":"StructuredDocumentation","src":"792:68:16","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":4585,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:16","nodeType":"ErrorDefinition","parameters":{"id":4584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4581,"mutability":"mutable","name":"bits","nameLocation":"908:4:16","nodeType":"VariableDeclaration","scope":4585,"src":"902:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4580,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4583,"mutability":"mutable","name":"value","nameLocation":"922:5:16","nodeType":"VariableDeclaration","scope":4585,"src":"914:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4582,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:16"},"src":"865:64:16"},{"documentation":{"id":4586,"nodeType":"StructuredDocumentation","src":"935:75:16","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":4590,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:16","nodeType":"ErrorDefinition","parameters":{"id":4589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4588,"mutability":"mutable","name":"value","nameLocation":"1056:5:16","nodeType":"VariableDeclaration","scope":4590,"src":"1049:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4587,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:16"},"src":"1015:48:16"},{"documentation":{"id":4591,"nodeType":"StructuredDocumentation","src":"1069:67:16","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":4597,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:16","nodeType":"ErrorDefinition","parameters":{"id":4596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4593,"mutability":"mutable","name":"bits","nameLocation":"1183:4:16","nodeType":"VariableDeclaration","scope":4597,"src":"1177:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4592,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4595,"mutability":"mutable","name":"value","nameLocation":"1196:5:16","nodeType":"VariableDeclaration","scope":4597,"src":"1189:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4594,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:16"},"src":"1141:62:16"},{"documentation":{"id":4598,"nodeType":"StructuredDocumentation","src":"1209:75:16","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":4602,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:16","nodeType":"ErrorDefinition","parameters":{"id":4601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4600,"mutability":"mutable","name":"value","nameLocation":"1331:5:16","nodeType":"VariableDeclaration","scope":4602,"src":"1323:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4599,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:16"},"src":"1289:49:16"},{"body":{"id":4629,"nodeType":"Block","src":"1695:152:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4610,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4605,"src":"1709:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4612,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":4611,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":4615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:16","memberName":"max","nodeType":"MemberAccess","src":"1717:17:16","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4623,"nodeType":"IfStatement","src":"1705:105:16","trueBody":{"id":4622,"nodeType":"Block","src":"1736:74:16","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":4618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:16","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":4619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4605,"src":"1793:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4617,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"1757:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4621,"nodeType":"RevertStatement","src":"1750:49:16"}]}},{"expression":{"arguments":[{"id":4626,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4605,"src":"1834:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4624,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:16","typeDescriptions":{}}},"id":4627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":4609,"id":4628,"nodeType":"Return","src":"1819:21:16"}]},"documentation":{"id":4603,"nodeType":"StructuredDocumentation","src":"1344:280:16","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":4630,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:16","nodeType":"FunctionDefinition","parameters":{"id":4606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4605,"mutability":"mutable","name":"value","nameLocation":"1656:5:16","nodeType":"VariableDeclaration","scope":4630,"src":"1648:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4604,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:16"},"returnParameters":{"id":4609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4608,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4630,"src":"1686:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":4607,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:16","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:16"},"scope":6340,"src":"1629:218:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4657,"nodeType":"Block","src":"2204:152:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4638,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4633,"src":"2218:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4640,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":4639,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":4643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:16","memberName":"max","nodeType":"MemberAccess","src":"2226:17:16","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4651,"nodeType":"IfStatement","src":"2214:105:16","trueBody":{"id":4650,"nodeType":"Block","src":"2245:74:16","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":4646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:16","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":4647,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4633,"src":"2302:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4645,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"2266:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4649,"nodeType":"RevertStatement","src":"2259:49:16"}]}},{"expression":{"arguments":[{"id":4654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4633,"src":"2343:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4652,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:16","typeDescriptions":{}}},"id":4655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":4637,"id":4656,"nodeType":"Return","src":"2328:21:16"}]},"documentation":{"id":4631,"nodeType":"StructuredDocumentation","src":"1853:280:16","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":4658,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:16","nodeType":"FunctionDefinition","parameters":{"id":4634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4633,"mutability":"mutable","name":"value","nameLocation":"2165:5:16","nodeType":"VariableDeclaration","scope":4658,"src":"2157:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4632,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:16"},"returnParameters":{"id":4637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4636,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4658,"src":"2195:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":4635,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:16","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:16"},"scope":6340,"src":"2138:218:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4685,"nodeType":"Block","src":"2713:152:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"2727:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4668,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":4667,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":4671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:16","memberName":"max","nodeType":"MemberAccess","src":"2735:17:16","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4679,"nodeType":"IfStatement","src":"2723:105:16","trueBody":{"id":4678,"nodeType":"Block","src":"2754:74:16","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":4674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:16","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":4675,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"2811:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4673,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"2775:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4677,"nodeType":"RevertStatement","src":"2768:49:16"}]}},{"expression":{"arguments":[{"id":4682,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4661,"src":"2852:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4680,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:16","typeDescriptions":{}}},"id":4683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":4665,"id":4684,"nodeType":"Return","src":"2837:21:16"}]},"documentation":{"id":4659,"nodeType":"StructuredDocumentation","src":"2362:280:16","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":4686,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:16","nodeType":"FunctionDefinition","parameters":{"id":4662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4661,"mutability":"mutable","name":"value","nameLocation":"2674:5:16","nodeType":"VariableDeclaration","scope":4686,"src":"2666:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4660,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:16"},"returnParameters":{"id":4665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4664,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4686,"src":"2704:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":4663,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:16","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:16"},"scope":6340,"src":"2647:218:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4713,"nodeType":"Block","src":"3222:152:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4694,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4689,"src":"3236:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4696,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":4695,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":4699,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:16","memberName":"max","nodeType":"MemberAccess","src":"3244:17:16","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4707,"nodeType":"IfStatement","src":"3232:105:16","trueBody":{"id":4706,"nodeType":"Block","src":"3263:74:16","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":4702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:16","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":4703,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4689,"src":"3320:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4701,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"3284:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4705,"nodeType":"RevertStatement","src":"3277:49:16"}]}},{"expression":{"arguments":[{"id":4710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4689,"src":"3361:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4708,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:16","typeDescriptions":{}}},"id":4711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":4693,"id":4712,"nodeType":"Return","src":"3346:21:16"}]},"documentation":{"id":4687,"nodeType":"StructuredDocumentation","src":"2871:280:16","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":4714,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:16","nodeType":"FunctionDefinition","parameters":{"id":4690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4689,"mutability":"mutable","name":"value","nameLocation":"3183:5:16","nodeType":"VariableDeclaration","scope":4714,"src":"3175:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4688,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:16"},"returnParameters":{"id":4693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4692,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4714,"src":"3213:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":4691,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:16","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:16"},"scope":6340,"src":"3156:218:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4741,"nodeType":"Block","src":"3731:152:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4722,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"3745:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4724,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":4723,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":4727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:16","memberName":"max","nodeType":"MemberAccess","src":"3753:17:16","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4735,"nodeType":"IfStatement","src":"3741:105:16","trueBody":{"id":4734,"nodeType":"Block","src":"3772:74:16","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":4730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:16","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":4731,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"3829:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4729,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"3793:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4733,"nodeType":"RevertStatement","src":"3786:49:16"}]}},{"expression":{"arguments":[{"id":4738,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"3870:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4736,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:16","typeDescriptions":{}}},"id":4739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":4721,"id":4740,"nodeType":"Return","src":"3855:21:16"}]},"documentation":{"id":4715,"nodeType":"StructuredDocumentation","src":"3380:280:16","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":4742,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:16","nodeType":"FunctionDefinition","parameters":{"id":4718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4717,"mutability":"mutable","name":"value","nameLocation":"3692:5:16","nodeType":"VariableDeclaration","scope":4742,"src":"3684:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4716,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:16"},"returnParameters":{"id":4721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4720,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4742,"src":"3722:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":4719,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:16","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:16"},"scope":6340,"src":"3665:218:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4769,"nodeType":"Block","src":"4240:152:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4750,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4745,"src":"4254:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4753,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4752,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":4751,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":4755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:16","memberName":"max","nodeType":"MemberAccess","src":"4262:17:16","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4763,"nodeType":"IfStatement","src":"4250:105:16","trueBody":{"id":4762,"nodeType":"Block","src":"4281:74:16","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":4758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:16","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":4759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4745,"src":"4338:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4757,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"4302:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4761,"nodeType":"RevertStatement","src":"4295:49:16"}]}},{"expression":{"arguments":[{"id":4766,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4745,"src":"4379:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4765,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":4764,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:16","typeDescriptions":{}}},"id":4767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":4749,"id":4768,"nodeType":"Return","src":"4364:21:16"}]},"documentation":{"id":4743,"nodeType":"StructuredDocumentation","src":"3889:280:16","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":4770,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:16","nodeType":"FunctionDefinition","parameters":{"id":4746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4745,"mutability":"mutable","name":"value","nameLocation":"4201:5:16","nodeType":"VariableDeclaration","scope":4770,"src":"4193:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4744,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:16"},"returnParameters":{"id":4749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4748,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4770,"src":"4231:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":4747,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:16","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:16"},"scope":6340,"src":"4174:218:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4797,"nodeType":"Block","src":"4749:152:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4778,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4773,"src":"4763:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4780,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":4779,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":4783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:16","memberName":"max","nodeType":"MemberAccess","src":"4771:17:16","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4791,"nodeType":"IfStatement","src":"4759:105:16","trueBody":{"id":4790,"nodeType":"Block","src":"4790:74:16","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":4786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:16","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":4787,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4773,"src":"4847:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4785,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"4811:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4789,"nodeType":"RevertStatement","src":"4804:49:16"}]}},{"expression":{"arguments":[{"id":4794,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4773,"src":"4888:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":4792,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:16","typeDescriptions":{}}},"id":4795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":4777,"id":4796,"nodeType":"Return","src":"4873:21:16"}]},"documentation":{"id":4771,"nodeType":"StructuredDocumentation","src":"4398:280:16","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":4798,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:16","nodeType":"FunctionDefinition","parameters":{"id":4774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4773,"mutability":"mutable","name":"value","nameLocation":"4710:5:16","nodeType":"VariableDeclaration","scope":4798,"src":"4702:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4772,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:16"},"returnParameters":{"id":4777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4776,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4798,"src":"4740:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":4775,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:16","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:16"},"scope":6340,"src":"4683:218:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4825,"nodeType":"Block","src":"5258:152:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4806,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"5272:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4808,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":4807,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":4811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:16","memberName":"max","nodeType":"MemberAccess","src":"5280:17:16","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4819,"nodeType":"IfStatement","src":"5268:105:16","trueBody":{"id":4818,"nodeType":"Block","src":"5299:74:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":4814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:16","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":4815,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"5356:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4813,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"5320:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4817,"nodeType":"RevertStatement","src":"5313:49:16"}]}},{"expression":{"arguments":[{"id":4822,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4801,"src":"5397:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":4820,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:16","typeDescriptions":{}}},"id":4823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":4805,"id":4824,"nodeType":"Return","src":"5382:21:16"}]},"documentation":{"id":4799,"nodeType":"StructuredDocumentation","src":"4907:280:16","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":4826,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:16","nodeType":"FunctionDefinition","parameters":{"id":4802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4801,"mutability":"mutable","name":"value","nameLocation":"5219:5:16","nodeType":"VariableDeclaration","scope":4826,"src":"5211:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4800,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:16"},"returnParameters":{"id":4805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4804,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4826,"src":"5249:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":4803,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:16","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:16"},"scope":6340,"src":"5192:218:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4853,"nodeType":"Block","src":"5767:152:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4834,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4829,"src":"5781:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4836,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":4835,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":4839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:16","memberName":"max","nodeType":"MemberAccess","src":"5789:17:16","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4847,"nodeType":"IfStatement","src":"5777:105:16","trueBody":{"id":4846,"nodeType":"Block","src":"5808:74:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":4842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:16","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":4843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4829,"src":"5865:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4841,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"5829:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4845,"nodeType":"RevertStatement","src":"5822:49:16"}]}},{"expression":{"arguments":[{"id":4850,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4829,"src":"5906:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":4848,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:16","typeDescriptions":{}}},"id":4851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":4833,"id":4852,"nodeType":"Return","src":"5891:21:16"}]},"documentation":{"id":4827,"nodeType":"StructuredDocumentation","src":"5416:280:16","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":4854,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:16","nodeType":"FunctionDefinition","parameters":{"id":4830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4829,"mutability":"mutable","name":"value","nameLocation":"5728:5:16","nodeType":"VariableDeclaration","scope":4854,"src":"5720:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4828,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:16"},"returnParameters":{"id":4833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4832,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4854,"src":"5758:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":4831,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:16","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:16"},"scope":6340,"src":"5701:218:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4881,"nodeType":"Block","src":"6276:152:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4862,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4857,"src":"6290:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4864,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":4863,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":4867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:16","memberName":"max","nodeType":"MemberAccess","src":"6298:17:16","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4875,"nodeType":"IfStatement","src":"6286:105:16","trueBody":{"id":4874,"nodeType":"Block","src":"6317:74:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":4870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:16","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":4871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4857,"src":"6374:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4869,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"6338:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4873,"nodeType":"RevertStatement","src":"6331:49:16"}]}},{"expression":{"arguments":[{"id":4878,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4857,"src":"6415:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":4876,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:16","typeDescriptions":{}}},"id":4879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":4861,"id":4880,"nodeType":"Return","src":"6400:21:16"}]},"documentation":{"id":4855,"nodeType":"StructuredDocumentation","src":"5925:280:16","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":4882,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:16","nodeType":"FunctionDefinition","parameters":{"id":4858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4857,"mutability":"mutable","name":"value","nameLocation":"6237:5:16","nodeType":"VariableDeclaration","scope":4882,"src":"6229:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4856,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:16"},"returnParameters":{"id":4861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4860,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4882,"src":"6267:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":4859,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:16","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:16"},"scope":6340,"src":"6210:218:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4909,"nodeType":"Block","src":"6785:152:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4890,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4885,"src":"6799:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4892,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":4891,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":4895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:16","memberName":"max","nodeType":"MemberAccess","src":"6807:17:16","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4903,"nodeType":"IfStatement","src":"6795:105:16","trueBody":{"id":4902,"nodeType":"Block","src":"6826:74:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":4898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:16","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":4899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4885,"src":"6883:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4897,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"6847:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4901,"nodeType":"RevertStatement","src":"6840:49:16"}]}},{"expression":{"arguments":[{"id":4906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4885,"src":"6924:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":4904,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:16","typeDescriptions":{}}},"id":4907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":4889,"id":4908,"nodeType":"Return","src":"6909:21:16"}]},"documentation":{"id":4883,"nodeType":"StructuredDocumentation","src":"6434:280:16","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":4910,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:16","nodeType":"FunctionDefinition","parameters":{"id":4886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4885,"mutability":"mutable","name":"value","nameLocation":"6746:5:16","nodeType":"VariableDeclaration","scope":4910,"src":"6738:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4884,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:16"},"returnParameters":{"id":4889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4888,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4910,"src":"6776:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":4887,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:16","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:16"},"scope":6340,"src":"6719:218:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4937,"nodeType":"Block","src":"7294:152:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4918,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4913,"src":"7308:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4920,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":4919,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":4923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:16","memberName":"max","nodeType":"MemberAccess","src":"7316:17:16","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4931,"nodeType":"IfStatement","src":"7304:105:16","trueBody":{"id":4930,"nodeType":"Block","src":"7335:74:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":4926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:16","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":4927,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4913,"src":"7392:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4925,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"7356:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4929,"nodeType":"RevertStatement","src":"7349:49:16"}]}},{"expression":{"arguments":[{"id":4934,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4913,"src":"7433:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4932,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:16","typeDescriptions":{}}},"id":4935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":4917,"id":4936,"nodeType":"Return","src":"7418:21:16"}]},"documentation":{"id":4911,"nodeType":"StructuredDocumentation","src":"6943:280:16","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":4938,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:16","nodeType":"FunctionDefinition","parameters":{"id":4914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4913,"mutability":"mutable","name":"value","nameLocation":"7255:5:16","nodeType":"VariableDeclaration","scope":4938,"src":"7247:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4912,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:16"},"returnParameters":{"id":4917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4916,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4938,"src":"7285:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4915,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:16","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:16"},"scope":6340,"src":"7228:218:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4965,"nodeType":"Block","src":"7803:152:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4946,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4941,"src":"7817:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4948,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":4947,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":4951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:16","memberName":"max","nodeType":"MemberAccess","src":"7825:17:16","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4959,"nodeType":"IfStatement","src":"7813:105:16","trueBody":{"id":4958,"nodeType":"Block","src":"7844:74:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":4954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:16","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":4955,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4941,"src":"7901:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4953,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"7865:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4957,"nodeType":"RevertStatement","src":"7858:49:16"}]}},{"expression":{"arguments":[{"id":4962,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4941,"src":"7942:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":4960,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:16","typeDescriptions":{}}},"id":4963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":4945,"id":4964,"nodeType":"Return","src":"7927:21:16"}]},"documentation":{"id":4939,"nodeType":"StructuredDocumentation","src":"7452:280:16","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":4966,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:16","nodeType":"FunctionDefinition","parameters":{"id":4942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4941,"mutability":"mutable","name":"value","nameLocation":"7764:5:16","nodeType":"VariableDeclaration","scope":4966,"src":"7756:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4940,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:16"},"returnParameters":{"id":4945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4944,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4966,"src":"7794:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":4943,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:16","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:16"},"scope":6340,"src":"7737:218:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4993,"nodeType":"Block","src":"8312:152:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4969,"src":"8326:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4976,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":4975,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":4979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:16","memberName":"max","nodeType":"MemberAccess","src":"8334:17:16","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4987,"nodeType":"IfStatement","src":"8322:105:16","trueBody":{"id":4986,"nodeType":"Block","src":"8353:74:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":4982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:16","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":4983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4969,"src":"8410:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4981,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"8374:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4985,"nodeType":"RevertStatement","src":"8367:49:16"}]}},{"expression":{"arguments":[{"id":4990,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4969,"src":"8451:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":4988,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:16","typeDescriptions":{}}},"id":4991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":4973,"id":4992,"nodeType":"Return","src":"8436:21:16"}]},"documentation":{"id":4967,"nodeType":"StructuredDocumentation","src":"7961:280:16","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":4994,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:16","nodeType":"FunctionDefinition","parameters":{"id":4970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4969,"mutability":"mutable","name":"value","nameLocation":"8273:5:16","nodeType":"VariableDeclaration","scope":4994,"src":"8265:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4968,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:16"},"returnParameters":{"id":4973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4972,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4994,"src":"8303:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":4971,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:16","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:16"},"scope":6340,"src":"8246:218:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5021,"nodeType":"Block","src":"8821:152:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5002,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4997,"src":"8835:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5004,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":5003,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":5007,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:16","memberName":"max","nodeType":"MemberAccess","src":"8843:17:16","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5015,"nodeType":"IfStatement","src":"8831:105:16","trueBody":{"id":5014,"nodeType":"Block","src":"8862:74:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:16","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5011,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4997,"src":"8919:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5009,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"8883:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5013,"nodeType":"RevertStatement","src":"8876:49:16"}]}},{"expression":{"arguments":[{"id":5018,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4997,"src":"8960:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5016,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:16","typeDescriptions":{}}},"id":5019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":5001,"id":5020,"nodeType":"Return","src":"8945:21:16"}]},"documentation":{"id":4995,"nodeType":"StructuredDocumentation","src":"8470:280:16","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5022,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:16","nodeType":"FunctionDefinition","parameters":{"id":4998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4997,"mutability":"mutable","name":"value","nameLocation":"8782:5:16","nodeType":"VariableDeclaration","scope":5022,"src":"8774:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4996,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:16"},"returnParameters":{"id":5001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5000,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5022,"src":"8812:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":4999,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:16","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:16"},"scope":6340,"src":"8755:218:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5049,"nodeType":"Block","src":"9330:152:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5030,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"9344:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5032,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":5031,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":5035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:16","memberName":"max","nodeType":"MemberAccess","src":"9352:17:16","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5043,"nodeType":"IfStatement","src":"9340:105:16","trueBody":{"id":5042,"nodeType":"Block","src":"9371:74:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:16","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5039,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"9428:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5037,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"9392:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5041,"nodeType":"RevertStatement","src":"9385:49:16"}]}},{"expression":{"arguments":[{"id":5046,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5025,"src":"9469:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5044,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:16","typeDescriptions":{}}},"id":5047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":5029,"id":5048,"nodeType":"Return","src":"9454:21:16"}]},"documentation":{"id":5023,"nodeType":"StructuredDocumentation","src":"8979:280:16","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5050,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:16","nodeType":"FunctionDefinition","parameters":{"id":5026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5025,"mutability":"mutable","name":"value","nameLocation":"9291:5:16","nodeType":"VariableDeclaration","scope":5050,"src":"9283:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5024,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:16"},"returnParameters":{"id":5029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5028,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5050,"src":"9321:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5027,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:16","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:16"},"scope":6340,"src":"9264:218:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5077,"nodeType":"Block","src":"9839:152:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5058,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5053,"src":"9853:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5060,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":5059,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":5063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:16","memberName":"max","nodeType":"MemberAccess","src":"9861:17:16","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5071,"nodeType":"IfStatement","src":"9849:105:16","trueBody":{"id":5070,"nodeType":"Block","src":"9880:74:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:16","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5053,"src":"9937:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5065,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"9901:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5069,"nodeType":"RevertStatement","src":"9894:49:16"}]}},{"expression":{"arguments":[{"id":5074,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5053,"src":"9978:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5072,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:16","typeDescriptions":{}}},"id":5075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":5057,"id":5076,"nodeType":"Return","src":"9963:21:16"}]},"documentation":{"id":5051,"nodeType":"StructuredDocumentation","src":"9488:280:16","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5078,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:16","nodeType":"FunctionDefinition","parameters":{"id":5054,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5053,"mutability":"mutable","name":"value","nameLocation":"9800:5:16","nodeType":"VariableDeclaration","scope":5078,"src":"9792:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5052,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:16"},"returnParameters":{"id":5057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5056,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5078,"src":"9830:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":5055,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:16","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:16"},"scope":6340,"src":"9773:218:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5105,"nodeType":"Block","src":"10348:152:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5086,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5081,"src":"10362:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5088,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":5087,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":5091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:16","memberName":"max","nodeType":"MemberAccess","src":"10370:17:16","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5099,"nodeType":"IfStatement","src":"10358:105:16","trueBody":{"id":5098,"nodeType":"Block","src":"10389:74:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:16","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5095,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5081,"src":"10446:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5093,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"10410:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5097,"nodeType":"RevertStatement","src":"10403:49:16"}]}},{"expression":{"arguments":[{"id":5102,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5081,"src":"10487:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5100,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:16","typeDescriptions":{}}},"id":5103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":5085,"id":5104,"nodeType":"Return","src":"10472:21:16"}]},"documentation":{"id":5079,"nodeType":"StructuredDocumentation","src":"9997:280:16","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5106,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:16","nodeType":"FunctionDefinition","parameters":{"id":5082,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5081,"mutability":"mutable","name":"value","nameLocation":"10309:5:16","nodeType":"VariableDeclaration","scope":5106,"src":"10301:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5080,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:16"},"returnParameters":{"id":5085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5084,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5106,"src":"10339:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":5083,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:16","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:16"},"scope":6340,"src":"10282:218:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5133,"nodeType":"Block","src":"10857:152:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5114,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5109,"src":"10871:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5116,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":5115,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":5119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:16","memberName":"max","nodeType":"MemberAccess","src":"10879:17:16","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5127,"nodeType":"IfStatement","src":"10867:105:16","trueBody":{"id":5126,"nodeType":"Block","src":"10898:74:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:16","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5109,"src":"10955:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5121,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"10919:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5125,"nodeType":"RevertStatement","src":"10912:49:16"}]}},{"expression":{"arguments":[{"id":5130,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5109,"src":"10996:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5128,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:16","typeDescriptions":{}}},"id":5131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":5113,"id":5132,"nodeType":"Return","src":"10981:21:16"}]},"documentation":{"id":5107,"nodeType":"StructuredDocumentation","src":"10506:280:16","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5134,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:16","nodeType":"FunctionDefinition","parameters":{"id":5110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5109,"mutability":"mutable","name":"value","nameLocation":"10818:5:16","nodeType":"VariableDeclaration","scope":5134,"src":"10810:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5108,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:16"},"returnParameters":{"id":5113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5112,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5134,"src":"10848:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":5111,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:16","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:16"},"scope":6340,"src":"10791:218:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5161,"nodeType":"Block","src":"11360:149:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5142,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5137,"src":"11374:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5144,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":5143,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":5147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:16","memberName":"max","nodeType":"MemberAccess","src":"11382:16:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5155,"nodeType":"IfStatement","src":"11370:103:16","trueBody":{"id":5154,"nodeType":"Block","src":"11400:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:16","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5137,"src":"11456:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5149,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"11421:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5153,"nodeType":"RevertStatement","src":"11414:48:16"}]}},{"expression":{"arguments":[{"id":5158,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5137,"src":"11496:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5157,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5156,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:16","typeDescriptions":{}}},"id":5159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":5141,"id":5160,"nodeType":"Return","src":"11482:20:16"}]},"documentation":{"id":5135,"nodeType":"StructuredDocumentation","src":"11015:276:16","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5162,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:16","nodeType":"FunctionDefinition","parameters":{"id":5138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5137,"mutability":"mutable","name":"value","nameLocation":"11322:5:16","nodeType":"VariableDeclaration","scope":5162,"src":"11314:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5136,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:16"},"returnParameters":{"id":5141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5140,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5162,"src":"11352:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":5139,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:16","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:16"},"scope":6340,"src":"11296:213:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5189,"nodeType":"Block","src":"11860:149:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5170,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5165,"src":"11874:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5172,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":5171,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":5175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:16","memberName":"max","nodeType":"MemberAccess","src":"11882:16:16","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5183,"nodeType":"IfStatement","src":"11870:103:16","trueBody":{"id":5182,"nodeType":"Block","src":"11900:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:16","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5179,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5165,"src":"11956:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5177,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"11921:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5181,"nodeType":"RevertStatement","src":"11914:48:16"}]}},{"expression":{"arguments":[{"id":5186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5165,"src":"11996:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5184,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:16","typeDescriptions":{}}},"id":5187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":5169,"id":5188,"nodeType":"Return","src":"11982:20:16"}]},"documentation":{"id":5163,"nodeType":"StructuredDocumentation","src":"11515:276:16","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5190,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:16","nodeType":"FunctionDefinition","parameters":{"id":5166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5165,"mutability":"mutable","name":"value","nameLocation":"11822:5:16","nodeType":"VariableDeclaration","scope":5190,"src":"11814:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5164,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:16"},"returnParameters":{"id":5169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5168,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5190,"src":"11852:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":5167,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:16","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:16"},"scope":6340,"src":"11796:213:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5217,"nodeType":"Block","src":"12360:149:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5198,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5193,"src":"12374:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5200,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":5199,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":5203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:16","memberName":"max","nodeType":"MemberAccess","src":"12382:16:16","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5211,"nodeType":"IfStatement","src":"12370:103:16","trueBody":{"id":5210,"nodeType":"Block","src":"12400:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:16","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5193,"src":"12456:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5205,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"12421:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5209,"nodeType":"RevertStatement","src":"12414:48:16"}]}},{"expression":{"arguments":[{"id":5214,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5193,"src":"12496:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5212,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:16","typeDescriptions":{}}},"id":5215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":5197,"id":5216,"nodeType":"Return","src":"12482:20:16"}]},"documentation":{"id":5191,"nodeType":"StructuredDocumentation","src":"12015:276:16","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5218,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:16","nodeType":"FunctionDefinition","parameters":{"id":5194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5193,"mutability":"mutable","name":"value","nameLocation":"12322:5:16","nodeType":"VariableDeclaration","scope":5218,"src":"12314:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5192,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:16"},"returnParameters":{"id":5197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5196,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5218,"src":"12352:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":5195,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:16","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:16"},"scope":6340,"src":"12296:213:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5245,"nodeType":"Block","src":"12860:149:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5226,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"12874:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5228,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":5227,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":5231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:16","memberName":"max","nodeType":"MemberAccess","src":"12882:16:16","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5239,"nodeType":"IfStatement","src":"12870:103:16","trueBody":{"id":5238,"nodeType":"Block","src":"12900:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:16","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5235,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"12956:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5233,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"12921:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5237,"nodeType":"RevertStatement","src":"12914:48:16"}]}},{"expression":{"arguments":[{"id":5242,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5221,"src":"12996:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5240,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:16","typeDescriptions":{}}},"id":5243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":5225,"id":5244,"nodeType":"Return","src":"12982:20:16"}]},"documentation":{"id":5219,"nodeType":"StructuredDocumentation","src":"12515:276:16","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5246,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:16","nodeType":"FunctionDefinition","parameters":{"id":5222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5221,"mutability":"mutable","name":"value","nameLocation":"12822:5:16","nodeType":"VariableDeclaration","scope":5246,"src":"12814:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5220,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:16"},"returnParameters":{"id":5225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5224,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5246,"src":"12852:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":5223,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:16","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:16"},"scope":6340,"src":"12796:213:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5273,"nodeType":"Block","src":"13360:149:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5254,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"13374:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5256,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":5255,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":5259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:16","memberName":"max","nodeType":"MemberAccess","src":"13382:16:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5267,"nodeType":"IfStatement","src":"13370:103:16","trueBody":{"id":5266,"nodeType":"Block","src":"13400:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5263,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"13456:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5261,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"13421:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5265,"nodeType":"RevertStatement","src":"13414:48:16"}]}},{"expression":{"arguments":[{"id":5270,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5249,"src":"13496:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5268,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:16","typeDescriptions":{}}},"id":5271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5253,"id":5272,"nodeType":"Return","src":"13482:20:16"}]},"documentation":{"id":5247,"nodeType":"StructuredDocumentation","src":"13015:276:16","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5274,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:16","nodeType":"FunctionDefinition","parameters":{"id":5250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5249,"mutability":"mutable","name":"value","nameLocation":"13322:5:16","nodeType":"VariableDeclaration","scope":5274,"src":"13314:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5248,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:16"},"returnParameters":{"id":5253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5252,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5274,"src":"13352:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5251,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:16","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:16"},"scope":6340,"src":"13296:213:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5301,"nodeType":"Block","src":"13860:149:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5282,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5277,"src":"13874:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5284,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":5283,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":5287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:16","memberName":"max","nodeType":"MemberAccess","src":"13882:16:16","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5295,"nodeType":"IfStatement","src":"13870:103:16","trueBody":{"id":5294,"nodeType":"Block","src":"13900:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:16","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5291,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5277,"src":"13956:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5289,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"13921:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5293,"nodeType":"RevertStatement","src":"13914:48:16"}]}},{"expression":{"arguments":[{"id":5298,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5277,"src":"13996:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5297,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5296,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:16","typeDescriptions":{}}},"id":5299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":5281,"id":5300,"nodeType":"Return","src":"13982:20:16"}]},"documentation":{"id":5275,"nodeType":"StructuredDocumentation","src":"13515:276:16","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5302,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:16","nodeType":"FunctionDefinition","parameters":{"id":5278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5277,"mutability":"mutable","name":"value","nameLocation":"13822:5:16","nodeType":"VariableDeclaration","scope":5302,"src":"13814:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5276,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:16"},"returnParameters":{"id":5281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5302,"src":"13852:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":5279,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:16","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:16"},"scope":6340,"src":"13796:213:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5329,"nodeType":"Block","src":"14360:149:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5310,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5305,"src":"14374:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5312,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":5311,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":5315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:16","memberName":"max","nodeType":"MemberAccess","src":"14382:16:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5323,"nodeType":"IfStatement","src":"14370:103:16","trueBody":{"id":5322,"nodeType":"Block","src":"14400:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:16","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5319,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5305,"src":"14456:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5317,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"14421:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5321,"nodeType":"RevertStatement","src":"14414:48:16"}]}},{"expression":{"arguments":[{"id":5326,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5305,"src":"14496:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5324,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:16","typeDescriptions":{}}},"id":5327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":5309,"id":5328,"nodeType":"Return","src":"14482:20:16"}]},"documentation":{"id":5303,"nodeType":"StructuredDocumentation","src":"14015:276:16","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5330,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:16","nodeType":"FunctionDefinition","parameters":{"id":5306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5305,"mutability":"mutable","name":"value","nameLocation":"14322:5:16","nodeType":"VariableDeclaration","scope":5330,"src":"14314:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5304,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:16"},"returnParameters":{"id":5309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5308,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5330,"src":"14352:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5307,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:16","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:16"},"scope":6340,"src":"14296:213:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5357,"nodeType":"Block","src":"14860:149:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5333,"src":"14874:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5340,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":5339,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":5343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:16","memberName":"max","nodeType":"MemberAccess","src":"14882:16:16","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5351,"nodeType":"IfStatement","src":"14870:103:16","trueBody":{"id":5350,"nodeType":"Block","src":"14900:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:16","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5333,"src":"14956:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5345,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"14921:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5349,"nodeType":"RevertStatement","src":"14914:48:16"}]}},{"expression":{"arguments":[{"id":5354,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5333,"src":"14996:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5352,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:16","typeDescriptions":{}}},"id":5355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":5337,"id":5356,"nodeType":"Return","src":"14982:20:16"}]},"documentation":{"id":5331,"nodeType":"StructuredDocumentation","src":"14515:276:16","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":5358,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:16","nodeType":"FunctionDefinition","parameters":{"id":5334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5333,"mutability":"mutable","name":"value","nameLocation":"14822:5:16","nodeType":"VariableDeclaration","scope":5358,"src":"14814:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5332,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:16"},"returnParameters":{"id":5337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5336,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5358,"src":"14852:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":5335,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:16","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:16"},"scope":6340,"src":"14796:213:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5385,"nodeType":"Block","src":"15360:149:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5366,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5361,"src":"15374:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5368,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":5367,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":5371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:16","memberName":"max","nodeType":"MemberAccess","src":"15382:16:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5379,"nodeType":"IfStatement","src":"15370:103:16","trueBody":{"id":5378,"nodeType":"Block","src":"15400:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":5374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":5375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5361,"src":"15456:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5373,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"15421:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5377,"nodeType":"RevertStatement","src":"15414:48:16"}]}},{"expression":{"arguments":[{"id":5382,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5361,"src":"15496:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5381,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5380,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:16","typeDescriptions":{}}},"id":5383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":5365,"id":5384,"nodeType":"Return","src":"15482:20:16"}]},"documentation":{"id":5359,"nodeType":"StructuredDocumentation","src":"15015:276:16","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":5386,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:16","nodeType":"FunctionDefinition","parameters":{"id":5362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5361,"mutability":"mutable","name":"value","nameLocation":"15322:5:16","nodeType":"VariableDeclaration","scope":5386,"src":"15314:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5360,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:16"},"returnParameters":{"id":5365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5364,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5386,"src":"15352:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5363,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:16"},"scope":6340,"src":"15296:213:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5413,"nodeType":"Block","src":"15860:149:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5394,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5389,"src":"15874:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5396,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":5395,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":5399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:16","memberName":"max","nodeType":"MemberAccess","src":"15882:16:16","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5407,"nodeType":"IfStatement","src":"15870:103:16","trueBody":{"id":5406,"nodeType":"Block","src":"15900:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":5402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:16","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":5403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5389,"src":"15956:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5401,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"15921:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5405,"nodeType":"RevertStatement","src":"15914:48:16"}]}},{"expression":{"arguments":[{"id":5410,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5389,"src":"15996:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5408,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:16","typeDescriptions":{}}},"id":5411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":5393,"id":5412,"nodeType":"Return","src":"15982:20:16"}]},"documentation":{"id":5387,"nodeType":"StructuredDocumentation","src":"15515:276:16","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":5414,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:16","nodeType":"FunctionDefinition","parameters":{"id":5390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5389,"mutability":"mutable","name":"value","nameLocation":"15822:5:16","nodeType":"VariableDeclaration","scope":5414,"src":"15814:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5388,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:16"},"returnParameters":{"id":5393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5392,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5414,"src":"15852:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5391,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:16","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:16"},"scope":6340,"src":"15796:213:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5441,"nodeType":"Block","src":"16360:149:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5422,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5417,"src":"16374:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5424,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":5423,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":5427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:16","memberName":"max","nodeType":"MemberAccess","src":"16382:16:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5435,"nodeType":"IfStatement","src":"16370:103:16","trueBody":{"id":5434,"nodeType":"Block","src":"16400:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":5430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":5431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5417,"src":"16456:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5429,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"16421:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5433,"nodeType":"RevertStatement","src":"16414:48:16"}]}},{"expression":{"arguments":[{"id":5438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5417,"src":"16496:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5436,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:16","typeDescriptions":{}}},"id":5439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":5421,"id":5440,"nodeType":"Return","src":"16482:20:16"}]},"documentation":{"id":5415,"nodeType":"StructuredDocumentation","src":"16015:276:16","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":5442,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:16","nodeType":"FunctionDefinition","parameters":{"id":5418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5417,"mutability":"mutable","name":"value","nameLocation":"16322:5:16","nodeType":"VariableDeclaration","scope":5442,"src":"16314:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5416,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:16"},"returnParameters":{"id":5421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5442,"src":"16352:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5419,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:16","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:16"},"scope":6340,"src":"16296:213:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5469,"nodeType":"Block","src":"16854:146:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5445,"src":"16868:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5452,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":5451,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":5455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:16","memberName":"max","nodeType":"MemberAccess","src":"16876:15:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5463,"nodeType":"IfStatement","src":"16864:101:16","trueBody":{"id":5462,"nodeType":"Block","src":"16893:72:16","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":5458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":5459,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5445,"src":"16948:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5457,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4585,"src":"16914:30:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5461,"nodeType":"RevertStatement","src":"16907:47:16"}]}},{"expression":{"arguments":[{"id":5466,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5445,"src":"16987:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5464,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:16","typeDescriptions":{}}},"id":5467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5449,"id":5468,"nodeType":"Return","src":"16974:19:16"}]},"documentation":{"id":5443,"nodeType":"StructuredDocumentation","src":"16515:272:16","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":5470,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:16","nodeType":"FunctionDefinition","parameters":{"id":5446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5445,"mutability":"mutable","name":"value","nameLocation":"16817:5:16","nodeType":"VariableDeclaration","scope":5470,"src":"16809:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5444,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:16"},"returnParameters":{"id":5449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5448,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5470,"src":"16847:5:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5447,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:16"},"scope":6340,"src":"16792:208:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5492,"nodeType":"Block","src":"17236:128:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5473,"src":"17250:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5486,"nodeType":"IfStatement","src":"17246:81:16","trueBody":{"id":5485,"nodeType":"Block","src":"17261:66:16","statements":[{"errorCall":{"arguments":[{"id":5482,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5473,"src":"17310:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5481,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4590,"src":"17282:27:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":5483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5484,"nodeType":"RevertStatement","src":"17275:41:16"}]}},{"expression":{"arguments":[{"id":5489,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5473,"src":"17351:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5487,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:16","typeDescriptions":{}}},"id":5490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5477,"id":5491,"nodeType":"Return","src":"17336:21:16"}]},"documentation":{"id":5471,"nodeType":"StructuredDocumentation","src":"17006:160:16","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":5493,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:16","nodeType":"FunctionDefinition","parameters":{"id":5474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5473,"mutability":"mutable","name":"value","nameLocation":"17197:5:16","nodeType":"VariableDeclaration","scope":5493,"src":"17190:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5472,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:16"},"returnParameters":{"id":5477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5476,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5493,"src":"17227:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5475,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:16"},"scope":6340,"src":"17171:193:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5518,"nodeType":"Block","src":"17761:150:16","statements":[{"expression":{"id":5506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5501,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5499,"src":"17771:10:16","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5504,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5496,"src":"17791:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":5502,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:16","typeDescriptions":{}}},"id":5505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:16","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":5507,"nodeType":"ExpressionStatement","src":"17771:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5508,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5499,"src":"17811:10:16","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5509,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5496,"src":"17825:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5517,"nodeType":"IfStatement","src":"17807:98:16","trueBody":{"id":5516,"nodeType":"Block","src":"17832:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:16","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5513,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5496,"src":"17888:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5511,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"17853:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5515,"nodeType":"RevertStatement","src":"17846:48:16"}]}}]},"documentation":{"id":5494,"nodeType":"StructuredDocumentation","src":"17370:312:16","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5519,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:16","nodeType":"FunctionDefinition","parameters":{"id":5497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5496,"mutability":"mutable","name":"value","nameLocation":"17712:5:16","nodeType":"VariableDeclaration","scope":5519,"src":"17705:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5495,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:16"},"returnParameters":{"id":5500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5499,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:16","nodeType":"VariableDeclaration","scope":5519,"src":"17742:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":5498,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:16","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:16"},"scope":6340,"src":"17687:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5544,"nodeType":"Block","src":"18308:150:16","statements":[{"expression":{"id":5532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5527,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5525,"src":"18318:10:16","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5530,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5522,"src":"18338:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5529,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":5528,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:16","typeDescriptions":{}}},"id":5531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:16","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":5533,"nodeType":"ExpressionStatement","src":"18318:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5534,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5525,"src":"18358:10:16","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5522,"src":"18372:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5543,"nodeType":"IfStatement","src":"18354:98:16","trueBody":{"id":5542,"nodeType":"Block","src":"18379:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:16","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5539,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5522,"src":"18435:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5537,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"18400:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5541,"nodeType":"RevertStatement","src":"18393:48:16"}]}}]},"documentation":{"id":5520,"nodeType":"StructuredDocumentation","src":"17917:312:16","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5545,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:16","nodeType":"FunctionDefinition","parameters":{"id":5523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5522,"mutability":"mutable","name":"value","nameLocation":"18259:5:16","nodeType":"VariableDeclaration","scope":5545,"src":"18252:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5521,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:16"},"returnParameters":{"id":5526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5525,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:16","nodeType":"VariableDeclaration","scope":5545,"src":"18289:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":5524,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:16","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:16"},"scope":6340,"src":"18234:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5570,"nodeType":"Block","src":"18855:150:16","statements":[{"expression":{"id":5558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5553,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5551,"src":"18865:10:16","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5556,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5548,"src":"18885:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":5554,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:16","typeDescriptions":{}}},"id":5557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:16","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":5559,"nodeType":"ExpressionStatement","src":"18865:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5560,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5551,"src":"18905:10:16","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5561,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5548,"src":"18919:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5569,"nodeType":"IfStatement","src":"18901:98:16","trueBody":{"id":5568,"nodeType":"Block","src":"18926:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:16","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5565,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5548,"src":"18982:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5563,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"18947:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5567,"nodeType":"RevertStatement","src":"18940:48:16"}]}}]},"documentation":{"id":5546,"nodeType":"StructuredDocumentation","src":"18464:312:16","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5571,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:16","nodeType":"FunctionDefinition","parameters":{"id":5549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5548,"mutability":"mutable","name":"value","nameLocation":"18806:5:16","nodeType":"VariableDeclaration","scope":5571,"src":"18799:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5547,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:16"},"returnParameters":{"id":5552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5551,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:16","nodeType":"VariableDeclaration","scope":5571,"src":"18836:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":5550,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:16","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:16"},"scope":6340,"src":"18781:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5596,"nodeType":"Block","src":"19402:150:16","statements":[{"expression":{"id":5584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5579,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5577,"src":"19412:10:16","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5574,"src":"19432:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":5580,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:16","typeDescriptions":{}}},"id":5583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:16","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":5585,"nodeType":"ExpressionStatement","src":"19412:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5586,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5577,"src":"19452:10:16","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5574,"src":"19466:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5595,"nodeType":"IfStatement","src":"19448:98:16","trueBody":{"id":5594,"nodeType":"Block","src":"19473:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:16","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5591,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5574,"src":"19529:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5589,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"19494:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5593,"nodeType":"RevertStatement","src":"19487:48:16"}]}}]},"documentation":{"id":5572,"nodeType":"StructuredDocumentation","src":"19011:312:16","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5597,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:16","nodeType":"FunctionDefinition","parameters":{"id":5575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5574,"mutability":"mutable","name":"value","nameLocation":"19353:5:16","nodeType":"VariableDeclaration","scope":5597,"src":"19346:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5573,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:16"},"returnParameters":{"id":5578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5577,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:16","nodeType":"VariableDeclaration","scope":5597,"src":"19383:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":5576,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:16","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:16"},"scope":6340,"src":"19328:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5622,"nodeType":"Block","src":"19949:150:16","statements":[{"expression":{"id":5610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5605,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5603,"src":"19959:10:16","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5600,"src":"19979:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":5606,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:16","typeDescriptions":{}}},"id":5609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:16","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":5611,"nodeType":"ExpressionStatement","src":"19959:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5612,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5603,"src":"19999:10:16","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5613,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5600,"src":"20013:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5621,"nodeType":"IfStatement","src":"19995:98:16","trueBody":{"id":5620,"nodeType":"Block","src":"20020:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:16","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5617,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5600,"src":"20076:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5615,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"20041:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5619,"nodeType":"RevertStatement","src":"20034:48:16"}]}}]},"documentation":{"id":5598,"nodeType":"StructuredDocumentation","src":"19558:312:16","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5623,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:16","nodeType":"FunctionDefinition","parameters":{"id":5601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5600,"mutability":"mutable","name":"value","nameLocation":"19900:5:16","nodeType":"VariableDeclaration","scope":5623,"src":"19893:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5599,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:16"},"returnParameters":{"id":5604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5603,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:16","nodeType":"VariableDeclaration","scope":5623,"src":"19930:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":5602,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:16","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:16"},"scope":6340,"src":"19875:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5648,"nodeType":"Block","src":"20496:150:16","statements":[{"expression":{"id":5636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5631,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"20506:10:16","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5634,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5626,"src":"20526:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":5632,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:16","typeDescriptions":{}}},"id":5635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:16","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":5637,"nodeType":"ExpressionStatement","src":"20506:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5638,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5629,"src":"20546:10:16","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5639,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5626,"src":"20560:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5647,"nodeType":"IfStatement","src":"20542:98:16","trueBody":{"id":5646,"nodeType":"Block","src":"20567:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:16","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5643,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5626,"src":"20623:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5641,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"20588:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5645,"nodeType":"RevertStatement","src":"20581:48:16"}]}}]},"documentation":{"id":5624,"nodeType":"StructuredDocumentation","src":"20105:312:16","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5649,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:16","nodeType":"FunctionDefinition","parameters":{"id":5627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5626,"mutability":"mutable","name":"value","nameLocation":"20447:5:16","nodeType":"VariableDeclaration","scope":5649,"src":"20440:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5625,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:16"},"returnParameters":{"id":5630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5629,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:16","nodeType":"VariableDeclaration","scope":5649,"src":"20477:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":5628,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:16","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:16"},"scope":6340,"src":"20422:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5674,"nodeType":"Block","src":"21043:150:16","statements":[{"expression":{"id":5662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5657,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5655,"src":"21053:10:16","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5660,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5652,"src":"21073:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":5658,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:16","typeDescriptions":{}}},"id":5661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:16","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":5663,"nodeType":"ExpressionStatement","src":"21053:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5664,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5655,"src":"21093:10:16","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5665,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5652,"src":"21107:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5673,"nodeType":"IfStatement","src":"21089:98:16","trueBody":{"id":5672,"nodeType":"Block","src":"21114:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:16","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5669,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5652,"src":"21170:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5667,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"21135:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5671,"nodeType":"RevertStatement","src":"21128:48:16"}]}}]},"documentation":{"id":5650,"nodeType":"StructuredDocumentation","src":"20652:312:16","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5675,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:16","nodeType":"FunctionDefinition","parameters":{"id":5653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5652,"mutability":"mutable","name":"value","nameLocation":"20994:5:16","nodeType":"VariableDeclaration","scope":5675,"src":"20987:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5651,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:16"},"returnParameters":{"id":5656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5655,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:16","nodeType":"VariableDeclaration","scope":5675,"src":"21024:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":5654,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:16","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:16"},"scope":6340,"src":"20969:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5700,"nodeType":"Block","src":"21590:150:16","statements":[{"expression":{"id":5688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5683,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5681,"src":"21600:10:16","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5678,"src":"21620:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":5684,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:16","typeDescriptions":{}}},"id":5687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:16","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":5689,"nodeType":"ExpressionStatement","src":"21600:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5690,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5681,"src":"21640:10:16","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5678,"src":"21654:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5699,"nodeType":"IfStatement","src":"21636:98:16","trueBody":{"id":5698,"nodeType":"Block","src":"21661:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:16","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5695,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5678,"src":"21717:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5693,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"21682:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5697,"nodeType":"RevertStatement","src":"21675:48:16"}]}}]},"documentation":{"id":5676,"nodeType":"StructuredDocumentation","src":"21199:312:16","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5701,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:16","nodeType":"FunctionDefinition","parameters":{"id":5679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5678,"mutability":"mutable","name":"value","nameLocation":"21541:5:16","nodeType":"VariableDeclaration","scope":5701,"src":"21534:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5677,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:16"},"returnParameters":{"id":5682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5681,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:16","nodeType":"VariableDeclaration","scope":5701,"src":"21571:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":5680,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:16","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:16"},"scope":6340,"src":"21516:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5726,"nodeType":"Block","src":"22137:150:16","statements":[{"expression":{"id":5714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5709,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5707,"src":"22147:10:16","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5712,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5704,"src":"22167:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":5710,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:16","typeDescriptions":{}}},"id":5713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:16","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":5715,"nodeType":"ExpressionStatement","src":"22147:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5716,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5707,"src":"22187:10:16","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5717,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5704,"src":"22201:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5725,"nodeType":"IfStatement","src":"22183:98:16","trueBody":{"id":5724,"nodeType":"Block","src":"22208:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:16","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5704,"src":"22264:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5719,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"22229:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5723,"nodeType":"RevertStatement","src":"22222:48:16"}]}}]},"documentation":{"id":5702,"nodeType":"StructuredDocumentation","src":"21746:312:16","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5727,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:16","nodeType":"FunctionDefinition","parameters":{"id":5705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5704,"mutability":"mutable","name":"value","nameLocation":"22088:5:16","nodeType":"VariableDeclaration","scope":5727,"src":"22081:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5703,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:16"},"returnParameters":{"id":5708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5707,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:16","nodeType":"VariableDeclaration","scope":5727,"src":"22118:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":5706,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:16","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:16"},"scope":6340,"src":"22063:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5752,"nodeType":"Block","src":"22684:150:16","statements":[{"expression":{"id":5740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5735,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"22694:10:16","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5738,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5730,"src":"22714:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":5736,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:16","typeDescriptions":{}}},"id":5739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:16","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":5741,"nodeType":"ExpressionStatement","src":"22694:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5742,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5733,"src":"22734:10:16","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5743,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5730,"src":"22748:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5751,"nodeType":"IfStatement","src":"22730:98:16","trueBody":{"id":5750,"nodeType":"Block","src":"22755:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:16","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5747,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5730,"src":"22811:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5745,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"22776:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5749,"nodeType":"RevertStatement","src":"22769:48:16"}]}}]},"documentation":{"id":5728,"nodeType":"StructuredDocumentation","src":"22293:312:16","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5753,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:16","nodeType":"FunctionDefinition","parameters":{"id":5731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5730,"mutability":"mutable","name":"value","nameLocation":"22635:5:16","nodeType":"VariableDeclaration","scope":5753,"src":"22628:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5729,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:16"},"returnParameters":{"id":5734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5733,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:16","nodeType":"VariableDeclaration","scope":5753,"src":"22665:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":5732,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:16","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:16"},"scope":6340,"src":"22610:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5778,"nodeType":"Block","src":"23231:150:16","statements":[{"expression":{"id":5766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5761,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5759,"src":"23241:10:16","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5764,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5756,"src":"23261:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5763,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":5762,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:16","typeDescriptions":{}}},"id":5765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:16","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":5767,"nodeType":"ExpressionStatement","src":"23241:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5768,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5759,"src":"23281:10:16","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5769,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5756,"src":"23295:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5777,"nodeType":"IfStatement","src":"23277:98:16","trueBody":{"id":5776,"nodeType":"Block","src":"23302:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:16","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5773,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5756,"src":"23358:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5771,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"23323:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5775,"nodeType":"RevertStatement","src":"23316:48:16"}]}}]},"documentation":{"id":5754,"nodeType":"StructuredDocumentation","src":"22840:312:16","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5779,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:16","nodeType":"FunctionDefinition","parameters":{"id":5757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5756,"mutability":"mutable","name":"value","nameLocation":"23182:5:16","nodeType":"VariableDeclaration","scope":5779,"src":"23175:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5755,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:16"},"returnParameters":{"id":5760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5759,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:16","nodeType":"VariableDeclaration","scope":5779,"src":"23212:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":5758,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:16","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:16"},"scope":6340,"src":"23157:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5804,"nodeType":"Block","src":"23778:150:16","statements":[{"expression":{"id":5792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5787,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5785,"src":"23788:10:16","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5790,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5782,"src":"23808:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":5788,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:16","typeDescriptions":{}}},"id":5791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:16","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":5793,"nodeType":"ExpressionStatement","src":"23788:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5794,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5785,"src":"23828:10:16","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5795,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5782,"src":"23842:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5803,"nodeType":"IfStatement","src":"23824:98:16","trueBody":{"id":5802,"nodeType":"Block","src":"23849:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:16","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5799,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5782,"src":"23905:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5797,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"23870:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5801,"nodeType":"RevertStatement","src":"23863:48:16"}]}}]},"documentation":{"id":5780,"nodeType":"StructuredDocumentation","src":"23387:312:16","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5805,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:16","nodeType":"FunctionDefinition","parameters":{"id":5783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5782,"mutability":"mutable","name":"value","nameLocation":"23729:5:16","nodeType":"VariableDeclaration","scope":5805,"src":"23722:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5781,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:16"},"returnParameters":{"id":5786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5785,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:16","nodeType":"VariableDeclaration","scope":5805,"src":"23759:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":5784,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:16","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:16"},"scope":6340,"src":"23704:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5830,"nodeType":"Block","src":"24325:150:16","statements":[{"expression":{"id":5818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5813,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5811,"src":"24335:10:16","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5816,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5808,"src":"24355:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":5814,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:16","typeDescriptions":{}}},"id":5817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:16","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":5819,"nodeType":"ExpressionStatement","src":"24335:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5820,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5811,"src":"24375:10:16","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5808,"src":"24389:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5829,"nodeType":"IfStatement","src":"24371:98:16","trueBody":{"id":5828,"nodeType":"Block","src":"24396:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:16","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5825,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5808,"src":"24452:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5823,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"24417:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5827,"nodeType":"RevertStatement","src":"24410:48:16"}]}}]},"documentation":{"id":5806,"nodeType":"StructuredDocumentation","src":"23934:312:16","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5831,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:16","nodeType":"FunctionDefinition","parameters":{"id":5809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5808,"mutability":"mutable","name":"value","nameLocation":"24276:5:16","nodeType":"VariableDeclaration","scope":5831,"src":"24269:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5807,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:16"},"returnParameters":{"id":5812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5811,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:16","nodeType":"VariableDeclaration","scope":5831,"src":"24306:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":5810,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:16","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:16"},"scope":6340,"src":"24251:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5856,"nodeType":"Block","src":"24872:150:16","statements":[{"expression":{"id":5844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5839,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"24882:10:16","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5842,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5834,"src":"24902:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":5840,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:16","typeDescriptions":{}}},"id":5843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:16","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":5845,"nodeType":"ExpressionStatement","src":"24882:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5846,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5837,"src":"24922:10:16","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5834,"src":"24936:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5855,"nodeType":"IfStatement","src":"24918:98:16","trueBody":{"id":5854,"nodeType":"Block","src":"24943:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:16","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5851,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5834,"src":"24999:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5849,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"24964:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5853,"nodeType":"RevertStatement","src":"24957:48:16"}]}}]},"documentation":{"id":5832,"nodeType":"StructuredDocumentation","src":"24481:312:16","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5857,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:16","nodeType":"FunctionDefinition","parameters":{"id":5835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5834,"mutability":"mutable","name":"value","nameLocation":"24823:5:16","nodeType":"VariableDeclaration","scope":5857,"src":"24816:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5833,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:16"},"returnParameters":{"id":5838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5837,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:16","nodeType":"VariableDeclaration","scope":5857,"src":"24853:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":5836,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:16","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:16"},"scope":6340,"src":"24798:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5882,"nodeType":"Block","src":"25419:150:16","statements":[{"expression":{"id":5870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5865,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5863,"src":"25429:10:16","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5868,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5860,"src":"25449:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":5866,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:16","typeDescriptions":{}}},"id":5869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:16","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":5871,"nodeType":"ExpressionStatement","src":"25429:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5872,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5863,"src":"25469:10:16","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5873,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5860,"src":"25483:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5881,"nodeType":"IfStatement","src":"25465:98:16","trueBody":{"id":5880,"nodeType":"Block","src":"25490:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:16","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5877,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5860,"src":"25546:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5875,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"25511:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5879,"nodeType":"RevertStatement","src":"25504:48:16"}]}}]},"documentation":{"id":5858,"nodeType":"StructuredDocumentation","src":"25028:312:16","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5883,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:16","nodeType":"FunctionDefinition","parameters":{"id":5861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5860,"mutability":"mutable","name":"value","nameLocation":"25370:5:16","nodeType":"VariableDeclaration","scope":5883,"src":"25363:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5859,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:16"},"returnParameters":{"id":5864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5863,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:16","nodeType":"VariableDeclaration","scope":5883,"src":"25400:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":5862,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:16","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:16"},"scope":6340,"src":"25345:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5908,"nodeType":"Block","src":"25966:150:16","statements":[{"expression":{"id":5896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5891,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5889,"src":"25976:10:16","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5894,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5886,"src":"25996:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":5892,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:16","typeDescriptions":{}}},"id":5895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:16","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":5897,"nodeType":"ExpressionStatement","src":"25976:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5898,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5889,"src":"26016:10:16","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5886,"src":"26030:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5907,"nodeType":"IfStatement","src":"26012:98:16","trueBody":{"id":5906,"nodeType":"Block","src":"26037:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:16","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5903,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5886,"src":"26093:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5901,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"26058:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5905,"nodeType":"RevertStatement","src":"26051:48:16"}]}}]},"documentation":{"id":5884,"nodeType":"StructuredDocumentation","src":"25575:312:16","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5909,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:16","nodeType":"FunctionDefinition","parameters":{"id":5887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5886,"mutability":"mutable","name":"value","nameLocation":"25917:5:16","nodeType":"VariableDeclaration","scope":5909,"src":"25910:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5885,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:16"},"returnParameters":{"id":5890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5889,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:16","nodeType":"VariableDeclaration","scope":5909,"src":"25947:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":5888,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:16","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:16"},"scope":6340,"src":"25892:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5934,"nodeType":"Block","src":"26513:150:16","statements":[{"expression":{"id":5922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5917,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5915,"src":"26523:10:16","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5920,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5912,"src":"26543:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":5918,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:16","typeDescriptions":{}}},"id":5921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:16","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":5923,"nodeType":"ExpressionStatement","src":"26523:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5924,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5915,"src":"26563:10:16","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5925,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5912,"src":"26577:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5933,"nodeType":"IfStatement","src":"26559:98:16","trueBody":{"id":5932,"nodeType":"Block","src":"26584:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:16","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5929,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5912,"src":"26640:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5927,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"26605:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5931,"nodeType":"RevertStatement","src":"26598:48:16"}]}}]},"documentation":{"id":5910,"nodeType":"StructuredDocumentation","src":"26122:312:16","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5935,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:16","nodeType":"FunctionDefinition","parameters":{"id":5913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5912,"mutability":"mutable","name":"value","nameLocation":"26464:5:16","nodeType":"VariableDeclaration","scope":5935,"src":"26457:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5911,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:16"},"returnParameters":{"id":5916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5915,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:16","nodeType":"VariableDeclaration","scope":5935,"src":"26494:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":5914,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:16","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:16"},"scope":6340,"src":"26439:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5960,"nodeType":"Block","src":"27060:150:16","statements":[{"expression":{"id":5948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5943,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5941,"src":"27070:10:16","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5946,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"27090:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5945,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":5944,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:16","typeDescriptions":{}}},"id":5947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:16","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":5949,"nodeType":"ExpressionStatement","src":"27070:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5950,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5941,"src":"27110:10:16","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5951,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"27124:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5959,"nodeType":"IfStatement","src":"27106:98:16","trueBody":{"id":5958,"nodeType":"Block","src":"27131:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:16","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5955,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5938,"src":"27187:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5953,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"27152:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5957,"nodeType":"RevertStatement","src":"27145:48:16"}]}}]},"documentation":{"id":5936,"nodeType":"StructuredDocumentation","src":"26669:312:16","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5961,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:16","nodeType":"FunctionDefinition","parameters":{"id":5939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5938,"mutability":"mutable","name":"value","nameLocation":"27011:5:16","nodeType":"VariableDeclaration","scope":5961,"src":"27004:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5937,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:16"},"returnParameters":{"id":5942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5941,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:16","nodeType":"VariableDeclaration","scope":5961,"src":"27041:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":5940,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:16","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:16"},"scope":6340,"src":"26986:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5986,"nodeType":"Block","src":"27607:150:16","statements":[{"expression":{"id":5974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5969,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5967,"src":"27617:10:16","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5972,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5964,"src":"27637:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5971,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":5970,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:16","typeDescriptions":{}}},"id":5973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:16","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":5975,"nodeType":"ExpressionStatement","src":"27617:26:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5976,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5967,"src":"27657:10:16","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5977,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5964,"src":"27671:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5985,"nodeType":"IfStatement","src":"27653:98:16","trueBody":{"id":5984,"nodeType":"Block","src":"27678:73:16","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:16","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5981,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5964,"src":"27734:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5979,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"27699:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5983,"nodeType":"RevertStatement","src":"27692:48:16"}]}}]},"documentation":{"id":5962,"nodeType":"StructuredDocumentation","src":"27216:312:16","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5987,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:16","nodeType":"FunctionDefinition","parameters":{"id":5965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5964,"mutability":"mutable","name":"value","nameLocation":"27558:5:16","nodeType":"VariableDeclaration","scope":5987,"src":"27551:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5963,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:16"},"returnParameters":{"id":5968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5967,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:16","nodeType":"VariableDeclaration","scope":5987,"src":"27588:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":5966,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:16","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:16"},"scope":6340,"src":"27533:224:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6012,"nodeType":"Block","src":"28147:148:16","statements":[{"expression":{"id":6000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5995,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5993,"src":"28157:10:16","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5998,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"28176:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":5996,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:16","typeDescriptions":{}}},"id":5999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:16","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":6001,"nodeType":"ExpressionStatement","src":"28157:25:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6002,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5993,"src":"28196:10:16","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6003,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"28210:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6011,"nodeType":"IfStatement","src":"28192:97:16","trueBody":{"id":6010,"nodeType":"Block","src":"28217:72:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:16","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6007,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5990,"src":"28272:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6005,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"28238:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6009,"nodeType":"RevertStatement","src":"28231:47:16"}]}}]},"documentation":{"id":5988,"nodeType":"StructuredDocumentation","src":"27763:307:16","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6013,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:16","nodeType":"FunctionDefinition","parameters":{"id":5991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5990,"mutability":"mutable","name":"value","nameLocation":"28099:5:16","nodeType":"VariableDeclaration","scope":6013,"src":"28092:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5989,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:16"},"returnParameters":{"id":5994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5993,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:16","nodeType":"VariableDeclaration","scope":6013,"src":"28129:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":5992,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:16","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:16"},"scope":6340,"src":"28075:220:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6038,"nodeType":"Block","src":"28685:148:16","statements":[{"expression":{"id":6026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6021,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6019,"src":"28695:10:16","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6024,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6016,"src":"28714:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":6022,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:16","typeDescriptions":{}}},"id":6025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:16","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":6027,"nodeType":"ExpressionStatement","src":"28695:25:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6028,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6019,"src":"28734:10:16","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6029,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6016,"src":"28748:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6037,"nodeType":"IfStatement","src":"28730:97:16","trueBody":{"id":6036,"nodeType":"Block","src":"28755:72:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:16","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6033,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6016,"src":"28810:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6031,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"28776:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6035,"nodeType":"RevertStatement","src":"28769:47:16"}]}}]},"documentation":{"id":6014,"nodeType":"StructuredDocumentation","src":"28301:307:16","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6039,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:16","nodeType":"FunctionDefinition","parameters":{"id":6017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6016,"mutability":"mutable","name":"value","nameLocation":"28637:5:16","nodeType":"VariableDeclaration","scope":6039,"src":"28630:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6015,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:16"},"returnParameters":{"id":6020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6019,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:16","nodeType":"VariableDeclaration","scope":6039,"src":"28667:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":6018,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:16","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:16"},"scope":6340,"src":"28613:220:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6064,"nodeType":"Block","src":"29223:148:16","statements":[{"expression":{"id":6052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6047,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6045,"src":"29233:10:16","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6050,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6042,"src":"29252:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":6048,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:16","typeDescriptions":{}}},"id":6051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:16","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":6053,"nodeType":"ExpressionStatement","src":"29233:25:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6054,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6045,"src":"29272:10:16","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6042,"src":"29286:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6063,"nodeType":"IfStatement","src":"29268:97:16","trueBody":{"id":6062,"nodeType":"Block","src":"29293:72:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:16","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6059,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6042,"src":"29348:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6057,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"29314:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6061,"nodeType":"RevertStatement","src":"29307:47:16"}]}}]},"documentation":{"id":6040,"nodeType":"StructuredDocumentation","src":"28839:307:16","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6065,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:16","nodeType":"FunctionDefinition","parameters":{"id":6043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6042,"mutability":"mutable","name":"value","nameLocation":"29175:5:16","nodeType":"VariableDeclaration","scope":6065,"src":"29168:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6041,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:16"},"returnParameters":{"id":6046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6045,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:16","nodeType":"VariableDeclaration","scope":6065,"src":"29205:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":6044,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:16","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:16"},"scope":6340,"src":"29151:220:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6090,"nodeType":"Block","src":"29761:148:16","statements":[{"expression":{"id":6078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6073,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6071,"src":"29771:10:16","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6076,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6068,"src":"29790:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":6074,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:16","typeDescriptions":{}}},"id":6077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:16","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":6079,"nodeType":"ExpressionStatement","src":"29771:25:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6080,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6071,"src":"29810:10:16","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6081,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6068,"src":"29824:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6089,"nodeType":"IfStatement","src":"29806:97:16","trueBody":{"id":6088,"nodeType":"Block","src":"29831:72:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:16","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6085,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6068,"src":"29886:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6083,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"29852:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6087,"nodeType":"RevertStatement","src":"29845:47:16"}]}}]},"documentation":{"id":6066,"nodeType":"StructuredDocumentation","src":"29377:307:16","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6091,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:16","nodeType":"FunctionDefinition","parameters":{"id":6069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6068,"mutability":"mutable","name":"value","nameLocation":"29713:5:16","nodeType":"VariableDeclaration","scope":6091,"src":"29706:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6067,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:16"},"returnParameters":{"id":6072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6071,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:16","nodeType":"VariableDeclaration","scope":6091,"src":"29743:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":6070,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:16","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:16"},"scope":6340,"src":"29689:220:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6116,"nodeType":"Block","src":"30299:148:16","statements":[{"expression":{"id":6104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6099,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"30309:10:16","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6102,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6094,"src":"30328:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":6100,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:16","typeDescriptions":{}}},"id":6103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:16","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":6105,"nodeType":"ExpressionStatement","src":"30309:25:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6106,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"30348:10:16","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6107,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6094,"src":"30362:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6115,"nodeType":"IfStatement","src":"30344:97:16","trueBody":{"id":6114,"nodeType":"Block","src":"30369:72:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:16","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6111,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6094,"src":"30424:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6109,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"30390:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6113,"nodeType":"RevertStatement","src":"30383:47:16"}]}}]},"documentation":{"id":6092,"nodeType":"StructuredDocumentation","src":"29915:307:16","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6117,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:16","nodeType":"FunctionDefinition","parameters":{"id":6095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6094,"mutability":"mutable","name":"value","nameLocation":"30251:5:16","nodeType":"VariableDeclaration","scope":6117,"src":"30244:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6093,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:16"},"returnParameters":{"id":6098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6097,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:16","nodeType":"VariableDeclaration","scope":6117,"src":"30281:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6096,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:16","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:16"},"scope":6340,"src":"30227:220:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6142,"nodeType":"Block","src":"30837:148:16","statements":[{"expression":{"id":6130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6125,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6123,"src":"30847:10:16","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6128,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6120,"src":"30866:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6127,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":6126,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:16","typeDescriptions":{}}},"id":6129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:16","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":6131,"nodeType":"ExpressionStatement","src":"30847:25:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6132,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6123,"src":"30886:10:16","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6133,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6120,"src":"30900:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6141,"nodeType":"IfStatement","src":"30882:97:16","trueBody":{"id":6140,"nodeType":"Block","src":"30907:72:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:16","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6137,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6120,"src":"30962:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6135,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"30928:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6139,"nodeType":"RevertStatement","src":"30921:47:16"}]}}]},"documentation":{"id":6118,"nodeType":"StructuredDocumentation","src":"30453:307:16","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6143,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:16","nodeType":"FunctionDefinition","parameters":{"id":6121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6120,"mutability":"mutable","name":"value","nameLocation":"30789:5:16","nodeType":"VariableDeclaration","scope":6143,"src":"30782:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6119,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:16"},"returnParameters":{"id":6124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6123,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:16","nodeType":"VariableDeclaration","scope":6143,"src":"30819:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":6122,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:16","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:16"},"scope":6340,"src":"30765:220:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6168,"nodeType":"Block","src":"31375:148:16","statements":[{"expression":{"id":6156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6151,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6149,"src":"31385:10:16","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6154,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6146,"src":"31404:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":6152,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:16","typeDescriptions":{}}},"id":6155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:16","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":6157,"nodeType":"ExpressionStatement","src":"31385:25:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6158,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6149,"src":"31424:10:16","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6159,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6146,"src":"31438:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6167,"nodeType":"IfStatement","src":"31420:97:16","trueBody":{"id":6166,"nodeType":"Block","src":"31445:72:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:16","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6163,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6146,"src":"31500:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6161,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"31466:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6165,"nodeType":"RevertStatement","src":"31459:47:16"}]}}]},"documentation":{"id":6144,"nodeType":"StructuredDocumentation","src":"30991:307:16","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6169,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:16","nodeType":"FunctionDefinition","parameters":{"id":6147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6146,"mutability":"mutable","name":"value","nameLocation":"31327:5:16","nodeType":"VariableDeclaration","scope":6169,"src":"31320:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6145,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:16"},"returnParameters":{"id":6150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6149,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:16","nodeType":"VariableDeclaration","scope":6169,"src":"31357:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":6148,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:16","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:16"},"scope":6340,"src":"31303:220:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6194,"nodeType":"Block","src":"31913:148:16","statements":[{"expression":{"id":6182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6177,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6175,"src":"31923:10:16","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6180,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6172,"src":"31942:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":6178,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:16","typeDescriptions":{}}},"id":6181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:16","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":6183,"nodeType":"ExpressionStatement","src":"31923:25:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6184,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6175,"src":"31962:10:16","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6185,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6172,"src":"31976:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6193,"nodeType":"IfStatement","src":"31958:97:16","trueBody":{"id":6192,"nodeType":"Block","src":"31983:72:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:16","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6189,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6172,"src":"32038:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6187,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"32004:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6191,"nodeType":"RevertStatement","src":"31997:47:16"}]}}]},"documentation":{"id":6170,"nodeType":"StructuredDocumentation","src":"31529:307:16","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6195,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:16","nodeType":"FunctionDefinition","parameters":{"id":6173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6172,"mutability":"mutable","name":"value","nameLocation":"31865:5:16","nodeType":"VariableDeclaration","scope":6195,"src":"31858:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6171,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:16"},"returnParameters":{"id":6176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6175,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:16","nodeType":"VariableDeclaration","scope":6195,"src":"31895:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":6174,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:16","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:16"},"scope":6340,"src":"31841:220:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6220,"nodeType":"Block","src":"32451:148:16","statements":[{"expression":{"id":6208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6203,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6201,"src":"32461:10:16","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6206,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6198,"src":"32480:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":6204,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:16","typeDescriptions":{}}},"id":6207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:16","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":6209,"nodeType":"ExpressionStatement","src":"32461:25:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6210,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6201,"src":"32500:10:16","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6211,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6198,"src":"32514:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6219,"nodeType":"IfStatement","src":"32496:97:16","trueBody":{"id":6218,"nodeType":"Block","src":"32521:72:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6215,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6198,"src":"32576:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6213,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"32542:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6217,"nodeType":"RevertStatement","src":"32535:47:16"}]}}]},"documentation":{"id":6196,"nodeType":"StructuredDocumentation","src":"32067:307:16","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6221,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:16","nodeType":"FunctionDefinition","parameters":{"id":6199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6198,"mutability":"mutable","name":"value","nameLocation":"32403:5:16","nodeType":"VariableDeclaration","scope":6221,"src":"32396:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6197,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:16"},"returnParameters":{"id":6202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6201,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:16","nodeType":"VariableDeclaration","scope":6221,"src":"32433:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":6200,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:16","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:16"},"scope":6340,"src":"32379:220:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6246,"nodeType":"Block","src":"32989:148:16","statements":[{"expression":{"id":6234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6229,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6227,"src":"32999:10:16","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6232,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6224,"src":"33018:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6230,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:16","typeDescriptions":{}}},"id":6233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:16","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":6235,"nodeType":"ExpressionStatement","src":"32999:25:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6236,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6227,"src":"33038:10:16","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6237,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6224,"src":"33052:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6245,"nodeType":"IfStatement","src":"33034:97:16","trueBody":{"id":6244,"nodeType":"Block","src":"33059:72:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:16","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6241,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6224,"src":"33114:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6239,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"33080:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6243,"nodeType":"RevertStatement","src":"33073:47:16"}]}}]},"documentation":{"id":6222,"nodeType":"StructuredDocumentation","src":"32605:307:16","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6247,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:16","nodeType":"FunctionDefinition","parameters":{"id":6225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6224,"mutability":"mutable","name":"value","nameLocation":"32941:5:16","nodeType":"VariableDeclaration","scope":6247,"src":"32934:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6223,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:16"},"returnParameters":{"id":6228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6227,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:16","nodeType":"VariableDeclaration","scope":6247,"src":"32971:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6226,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:16","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:16"},"scope":6340,"src":"32917:220:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6272,"nodeType":"Block","src":"33527:148:16","statements":[{"expression":{"id":6260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6255,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6253,"src":"33537:10:16","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6258,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6250,"src":"33556:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":6256,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:16","typeDescriptions":{}}},"id":6259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:16","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":6261,"nodeType":"ExpressionStatement","src":"33537:25:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6262,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6253,"src":"33576:10:16","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6263,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6250,"src":"33590:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6271,"nodeType":"IfStatement","src":"33572:97:16","trueBody":{"id":6270,"nodeType":"Block","src":"33597:72:16","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:16","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6267,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6250,"src":"33652:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6265,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"33618:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6269,"nodeType":"RevertStatement","src":"33611:47:16"}]}}]},"documentation":{"id":6248,"nodeType":"StructuredDocumentation","src":"33143:307:16","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6273,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:16","nodeType":"FunctionDefinition","parameters":{"id":6251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6250,"mutability":"mutable","name":"value","nameLocation":"33479:5:16","nodeType":"VariableDeclaration","scope":6273,"src":"33472:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6249,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:16"},"returnParameters":{"id":6254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6253,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:16","nodeType":"VariableDeclaration","scope":6273,"src":"33509:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6252,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:16","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:16"},"scope":6340,"src":"33455:220:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6298,"nodeType":"Block","src":"34058:146:16","statements":[{"expression":{"id":6286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6281,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6279,"src":"34068:10:16","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6284,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6276,"src":"34086:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":6282,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:16","typeDescriptions":{}}},"id":6285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:16","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":6287,"nodeType":"ExpressionStatement","src":"34068:24:16"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6288,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6279,"src":"34106:10:16","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6289,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6276,"src":"34120:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6297,"nodeType":"IfStatement","src":"34102:96:16","trueBody":{"id":6296,"nodeType":"Block","src":"34127:71:16","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:16","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6293,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6276,"src":"34181:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6291,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"34148:29:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6295,"nodeType":"RevertStatement","src":"34141:46:16"}]}}]},"documentation":{"id":6274,"nodeType":"StructuredDocumentation","src":"33681:302:16","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6299,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:16","nodeType":"FunctionDefinition","parameters":{"id":6277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6276,"mutability":"mutable","name":"value","nameLocation":"34011:5:16","nodeType":"VariableDeclaration","scope":6299,"src":"34004:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6275,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:16"},"returnParameters":{"id":6280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6279,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:16","nodeType":"VariableDeclaration","scope":6299,"src":"34041:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":6278,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:16","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:16"},"scope":6340,"src":"33988:216:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6328,"nodeType":"Block","src":"34444:250:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6302,"src":"34557:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":6312,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6311,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:16","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":6310,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:16","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":6314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:16","memberName":"max","nodeType":"MemberAccess","src":"34573:16:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6309,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6308,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:16","typeDescriptions":{}}},"id":6315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6322,"nodeType":"IfStatement","src":"34553:105:16","trueBody":{"id":6321,"nodeType":"Block","src":"34592:66:16","statements":[{"errorCall":{"arguments":[{"id":6318,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6302,"src":"34641:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6317,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4602,"src":"34613:27:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6320,"nodeType":"RevertStatement","src":"34606:41:16"}]}},{"expression":{"arguments":[{"id":6325,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6302,"src":"34681:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6323,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:16","typeDescriptions":{}}},"id":6326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6306,"id":6327,"nodeType":"Return","src":"34667:20:16"}]},"documentation":{"id":6300,"nodeType":"StructuredDocumentation","src":"34210:165:16","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":6329,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:16","nodeType":"FunctionDefinition","parameters":{"id":6303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6302,"mutability":"mutable","name":"value","nameLocation":"34406:5:16","nodeType":"VariableDeclaration","scope":6329,"src":"34398:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6301,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:16"},"returnParameters":{"id":6306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6305,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6329,"src":"34436:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6304,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:16"},"scope":6340,"src":"34380:314:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6338,"nodeType":"Block","src":"34853:87:16","statements":[{"AST":{"nodeType":"YulBlock","src":"34888:46:16","statements":[{"nodeType":"YulAssignment","src":"34902:22:16","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"34921:1:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34914:6:16"},"nodeType":"YulFunctionCall","src":"34914:9:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34907:6:16"},"nodeType":"YulFunctionCall","src":"34907:17:16"},"variableNames":[{"name":"u","nodeType":"YulIdentifier","src":"34902:1:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6332,"isOffset":false,"isSlot":false,"src":"34921:1:16","valueSize":1},{"declaration":6335,"isOffset":false,"isSlot":false,"src":"34902:1:16","valueSize":1}],"flags":["memory-safe"],"id":6337,"nodeType":"InlineAssembly","src":"34863:71:16"}]},"documentation":{"id":6330,"nodeType":"StructuredDocumentation","src":"34700:90:16","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":6339,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:16","nodeType":"FunctionDefinition","parameters":{"id":6333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6332,"mutability":"mutable","name":"b","nameLocation":"34816:1:16","nodeType":"VariableDeclaration","scope":6339,"src":"34811:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6331,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:16"},"returnParameters":{"id":6336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6335,"mutability":"mutable","name":"u","nameLocation":"34850:1:16","nodeType":"VariableDeclaration","scope":6339,"src":"34842:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6334,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:16"},"scope":6340,"src":"34795:145:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6341,"src":"769:34173:16","usedErrors":[4585,4590,4597,4602],"usedEvents":[]}],"src":"192:34751:16"},"id":16},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[6340],"SignedMath":[6484]},"id":6485,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6342,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:17"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":6344,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6485,"sourceUnit":6341,"src":"135:40:17","symbolAliases":[{"foreign":{"id":6343,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6340,"src":"143:8:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":6345,"nodeType":"StructuredDocumentation","src":"177:80:17","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6484,"linearizedBaseContracts":[6484],"name":"SignedMath","nameLocation":"266:10:17","nodeType":"ContractDefinition","nodes":[{"body":{"id":6374,"nodeType":"Block","src":"746:215:17","statements":[{"id":6373,"nodeType":"UncheckedBlock","src":"756:199:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6357,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6352,"src":"894:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6358,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6350,"src":"900:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6359,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6352,"src":"904:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6361,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":6366,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6348,"src":"932:9:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6364,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6340,"src":"916:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6340_$","typeString":"type(library SafeCast)"}},"id":6365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:17","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6339,"src":"916:15:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6363,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6362,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:17","typeDescriptions":{}}},"id":6368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6370,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6356,"id":6372,"nodeType":"Return","src":"887:57:17"}]}]},"documentation":{"id":6346,"nodeType":"StructuredDocumentation","src":"283:374:17","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":6375,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:17","nodeType":"FunctionDefinition","parameters":{"id":6353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6348,"mutability":"mutable","name":"condition","nameLocation":"684:9:17","nodeType":"VariableDeclaration","scope":6375,"src":"679:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6347,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6350,"mutability":"mutable","name":"a","nameLocation":"702:1:17","nodeType":"VariableDeclaration","scope":6375,"src":"695:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6349,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6352,"mutability":"mutable","name":"b","nameLocation":"712:1:17","nodeType":"VariableDeclaration","scope":6375,"src":"705:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6351,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:17"},"returnParameters":{"id":6356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6355,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6375,"src":"738:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6354,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:17"},"scope":6484,"src":"662:299:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6393,"nodeType":"Block","src":"1102:44:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6386,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6378,"src":"1127:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6387,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6380,"src":"1131:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6389,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6378,"src":"1134:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6390,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6380,"src":"1137:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6385,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6375,"src":"1119:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6384,"id":6392,"nodeType":"Return","src":"1112:27:17"}]},"documentation":{"id":6376,"nodeType":"StructuredDocumentation","src":"967:66:17","text":" @dev Returns the largest of two signed numbers."},"id":6394,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:17","nodeType":"FunctionDefinition","parameters":{"id":6381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6378,"mutability":"mutable","name":"a","nameLocation":"1058:1:17","nodeType":"VariableDeclaration","scope":6394,"src":"1051:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6377,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6380,"mutability":"mutable","name":"b","nameLocation":"1068:1:17","nodeType":"VariableDeclaration","scope":6394,"src":"1061:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6379,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:17"},"returnParameters":{"id":6384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6383,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6394,"src":"1094:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6382,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:17"},"scope":6484,"src":"1038:108:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6412,"nodeType":"Block","src":"1288:44:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6405,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6397,"src":"1313:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6406,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6399,"src":"1317:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6408,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6397,"src":"1320:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6409,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6399,"src":"1323:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6404,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6375,"src":"1305:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6403,"id":6411,"nodeType":"Return","src":"1298:27:17"}]},"documentation":{"id":6395,"nodeType":"StructuredDocumentation","src":"1152:67:17","text":" @dev Returns the smallest of two signed numbers."},"id":6413,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:17","nodeType":"FunctionDefinition","parameters":{"id":6400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6397,"mutability":"mutable","name":"a","nameLocation":"1244:1:17","nodeType":"VariableDeclaration","scope":6413,"src":"1237:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6396,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6399,"mutability":"mutable","name":"b","nameLocation":"1254:1:17","nodeType":"VariableDeclaration","scope":6413,"src":"1247:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6398,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:17"},"returnParameters":{"id":6403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6402,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6413,"src":"1280:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6401,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:17"},"scope":6484,"src":"1224:108:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6456,"nodeType":"Block","src":"1537:162:17","statements":[{"assignments":[6424],"declarations":[{"constant":false,"id":6424,"mutability":"mutable","name":"x","nameLocation":"1606:1:17","nodeType":"VariableDeclaration","scope":6456,"src":"1599:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6423,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6437,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6425,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"1611:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6426,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6418,"src":"1615:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6428,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6429,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"1622:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6430,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6418,"src":"1626:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6432,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6435,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:17"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6438,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6424,"src":"1651:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6443,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6424,"src":"1671:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6441,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:17","typeDescriptions":{}}},"id":6444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:17","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6439,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:17","typeDescriptions":{}}},"id":6447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6448,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6416,"src":"1685:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6449,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6418,"src":"1689:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6451,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6453,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6422,"id":6455,"nodeType":"Return","src":"1644:48:17"}]},"documentation":{"id":6414,"nodeType":"StructuredDocumentation","src":"1338:126:17","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":6457,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:17","nodeType":"FunctionDefinition","parameters":{"id":6419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6416,"mutability":"mutable","name":"a","nameLocation":"1493:1:17","nodeType":"VariableDeclaration","scope":6457,"src":"1486:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6415,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6418,"mutability":"mutable","name":"b","nameLocation":"1503:1:17","nodeType":"VariableDeclaration","scope":6457,"src":"1496:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6417,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:17"},"returnParameters":{"id":6422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6421,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6457,"src":"1529:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6420,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:17"},"scope":6484,"src":"1469:230:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6482,"nodeType":"Block","src":"1843:767:17","statements":[{"id":6481,"nodeType":"UncheckedBlock","src":"1853:751:17","statements":[{"assignments":[6466],"declarations":[{"constant":false,"id":6466,"mutability":"mutable","name":"mask","nameLocation":"2424:4:17","nodeType":"VariableDeclaration","scope":6481,"src":"2417:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6465,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6470,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6467,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6460,"src":"2431:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:17","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6473,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6460,"src":"2576:1:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6474,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6466,"src":"2580:4:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6476,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6477,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6466,"src":"2588:4:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6471,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:17","typeDescriptions":{}}},"id":6479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6464,"id":6480,"nodeType":"Return","src":"2560:33:17"}]}]},"documentation":{"id":6458,"nodeType":"StructuredDocumentation","src":"1705:78:17","text":" @dev Returns the absolute unsigned value of a signed value."},"id":6483,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:17","nodeType":"FunctionDefinition","parameters":{"id":6461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6460,"mutability":"mutable","name":"n","nameLocation":"1808:1:17","nodeType":"VariableDeclaration","scope":6483,"src":"1801:8:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6459,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:17"},"returnParameters":{"id":6464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6463,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6483,"src":"1834:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6462,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:17"},"scope":6484,"src":"1788:822:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6485,"src":"258:2354:17","usedErrors":[],"usedEvents":[]}],"src":"109:2504:17"},"id":17},"contracts/Marketplace.sol":{"ast":{"absolutePath":"contracts/Marketplace.sol","exportedSymbols":{"Context":[417],"ECDSA":[2629],"EIP712":[2856],"IERC165":[2954],"IERC20":[270],"IERC2981":[167],"IERC5267":[192],"IERC721":[387],"Marketplace":[7153],"MessageHashUtils":[2942],"Ownable":[147],"ReentrancyGuard":[538],"ShortString":[544],"ShortStrings":[755]},"id":7154,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6486,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:18"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721.sol","id":6487,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7154,"sourceUnit":388,"src":"58:58:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":6488,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7154,"sourceUnit":271,"src":"117:56:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC2981.sol","file":"@openzeppelin/contracts/interfaces/IERC2981.sol","id":6489,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7154,"sourceUnit":168,"src":"174:57:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":6490,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7154,"sourceUnit":539,"src":"232:59:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":6491,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7154,"sourceUnit":148,"src":"292:52:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","id":6492,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7154,"sourceUnit":2857,"src":"345:63:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":6493,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7154,"sourceUnit":2630,"src":"409:62:18","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6495,"name":"Ownable","nameLocations":["782:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"782:7:18"},"id":6496,"nodeType":"InheritanceSpecifier","src":"782:7:18"},{"baseName":{"id":6497,"name":"ReentrancyGuard","nameLocations":["791:15:18"],"nodeType":"IdentifierPath","referencedDeclaration":538,"src":"791:15:18"},"id":6498,"nodeType":"InheritanceSpecifier","src":"791:15:18"},{"baseName":{"id":6499,"name":"EIP712","nameLocations":["808:6:18"],"nodeType":"IdentifierPath","referencedDeclaration":2856,"src":"808:6:18"},"id":6500,"nodeType":"InheritanceSpecifier","src":"808:6:18"}],"canonicalName":"Marketplace","contractDependencies":[],"contractKind":"contract","documentation":{"id":6494,"nodeType":"StructuredDocumentation","src":"473:284:18","text":" @title 一个基于链下签名订单簿的去中心化 NFT 市场\n @notice 该合约不存储挂单或报价状态，只负责验证签名并执行原子交换。\n @dev 所有订单在链下创建和签名，只有在成交时才由其中一方提交到链上执行。"},"fullyImplemented":true,"id":7153,"linearizedBaseContracts":[7153,2856,192,538,147,417],"name":"Marketplace","nameLocation":"767:11:18","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Marketplace.Order","id":6517,"members":[{"constant":false,"id":6502,"mutability":"mutable","name":"seller","nameLocation":"948:6:18","nodeType":"VariableDeclaration","scope":6517,"src":"940:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6501,"name":"address","nodeType":"ElementaryTypeName","src":"940:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6504,"mutability":"mutable","name":"buyer","nameLocation":"996:5:18","nodeType":"VariableDeclaration","scope":6517,"src":"988:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6503,"name":"address","nodeType":"ElementaryTypeName","src":"988:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6506,"mutability":"mutable","name":"nftAddress","nameLocation":"1109:10:18","nodeType":"VariableDeclaration","scope":6517,"src":"1101:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6505,"name":"address","nodeType":"ElementaryTypeName","src":"1101:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6508,"mutability":"mutable","name":"tokenId","nameLocation":"1161:7:18","nodeType":"VariableDeclaration","scope":6517,"src":"1153:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6507,"name":"uint256","nodeType":"ElementaryTypeName","src":"1153:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6510,"mutability":"mutable","name":"currency","nameLocation":"1209:8:18","nodeType":"VariableDeclaration","scope":6517,"src":"1201:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6509,"name":"address","nodeType":"ElementaryTypeName","src":"1201:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6512,"mutability":"mutable","name":"price","nameLocation":"1287:5:18","nodeType":"VariableDeclaration","scope":6517,"src":"1279:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6511,"name":"uint256","nodeType":"ElementaryTypeName","src":"1279:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6514,"mutability":"mutable","name":"nonce","nameLocation":"1360:5:18","nodeType":"VariableDeclaration","scope":6517,"src":"1352:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6513,"name":"uint256","nodeType":"ElementaryTypeName","src":"1352:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6516,"mutability":"mutable","name":"deadline","nameLocation":"1453:8:18","nodeType":"VariableDeclaration","scope":6517,"src":"1445:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6515,"name":"uint256","nodeType":"ElementaryTypeName","src":"1445:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Order","nameLocation":"924:5:18","nodeType":"StructDefinition","scope":7153,"src":"917:600:18","visibility":"public"},{"constant":false,"functionSelector":"eb13554f","id":6519,"mutability":"mutable","name":"platformFeeRecipient","nameLocation":"1566:20:18","nodeType":"VariableDeclaration","scope":7153,"src":"1551:35:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6518,"name":"address","nodeType":"ElementaryTypeName","src":"1551:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"8c639a85","id":6521,"mutability":"mutable","name":"platformFeePercent","nameLocation":"1607:18:18","nodeType":"VariableDeclaration","scope":7153,"src":"1592:33:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6520,"name":"uint256","nodeType":"ElementaryTypeName","src":"1592:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"2f7801f4","id":6525,"mutability":"mutable","name":"userNonces","nameLocation":"1784:10:18","nodeType":"VariableDeclaration","scope":7153,"src":"1749:45:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":6524,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6522,"name":"address","nodeType":"ElementaryTypeName","src":"1757:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1749:27:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6523,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"2dff692d","id":6529,"mutability":"mutable","name":"orderStatus","nameLocation":"1906:11:18","nodeType":"VariableDeclaration","scope":7153,"src":"1874:43:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"typeName":{"id":6528,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6526,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1882:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1874:24:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6527,"name":"bool","nodeType":"ElementaryTypeName","src":"1893:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"ae16a7b9f34eb013dde3e7e431986599ff512137255efcd247d5528a550deee7","id":6543,"name":"OrderFulfilled","nameLocation":"1952:14:18","nodeType":"EventDefinition","parameters":{"id":6542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6531,"indexed":true,"mutability":"mutable","name":"orderHash","nameLocation":"1983:9:18","nodeType":"VariableDeclaration","scope":6543,"src":"1967:25:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6530,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1967:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6533,"indexed":true,"mutability":"mutable","name":"seller","nameLocation":"2010:6:18","nodeType":"VariableDeclaration","scope":6543,"src":"1994:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6532,"name":"address","nodeType":"ElementaryTypeName","src":"1994:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6535,"indexed":true,"mutability":"mutable","name":"buyer","nameLocation":"2034:5:18","nodeType":"VariableDeclaration","scope":6543,"src":"2018:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6534,"name":"address","nodeType":"ElementaryTypeName","src":"2018:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6537,"indexed":false,"mutability":"mutable","name":"nftAddress","nameLocation":"2049:10:18","nodeType":"VariableDeclaration","scope":6543,"src":"2041:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6536,"name":"address","nodeType":"ElementaryTypeName","src":"2041:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6539,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"2069:7:18","nodeType":"VariableDeclaration","scope":6543,"src":"2061:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6538,"name":"uint256","nodeType":"ElementaryTypeName","src":"2061:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6541,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"2086:5:18","nodeType":"VariableDeclaration","scope":6543,"src":"2078:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6540,"name":"uint256","nodeType":"ElementaryTypeName","src":"2078:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1966:126:18"},"src":"1946:147:18"},{"anonymous":false,"eventSelector":"1989da6fac61abd1ab6bc85f17f3f4db680fad48c4a96fd3841977f8cfe9eb0e","id":6553,"name":"OrderCancelled","nameLocation":"2104:14:18","nodeType":"EventDefinition","parameters":{"id":6552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6545,"indexed":true,"mutability":"mutable","name":"orderHash","nameLocation":"2135:9:18","nodeType":"VariableDeclaration","scope":6553,"src":"2119:25:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6544,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2119:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6547,"indexed":true,"mutability":"mutable","name":"nftAddress","nameLocation":"2162:10:18","nodeType":"VariableDeclaration","scope":6553,"src":"2146:26:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6546,"name":"address","nodeType":"ElementaryTypeName","src":"2146:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6549,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"2190:7:18","nodeType":"VariableDeclaration","scope":6553,"src":"2174:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6548,"name":"uint256","nodeType":"ElementaryTypeName","src":"2174:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6551,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"2207:4:18","nodeType":"VariableDeclaration","scope":6553,"src":"2199:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6550,"name":"address","nodeType":"ElementaryTypeName","src":"2199:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2118:94:18"},"src":"2098:115:18"},{"anonymous":false,"eventSelector":"f4b9cde47c67b2b563d8b95f018afcffff71d3f8c847d36a89beb50733d6c9df","id":6559,"name":"PlatformFeePercentUpdated","nameLocation":"2224:25:18","nodeType":"EventDefinition","parameters":{"id":6558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6555,"indexed":false,"mutability":"mutable","name":"oldFeePercent","nameLocation":"2258:13:18","nodeType":"VariableDeclaration","scope":6559,"src":"2250:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6554,"name":"uint256","nodeType":"ElementaryTypeName","src":"2250:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6557,"indexed":false,"mutability":"mutable","name":"newFeePercent","nameLocation":"2281:13:18","nodeType":"VariableDeclaration","scope":6559,"src":"2273:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6556,"name":"uint256","nodeType":"ElementaryTypeName","src":"2273:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2249:46:18"},"src":"2218:78:18"},{"anonymous":false,"eventSelector":"af04973bb8004e313cfd09017b963bee1e6f6ffb9be88c07a0c5ce5fafe93403","id":6565,"name":"PlatformFeeRecipientUpdated","nameLocation":"2307:27:18","nodeType":"EventDefinition","parameters":{"id":6564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6561,"indexed":false,"mutability":"mutable","name":"oldRecipient","nameLocation":"2343:12:18","nodeType":"VariableDeclaration","scope":6565,"src":"2335:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6560,"name":"address","nodeType":"ElementaryTypeName","src":"2335:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6563,"indexed":false,"mutability":"mutable","name":"newRecipient","nameLocation":"2365:12:18","nodeType":"VariableDeclaration","scope":6565,"src":"2357:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6562,"name":"address","nodeType":"ElementaryTypeName","src":"2357:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2334:44:18"},"src":"2301:78:18"},{"constant":true,"id":6570,"mutability":"constant","name":"_ORDER_TYPEHASH","nameLocation":"2455:15:18","nodeType":"VariableDeclaration","scope":7153,"src":"2430:202:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6566,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2430:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4f7264657228616464726573732073656c6c65722c616464726573732062757965722c61646472657373206e6674416464726573732c75696e7432353620746f6b656e49642c616464726573732063757272656e63792c75696e743235362070726963652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":6568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2492:134:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_bf903f52c02ffc68f1c2367d8d2f116d1a25163fe798cb658496619ab6b1bf2d","typeString":"literal_string \"Order(address seller,address buyer,address nftAddress,uint256 tokenId,address currency,uint256 price,uint256 nonce,uint256 deadline)\""},"value":"Order(address seller,address buyer,address nftAddress,uint256 tokenId,address currency,uint256 price,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_bf903f52c02ffc68f1c2367d8d2f116d1a25163fe798cb658496619ab6b1bf2d","typeString":"literal_string \"Order(address seller,address buyer,address nftAddress,uint256 tokenId,address currency,uint256 price,uint256 nonce,uint256 deadline)\""}],"id":6567,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2473:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2473:159:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"body":{"id":6608,"nodeType":"Block","src":"2943:193:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6591,"name":"_platformFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6578,"src":"2961:21:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2994:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2986:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6592,"name":"address","nodeType":"ElementaryTypeName","src":"2986:7:18","typeDescriptions":{}}},"id":6595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2986:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2961:35:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526563697069656e742063616e6e6f74206265207a65726f","id":6597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2998:26:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc683099c882a9b602caa77f81b8e2530e69b20f829392585b0207e8d63a65a1","typeString":"literal_string \"Recipient cannot be zero\""},"value":"Recipient cannot be zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc683099c882a9b602caa77f81b8e2530e69b20f829392585b0207e8d63a65a1","typeString":"literal_string \"Recipient cannot be zero\""}],"id":6590,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2953:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2953:72:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6599,"nodeType":"ExpressionStatement","src":"2953:72:18"},{"expression":{"id":6602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6600,"name":"platformFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6519,"src":"3035:20:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6601,"name":"_platformFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6578,"src":"3058:21:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3035:44:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6603,"nodeType":"ExpressionStatement","src":"3035:44:18"},{"expression":{"id":6606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6604,"name":"platformFeePercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6521,"src":"3089:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6605,"name":"_platformFeePercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6580,"src":"3110:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3089:40:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6607,"nodeType":"ExpressionStatement","src":"3089:40:18"}]},"id":6609,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":6583,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6572,"src":"2906:4:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6584,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6574,"src":"2912:7:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":6585,"kind":"baseConstructorSpecifier","modifierName":{"id":6582,"name":"EIP712","nameLocations":["2899:6:18"],"nodeType":"IdentifierPath","referencedDeclaration":2856,"src":"2899:6:18"},"nodeType":"ModifierInvocation","src":"2899:21:18"},{"arguments":[{"id":6587,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6576,"src":"2929:12:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":6588,"kind":"baseConstructorSpecifier","modifierName":{"id":6586,"name":"Ownable","nameLocations":["2921:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"2921:7:18"},"nodeType":"ModifierInvocation","src":"2921:21:18"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6572,"mutability":"mutable","name":"name","nameLocation":"2674:4:18","nodeType":"VariableDeclaration","scope":6609,"src":"2660:18:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6571,"name":"string","nodeType":"ElementaryTypeName","src":"2660:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6574,"mutability":"mutable","name":"version","nameLocation":"2749:7:18","nodeType":"VariableDeclaration","scope":6609,"src":"2735:21:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6573,"name":"string","nodeType":"ElementaryTypeName","src":"2735:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6576,"mutability":"mutable","name":"initialOwner","nameLocation":"2804:12:18","nodeType":"VariableDeclaration","scope":6609,"src":"2796:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6575,"name":"address","nodeType":"ElementaryTypeName","src":"2796:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6578,"mutability":"mutable","name":"_platformFeeRecipient","nameLocation":"2834:21:18","nodeType":"VariableDeclaration","scope":6609,"src":"2826:29:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6577,"name":"address","nodeType":"ElementaryTypeName","src":"2826:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6580,"mutability":"mutable","name":"_platformFeePercent","nameLocation":"2873:19:18","nodeType":"VariableDeclaration","scope":6609,"src":"2865:27:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6579,"name":"uint256","nodeType":"ElementaryTypeName","src":"2865:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2650:248:18"},"returnParameters":{"id":6589,"nodeType":"ParameterList","parameters":[],"src":"2943:0:18"},"scope":7153,"src":"2639:497:18","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6632,"nodeType":"Block","src":"3251:221:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6617,"name":"_newFeePercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6611,"src":"3269:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"3130303030","id":6618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3287:5:18","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"3269:23:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4665652070657263656e742063616e6e6f7420657863656564203130303030","id":6620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3294:33:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_92ca134704187ef3fa501c974cfbff448d63adac4439a8c96e86a1025b91450f","typeString":"literal_string \"Fee percent cannot exceed 10000\""},"value":"Fee percent cannot exceed 10000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_92ca134704187ef3fa501c974cfbff448d63adac4439a8c96e86a1025b91450f","typeString":"literal_string \"Fee percent cannot exceed 10000\""}],"id":6616,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3261:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3261:67:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6622,"nodeType":"ExpressionStatement","src":"3261:67:18"},{"eventCall":{"arguments":[{"id":6624,"name":"platformFeePercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6521,"src":"3385:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6625,"name":"_newFeePercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6611,"src":"3405:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6623,"name":"PlatformFeePercentUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6559,"src":"3359:25:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":6626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3359:61:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6627,"nodeType":"EmitStatement","src":"3354:66:18"},{"expression":{"id":6630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6628,"name":"platformFeePercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6521,"src":"3430:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6629,"name":"_newFeePercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6611,"src":"3451:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3430:35:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6631,"nodeType":"ExpressionStatement","src":"3430:35:18"}]},"functionSelector":"cab230d2","id":6633,"implemented":true,"kind":"function","modifiers":[{"id":6614,"kind":"modifierInvocation","modifierName":{"id":6613,"name":"onlyOwner","nameLocations":["3241:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"3241:9:18"},"nodeType":"ModifierInvocation","src":"3241:9:18"}],"name":"setPlatformFeePercent","nameLocation":"3186:21:18","nodeType":"FunctionDefinition","parameters":{"id":6612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6611,"mutability":"mutable","name":"_newFeePercent","nameLocation":"3216:14:18","nodeType":"VariableDeclaration","scope":6633,"src":"3208:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6610,"name":"uint256","nodeType":"ElementaryTypeName","src":"3208:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3207:24:18"},"returnParameters":{"id":6615,"nodeType":"ParameterList","parameters":[],"src":"3251:0:18"},"scope":7153,"src":"3177:295:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6659,"nodeType":"Block","src":"3553:206:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6641,"name":"_newRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6635,"src":"3571:13:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3596:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6643,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3588:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6642,"name":"address","nodeType":"ElementaryTypeName","src":"3588:7:18","typeDescriptions":{}}},"id":6645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3588:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3571:27:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526563697069656e742063616e6e6f74206265207a65726f","id":6647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3600:26:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc683099c882a9b602caa77f81b8e2530e69b20f829392585b0207e8d63a65a1","typeString":"literal_string \"Recipient cannot be zero\""},"value":"Recipient cannot be zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc683099c882a9b602caa77f81b8e2530e69b20f829392585b0207e8d63a65a1","typeString":"literal_string \"Recipient cannot be zero\""}],"id":6640,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3563:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3563:64:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6649,"nodeType":"ExpressionStatement","src":"3563:64:18"},{"eventCall":{"arguments":[{"id":6651,"name":"platformFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6519,"src":"3670:20:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6652,"name":"_newRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6635,"src":"3692:13:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6650,"name":"PlatformFeeRecipientUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6565,"src":"3642:27:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":6653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3642:64:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6654,"nodeType":"EmitStatement","src":"3637:69:18"},{"expression":{"id":6657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6655,"name":"platformFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6519,"src":"3716:20:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6656,"name":"_newRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6635,"src":"3739:13:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3716:36:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":6658,"nodeType":"ExpressionStatement","src":"3716:36:18"}]},"functionSelector":"1871e243","id":6660,"implemented":true,"kind":"function","modifiers":[{"id":6638,"kind":"modifierInvocation","modifierName":{"id":6637,"name":"onlyOwner","nameLocations":["3543:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"3543:9:18"},"nodeType":"ModifierInvocation","src":"3543:9:18"}],"name":"setPlatformFeeRecipient","nameLocation":"3487:23:18","nodeType":"FunctionDefinition","parameters":{"id":6636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6635,"mutability":"mutable","name":"_newRecipient","nameLocation":"3519:13:18","nodeType":"VariableDeclaration","scope":6660,"src":"3511:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6634,"name":"address","nodeType":"ElementaryTypeName","src":"3511:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3510:23:18"},"returnParameters":{"id":6639,"nodeType":"ParameterList","parameters":[],"src":"3553:0:18"},"scope":7153,"src":"3478:281:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6763,"nodeType":"Block","src":"4129:1064:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6672,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4186:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4192:9:18","memberName":"timestamp","nodeType":"MemberAccess","src":"4186:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6674,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6664,"src":"4204:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$6517_calldata_ptr","typeString":"struct Marketplace.Order calldata"}},"id":6675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4210:8:18","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":6516,"src":"4204:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4186:32:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f726465723a2045787069726564","id":6677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4220:16:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_0cb4d64781e02901606bf70516bdce82d19e6058128666a71941789d19d9cef6","typeString":"literal_string \"Order: Expired\""},"value":"Order: Expired"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0cb4d64781e02901606bf70516bdce82d19e6058128666a71941789d19d9cef6","typeString":"literal_string \"Order: Expired\""}],"id":6671,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4178:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4178:59:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6679,"nodeType":"ExpressionStatement","src":"4178:59:18"},{"assignments":[6681],"declarations":[{"constant":false,"id":6681,"mutability":"mutable","name":"signer","nameLocation":"4264:6:18","nodeType":"VariableDeclaration","scope":6763,"src":"4256:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6680,"name":"address","nodeType":"ElementaryTypeName","src":"4256:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6684,"initialValue":{"expression":{"id":6682,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6664,"src":"4273:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$6517_calldata_ptr","typeString":"struct Marketplace.Order calldata"}},"id":6683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4279:6:18","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":6502,"src":"4273:12:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4256:29:18"},{"assignments":[6686],"declarations":[{"constant":false,"id":6686,"mutability":"mutable","name":"orderHash","nameLocation":"4303:9:18","nodeType":"VariableDeclaration","scope":6763,"src":"4295:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6685,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4295:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":6690,"initialValue":{"arguments":[{"id":6688,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6664,"src":"4326:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$6517_calldata_ptr","typeString":"struct Marketplace.Order calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Order_$6517_calldata_ptr","typeString":"struct Marketplace.Order calldata"}],"id":6687,"name":"_hashOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6959,"src":"4315:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Order_$6517_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (struct Marketplace.Order calldata) view returns (bytes32)"}},"id":6689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4315:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4295:37:18"},{"expression":{"arguments":[{"id":6695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4399:23:18","subExpression":{"baseExpression":{"id":6692,"name":"orderStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6529,"src":"4400:11:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":6694,"indexExpression":{"id":6693,"name":"orderHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6686,"src":"4412:9:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4400:22:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f726465723a20416c72656164792068616e646c6564","id":6696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4424:24:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_b8d33ebd343fbf304361844b0391ff4a69626e716b23174384fc4b57bd13a78a","typeString":"literal_string \"Order: Already handled\""},"value":"Order: Already handled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b8d33ebd343fbf304361844b0391ff4a69626e716b23174384fc4b57bd13a78a","typeString":"literal_string \"Order: Already handled\""}],"id":6691,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4391:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4391:58:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6698,"nodeType":"ExpressionStatement","src":"4391:58:18"},{"expression":{"arguments":[{"arguments":[{"id":6701,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6681,"src":"4530:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6702,"name":"orderHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6686,"src":"4538:9:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6703,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6666,"src":"4549:9:18","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":6700,"name":"_verifySignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6979,"src":"4513:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_bytes32_$_t_bytes_calldata_ptr_$returns$_t_bool_$","typeString":"function (address,bytes32,bytes calldata) pure returns (bool)"}},"id":6704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4513:46:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f726465723a20496e76616c6964207369676e6174757265","id":6705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4561:26:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_975613551a7372c615f5b299191a9b4b4e24134559b144db5103f92248cec0f3","typeString":"literal_string \"Order: Invalid signature\""},"value":"Order: Invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_975613551a7372c615f5b299191a9b4b4e24134559b144db5103f92248cec0f3","typeString":"literal_string \"Order: Invalid signature\""}],"id":6699,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4505:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4505:83:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6707,"nodeType":"ExpressionStatement","src":"4505:83:18"},{"expression":{"id":6712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6708,"name":"orderStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6529,"src":"4638:11:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":6710,"indexExpression":{"id":6709,"name":"orderHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6686,"src":"4650:9:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4638:22:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4663:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4638:29:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6713,"nodeType":"ExpressionStatement","src":"4638:29:18"},{"assignments":[6715],"declarations":[{"constant":false,"id":6715,"mutability":"mutable","name":"buyer","nameLocation":"4719:5:18","nodeType":"VariableDeclaration","scope":6763,"src":"4711:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6714,"name":"address","nodeType":"ElementaryTypeName","src":"4711:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6718,"initialValue":{"expression":{"id":6716,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4727:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4731:6:18","memberName":"sender","nodeType":"MemberAccess","src":"4727:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4711:26:18"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6719,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6664,"src":"4782:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$6517_calldata_ptr","typeString":"struct Marketplace.Order calldata"}},"id":6720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4788:5:18","memberName":"buyer","nodeType":"MemberAccess","referencedDeclaration":6504,"src":"4782:11:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":6723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4805:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4797:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6721,"name":"address","nodeType":"ElementaryTypeName","src":"4797:7:18","typeDescriptions":{}}},"id":6724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4797:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4782:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6735,"nodeType":"IfStatement","src":"4778:153:18","trueBody":{"id":6734,"nodeType":"Block","src":"4809:122:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6727,"name":"buyer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6715,"src":"4831:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6728,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6664,"src":"4840:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$6517_calldata_ptr","typeString":"struct Marketplace.Order calldata"}},"id":6729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4846:5:18","memberName":"buyer","nodeType":"MemberAccess","referencedDeclaration":6504,"src":"4840:11:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4831:20:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f726465723a204e6f7420666f7220796f75","id":6731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4853:20:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_4e92386cd5dd7e50de0bf20dfe9f8dbbf22c6328d9a617b8179cb3bd33bc4b3b","typeString":"literal_string \"Order: Not for you\""},"value":"Order: Not for you"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4e92386cd5dd7e50de0bf20dfe9f8dbbf22c6328d9a617b8179cb3bd33bc4b3b","typeString":"literal_string \"Order: Not for you\""}],"id":6726,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4823:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4823:51:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6733,"nodeType":"ExpressionStatement","src":"4823:51:18"}]}},{"expression":{"arguments":[{"id":6737,"name":"buyer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6715,"src":"4988:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6738,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6664,"src":"4995:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$6517_calldata_ptr","typeString":"struct Marketplace.Order calldata"}},"id":6739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5001:6:18","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":6502,"src":"4995:12:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6740,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6664,"src":"5009:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$6517_calldata_ptr","typeString":"struct Marketplace.Order calldata"}},"id":6741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5015:10:18","memberName":"nftAddress","nodeType":"MemberAccess","referencedDeclaration":6506,"src":"5009:16:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6742,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6664,"src":"5027:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$6517_calldata_ptr","typeString":"struct Marketplace.Order calldata"}},"id":6743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5033:7:18","memberName":"tokenId","nodeType":"MemberAccess","referencedDeclaration":6508,"src":"5027:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6744,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6664,"src":"5042:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$6517_calldata_ptr","typeString":"struct Marketplace.Order calldata"}},"id":6745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5048:8:18","memberName":"currency","nodeType":"MemberAccess","referencedDeclaration":6510,"src":"5042:14:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6746,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6664,"src":"5058:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$6517_calldata_ptr","typeString":"struct Marketplace.Order calldata"}},"id":6747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5064:5:18","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":6512,"src":"5058:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6736,"name":"_executeTrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7110,"src":"4974:13:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,address,uint256)"}},"id":6748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4974:96:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6749,"nodeType":"ExpressionStatement","src":"4974:96:18"},{"eventCall":{"arguments":[{"id":6751,"name":"orderHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6686,"src":"5109:9:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":6752,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6664,"src":"5120:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$6517_calldata_ptr","typeString":"struct Marketplace.Order calldata"}},"id":6753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5126:6:18","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":6502,"src":"5120:12:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6754,"name":"buyer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6715,"src":"5134:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6755,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6664,"src":"5141:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$6517_calldata_ptr","typeString":"struct Marketplace.Order calldata"}},"id":6756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5147:10:18","memberName":"nftAddress","nodeType":"MemberAccess","referencedDeclaration":6506,"src":"5141:16:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6757,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6664,"src":"5159:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$6517_calldata_ptr","typeString":"struct Marketplace.Order calldata"}},"id":6758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5165:7:18","memberName":"tokenId","nodeType":"MemberAccess","referencedDeclaration":6508,"src":"5159:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6759,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6664,"src":"5174:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$6517_calldata_ptr","typeString":"struct Marketplace.Order calldata"}},"id":6760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5180:5:18","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":6512,"src":"5174:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6750,"name":"OrderFulfilled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6543,"src":"5094:14:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,address,address,uint256,uint256)"}},"id":6761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5094:92:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6762,"nodeType":"EmitStatement","src":"5089:97:18"}]},"documentation":{"id":6661,"nodeType":"StructuredDocumentation","src":"3801:231:18","text":" @notice 【场景一：买家购买】执行一个由卖家签名的销售订单。\n @param order 包含所有订单信息的结构体，由卖家签名。\n @param signature 卖家的 EIP712 签名。"},"functionSelector":"da0f62a2","id":6764,"implemented":true,"kind":"function","modifiers":[{"id":6669,"kind":"modifierInvocation","modifierName":{"id":6668,"name":"nonReentrant","nameLocations":["4116:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":502,"src":"4116:12:18"},"nodeType":"ModifierInvocation","src":"4116:12:18"}],"name":"fulfillOrder","nameLocation":"4046:12:18","nodeType":"FunctionDefinition","parameters":{"id":6667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6664,"mutability":"mutable","name":"order","nameLocation":"4074:5:18","nodeType":"VariableDeclaration","scope":6764,"src":"4059:20:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$6517_calldata_ptr","typeString":"struct Marketplace.Order"},"typeName":{"id":6663,"nodeType":"UserDefinedTypeName","pathNode":{"id":6662,"name":"Order","nameLocations":["4059:5:18"],"nodeType":"IdentifierPath","referencedDeclaration":6517,"src":"4059:5:18"},"referencedDeclaration":6517,"src":"4059:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$6517_storage_ptr","typeString":"struct Marketplace.Order"}},"visibility":"internal"},{"constant":false,"id":6666,"mutability":"mutable","name":"signature","nameLocation":"4096:9:18","nodeType":"VariableDeclaration","scope":6764,"src":"4081:24:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6665,"name":"bytes","nodeType":"ElementaryTypeName","src":"4081:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4058:48:18"},"returnParameters":{"id":6670,"nodeType":"ParameterList","parameters":[],"src":"4129:0:18"},"scope":7153,"src":"4037:1156:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6858,"nodeType":"Block","src":"5537:995:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6776,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5594:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5600:9:18","memberName":"timestamp","nodeType":"MemberAccess","src":"5594:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6778,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6768,"src":"5612:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$6517_calldata_ptr","typeString":"struct Marketplace.Order calldata"}},"id":6779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5618:8:18","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":6516,"src":"5612:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5594:32:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f666665723a2045787069726564","id":6781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5628:16:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_25e66163f035f2588372d1dbade133571ced130dbc6a5e4e690e4afa56421a18","typeString":"literal_string \"Offer: Expired\""},"value":"Offer: Expired"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_25e66163f035f2588372d1dbade133571ced130dbc6a5e4e690e4afa56421a18","typeString":"literal_string \"Offer: Expired\""}],"id":6775,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5586:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5586:59:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6783,"nodeType":"ExpressionStatement","src":"5586:59:18"},{"assignments":[6785],"declarations":[{"constant":false,"id":6785,"mutability":"mutable","name":"signer","nameLocation":"5664:6:18","nodeType":"VariableDeclaration","scope":6858,"src":"5656:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6784,"name":"address","nodeType":"ElementaryTypeName","src":"5656:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6788,"initialValue":{"expression":{"id":6786,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6768,"src":"5673:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$6517_calldata_ptr","typeString":"struct Marketplace.Order calldata"}},"id":6787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5679:5:18","memberName":"buyer","nodeType":"MemberAccess","referencedDeclaration":6504,"src":"5673:11:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5656:28:18"},{"assignments":[6790],"declarations":[{"constant":false,"id":6790,"mutability":"mutable","name":"seller","nameLocation":"5742:6:18","nodeType":"VariableDeclaration","scope":6858,"src":"5734:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6789,"name":"address","nodeType":"ElementaryTypeName","src":"5734:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6793,"initialValue":{"expression":{"id":6791,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5751:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5755:6:18","memberName":"sender","nodeType":"MemberAccess","src":"5751:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5734:27:18"},{"assignments":[6795],"declarations":[{"constant":false,"id":6795,"mutability":"mutable","name":"orderHash","nameLocation":"5810:9:18","nodeType":"VariableDeclaration","scope":6858,"src":"5802:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6794,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5802:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":6799,"initialValue":{"arguments":[{"id":6797,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6768,"src":"5833:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$6517_calldata_ptr","typeString":"struct Marketplace.Order calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Order_$6517_calldata_ptr","typeString":"struct Marketplace.Order calldata"}],"id":6796,"name":"_hashOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6959,"src":"5822:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Order_$6517_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (struct Marketplace.Order calldata) view returns (bytes32)"}},"id":6798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5822:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5802:37:18"},{"expression":{"arguments":[{"id":6804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5891:23:18","subExpression":{"baseExpression":{"id":6801,"name":"orderStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6529,"src":"5892:11:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":6803,"indexExpression":{"id":6802,"name":"orderHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6795,"src":"5904:9:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5892:22:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f666665723a20416c72656164792068616e646c6564","id":6805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5916:24:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_80af65d824aa286438ae3de3c5167c9b4c82eb9eb37a9332237e2bb4d6c603d8","typeString":"literal_string \"Offer: Already handled\""},"value":"Offer: Already handled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_80af65d824aa286438ae3de3c5167c9b4c82eb9eb37a9332237e2bb4d6c603d8","typeString":"literal_string \"Offer: Already handled\""}],"id":6800,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5883:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5883:58:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6807,"nodeType":"ExpressionStatement","src":"5883:58:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6809,"name":"seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6790,"src":"6017:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6810,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6768,"src":"6027:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$6517_calldata_ptr","typeString":"struct Marketplace.Order calldata"}},"id":6811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6033:6:18","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":6502,"src":"6027:12:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6017:22:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f666665723a204e6f7420666f7220796f75","id":6813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6041:20:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_da5c3340b8d13a4de28b6034e9771db52d96e1250696e165889248771d6df19d","typeString":"literal_string \"Offer: Not for you\""},"value":"Offer: Not for you"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_da5c3340b8d13a4de28b6034e9771db52d96e1250696e165889248771d6df19d","typeString":"literal_string \"Offer: Not for you\""}],"id":6808,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6009:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6009:53:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6815,"nodeType":"ExpressionStatement","src":"6009:53:18"},{"expression":{"arguments":[{"arguments":[{"id":6818,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6785,"src":"6134:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6819,"name":"orderHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6795,"src":"6142:9:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6820,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6770,"src":"6153:9:18","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":6817,"name":"_verifySignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6979,"src":"6117:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_bytes32_$_t_bytes_calldata_ptr_$returns$_t_bool_$","typeString":"function (address,bytes32,bytes calldata) pure returns (bool)"}},"id":6821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6117:46:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f666665723a20496e76616c6964206275796572207369676e6174757265","id":6822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6165:32:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_adba10029e9d9a97eee76589a6bea4f4e3829223133272d2c777974e12724bb8","typeString":"literal_string \"Offer: Invalid buyer signature\""},"value":"Offer: Invalid buyer signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_adba10029e9d9a97eee76589a6bea4f4e3829223133272d2c777974e12724bb8","typeString":"literal_string \"Offer: Invalid buyer signature\""}],"id":6816,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6109:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6109:89:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6824,"nodeType":"ExpressionStatement","src":"6109:89:18"},{"expression":{"id":6829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6825,"name":"orderStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6529,"src":"6248:11:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":6827,"indexExpression":{"id":6826,"name":"orderHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6795,"src":"6260:9:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6248:22:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6273:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6248:29:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6830,"nodeType":"ExpressionStatement","src":"6248:29:18"},{"expression":{"arguments":[{"expression":{"id":6832,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6768,"src":"6335:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$6517_calldata_ptr","typeString":"struct Marketplace.Order calldata"}},"id":6833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6341:5:18","memberName":"buyer","nodeType":"MemberAccess","referencedDeclaration":6504,"src":"6335:11:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6834,"name":"seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6790,"src":"6348:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6835,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6768,"src":"6356:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$6517_calldata_ptr","typeString":"struct Marketplace.Order calldata"}},"id":6836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6362:10:18","memberName":"nftAddress","nodeType":"MemberAccess","referencedDeclaration":6506,"src":"6356:16:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6837,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6768,"src":"6374:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$6517_calldata_ptr","typeString":"struct Marketplace.Order calldata"}},"id":6838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6380:7:18","memberName":"tokenId","nodeType":"MemberAccess","referencedDeclaration":6508,"src":"6374:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6839,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6768,"src":"6389:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$6517_calldata_ptr","typeString":"struct Marketplace.Order calldata"}},"id":6840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6395:8:18","memberName":"currency","nodeType":"MemberAccess","referencedDeclaration":6510,"src":"6389:14:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6841,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6768,"src":"6405:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$6517_calldata_ptr","typeString":"struct Marketplace.Order calldata"}},"id":6842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6411:5:18","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":6512,"src":"6405:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6831,"name":"_executeTrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7110,"src":"6321:13:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,address,uint256)"}},"id":6843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6321:96:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6844,"nodeType":"ExpressionStatement","src":"6321:96:18"},{"eventCall":{"arguments":[{"id":6846,"name":"orderHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6795,"src":"6448:9:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6847,"name":"seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6790,"src":"6459:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6848,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6768,"src":"6467:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$6517_calldata_ptr","typeString":"struct Marketplace.Order calldata"}},"id":6849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6473:5:18","memberName":"buyer","nodeType":"MemberAccess","referencedDeclaration":6504,"src":"6467:11:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6850,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6768,"src":"6480:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$6517_calldata_ptr","typeString":"struct Marketplace.Order calldata"}},"id":6851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6486:10:18","memberName":"nftAddress","nodeType":"MemberAccess","referencedDeclaration":6506,"src":"6480:16:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6852,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6768,"src":"6498:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$6517_calldata_ptr","typeString":"struct Marketplace.Order calldata"}},"id":6853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6504:7:18","memberName":"tokenId","nodeType":"MemberAccess","referencedDeclaration":6508,"src":"6498:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6854,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6768,"src":"6513:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$6517_calldata_ptr","typeString":"struct Marketplace.Order calldata"}},"id":6855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6519:5:18","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":6512,"src":"6513:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6845,"name":"OrderFulfilled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6543,"src":"6433:14:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,address,address,uint256,uint256)"}},"id":6856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6433:92:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6857,"nodeType":"EmitStatement","src":"6428:97:18"}]},"documentation":{"id":6765,"nodeType":"StructuredDocumentation","src":"5203:237:18","text":" @notice 【场景二：卖家接受报价】执行一个由买家签名的报价订单。\n @param order 包含所有报价信息的结构体，由买家签名。\n @param signature 买家的 EIP712 签名。"},"functionSelector":"de5b482d","id":6859,"implemented":true,"kind":"function","modifiers":[{"id":6773,"kind":"modifierInvocation","modifierName":{"id":6772,"name":"nonReentrant","nameLocations":["5524:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":502,"src":"5524:12:18"},"nodeType":"ModifierInvocation","src":"5524:12:18"}],"name":"fulfillOffer","nameLocation":"5454:12:18","nodeType":"FunctionDefinition","parameters":{"id":6771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6768,"mutability":"mutable","name":"order","nameLocation":"5482:5:18","nodeType":"VariableDeclaration","scope":6859,"src":"5467:20:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$6517_calldata_ptr","typeString":"struct Marketplace.Order"},"typeName":{"id":6767,"nodeType":"UserDefinedTypeName","pathNode":{"id":6766,"name":"Order","nameLocations":["5467:5:18"],"nodeType":"IdentifierPath","referencedDeclaration":6517,"src":"5467:5:18"},"referencedDeclaration":6517,"src":"5467:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$6517_storage_ptr","typeString":"struct Marketplace.Order"}},"visibility":"internal"},{"constant":false,"id":6770,"mutability":"mutable","name":"signature","nameLocation":"5504:9:18","nodeType":"VariableDeclaration","scope":6859,"src":"5489:24:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6769,"name":"bytes","nodeType":"ElementaryTypeName","src":"5489:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5466:48:18"},"returnParameters":{"id":6774,"nodeType":"ParameterList","parameters":[],"src":"5537:0:18"},"scope":7153,"src":"5445:1087:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6913,"nodeType":"Block","src":"6723:445:18","statements":[{"assignments":[6867],"declarations":[{"constant":false,"id":6867,"mutability":"mutable","name":"user","nameLocation":"6741:4:18","nodeType":"VariableDeclaration","scope":6913,"src":"6733:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6866,"name":"address","nodeType":"ElementaryTypeName","src":"6733:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6870,"initialValue":{"expression":{"id":6868,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6748:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6752:6:18","memberName":"sender","nodeType":"MemberAccess","src":"6748:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6733:25:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6872,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6867,"src":"6854:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6873,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6863,"src":"6862:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$6517_calldata_ptr","typeString":"struct Marketplace.Order calldata"}},"id":6874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6868:6:18","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":6502,"src":"6862:12:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6854:20:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6876,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6867,"src":"6878:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":6877,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6863,"src":"6886:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$6517_calldata_ptr","typeString":"struct Marketplace.Order calldata"}},"id":6878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6892:5:18","memberName":"buyer","nodeType":"MemberAccess","referencedDeclaration":6504,"src":"6886:11:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6878:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6854:43:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f74206120706172747920746f20746865206f72646572","id":6881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6899:26:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_bfd76efe5631a7b194613c25bca698c7684113797e8c6b1c167fe0d7d5387838","typeString":"literal_string \"Not a party to the order\""},"value":"Not a party to the order"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bfd76efe5631a7b194613c25bca698c7684113797e8c6b1c167fe0d7d5387838","typeString":"literal_string \"Not a party to the order\""}],"id":6871,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6846:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6846:80:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6883,"nodeType":"ExpressionStatement","src":"6846:80:18"},{"assignments":[6885],"declarations":[{"constant":false,"id":6885,"mutability":"mutable","name":"orderHash","nameLocation":"6945:9:18","nodeType":"VariableDeclaration","scope":6913,"src":"6937:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6884,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6937:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":6889,"initialValue":{"arguments":[{"id":6887,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6863,"src":"6968:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$6517_calldata_ptr","typeString":"struct Marketplace.Order calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Order_$6517_calldata_ptr","typeString":"struct Marketplace.Order calldata"}],"id":6886,"name":"_hashOrder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6959,"src":"6957:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Order_$6517_calldata_ptr_$returns$_t_bytes32_$","typeString":"function (struct Marketplace.Order calldata) view returns (bytes32)"}},"id":6888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6957:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6937:37:18"},{"expression":{"arguments":[{"id":6894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6992:23:18","subExpression":{"baseExpression":{"id":6891,"name":"orderStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6529,"src":"6993:11:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":6893,"indexExpression":{"id":6892,"name":"orderHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6885,"src":"7005:9:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6993:22:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f726465723a20416c72656164792068616e646c6564","id":6895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7017:24:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_b8d33ebd343fbf304361844b0391ff4a69626e716b23174384fc4b57bd13a78a","typeString":"literal_string \"Order: Already handled\""},"value":"Order: Already handled"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b8d33ebd343fbf304361844b0391ff4a69626e716b23174384fc4b57bd13a78a","typeString":"literal_string \"Order: Already handled\""}],"id":6890,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6984:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6984:58:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6897,"nodeType":"ExpressionStatement","src":"6984:58:18"},{"expression":{"id":6902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6898,"name":"orderStatus","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6529,"src":"7053:11:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bool_$","typeString":"mapping(bytes32 => bool)"}},"id":6900,"indexExpression":{"id":6899,"name":"orderHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6885,"src":"7065:9:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7053:22:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":6901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7078:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7053:29:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6903,"nodeType":"ExpressionStatement","src":"7053:29:18"},{"eventCall":{"arguments":[{"id":6905,"name":"orderHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6885,"src":"7112:9:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":6906,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6863,"src":"7123:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$6517_calldata_ptr","typeString":"struct Marketplace.Order calldata"}},"id":6907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7129:10:18","memberName":"nftAddress","nodeType":"MemberAccess","referencedDeclaration":6506,"src":"7123:16:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6908,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6863,"src":"7141:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$6517_calldata_ptr","typeString":"struct Marketplace.Order calldata"}},"id":6909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7147:7:18","memberName":"tokenId","nodeType":"MemberAccess","referencedDeclaration":6508,"src":"7141:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6910,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6867,"src":"7156:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6904,"name":"OrderCancelled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6553,"src":"7097:14:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (bytes32,address,uint256,address)"}},"id":6911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7097:64:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6912,"nodeType":"EmitStatement","src":"7092:69:18"}]},"documentation":{"id":6860,"nodeType":"StructuredDocumentation","src":"6576:90:18","text":" @notice 在链上取消一个已签名的订单，使其永久失效。"},"functionSelector":"49a03152","id":6914,"implemented":true,"kind":"function","modifiers":[],"name":"cancelOrder","nameLocation":"6680:11:18","nodeType":"FunctionDefinition","parameters":{"id":6864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6863,"mutability":"mutable","name":"order","nameLocation":"6707:5:18","nodeType":"VariableDeclaration","scope":6914,"src":"6692:20:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$6517_calldata_ptr","typeString":"struct Marketplace.Order"},"typeName":{"id":6862,"nodeType":"UserDefinedTypeName","pathNode":{"id":6861,"name":"Order","nameLocations":["6692:5:18"],"nodeType":"IdentifierPath","referencedDeclaration":6517,"src":"6692:5:18"},"referencedDeclaration":6517,"src":"6692:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$6517_storage_ptr","typeString":"struct Marketplace.Order"}},"visibility":"internal"}],"src":"6691:22:18"},"returnParameters":{"id":6865,"nodeType":"ParameterList","parameters":[],"src":"6723:0:18"},"scope":7153,"src":"6671:497:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6924,"nodeType":"Block","src":"7330:41:18","statements":[{"expression":{"id":6922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7340:24:18","subExpression":{"baseExpression":{"id":6918,"name":"userNonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6525,"src":"7340:10:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6921,"indexExpression":{"expression":{"id":6919,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7351:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7355:6:18","memberName":"sender","nodeType":"MemberAccess","src":"7351:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7340:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6923,"nodeType":"ExpressionStatement","src":"7340:24:18"}]},"documentation":{"id":6915,"nodeType":"StructuredDocumentation","src":"7178:112:18","text":" @notice 递增用户的 nonce，这将使用户所有使用旧 nonce 的签名全部失效。"},"functionSelector":"627cdcb9","id":6925,"implemented":true,"kind":"function","modifiers":[],"name":"incrementNonce","nameLocation":"7304:14:18","nodeType":"FunctionDefinition","parameters":{"id":6916,"nodeType":"ParameterList","parameters":[],"src":"7318:2:18"},"returnParameters":{"id":6917,"nodeType":"ParameterList","parameters":[],"src":"7330:0:18"},"scope":7153,"src":"7295:76:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6958,"nodeType":"Block","src":"7485:316:18","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":6937,"name":"_ORDER_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6570,"src":"7553:15:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":6938,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6928,"src":"7582:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$6517_calldata_ptr","typeString":"struct Marketplace.Order calldata"}},"id":6939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7588:6:18","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":6502,"src":"7582:12:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6940,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6928,"src":"7608:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$6517_calldata_ptr","typeString":"struct Marketplace.Order calldata"}},"id":6941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7614:5:18","memberName":"buyer","nodeType":"MemberAccess","referencedDeclaration":6504,"src":"7608:11:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6942,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6928,"src":"7633:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$6517_calldata_ptr","typeString":"struct Marketplace.Order calldata"}},"id":6943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7639:10:18","memberName":"nftAddress","nodeType":"MemberAccess","referencedDeclaration":6506,"src":"7633:16:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6944,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6928,"src":"7663:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$6517_calldata_ptr","typeString":"struct Marketplace.Order calldata"}},"id":6945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7669:7:18","memberName":"tokenId","nodeType":"MemberAccess","referencedDeclaration":6508,"src":"7663:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6946,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6928,"src":"7690:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$6517_calldata_ptr","typeString":"struct Marketplace.Order calldata"}},"id":6947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7696:8:18","memberName":"currency","nodeType":"MemberAccess","referencedDeclaration":6510,"src":"7690:14:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":6948,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6928,"src":"7718:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$6517_calldata_ptr","typeString":"struct Marketplace.Order calldata"}},"id":6949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7724:5:18","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":6512,"src":"7718:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6950,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6928,"src":"7743:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$6517_calldata_ptr","typeString":"struct Marketplace.Order calldata"}},"id":6951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7749:5:18","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":6514,"src":"7743:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6952,"name":"order","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6928,"src":"7768:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$6517_calldata_ptr","typeString":"struct Marketplace.Order calldata"}},"id":6953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7774:8:18","memberName":"deadline","nodeType":"MemberAccess","referencedDeclaration":6516,"src":"7768:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6935,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7529:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7533:6:18","memberName":"encode","nodeType":"MemberAccess","src":"7529:10:18","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7529:263:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6934,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7519:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7519:274:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6933,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"7502:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":6956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7502:292:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":6932,"id":6957,"nodeType":"Return","src":"7495:299:18"}]},"id":6959,"implemented":true,"kind":"function","modifiers":[],"name":"_hashOrder","nameLocation":"7420:10:18","nodeType":"FunctionDefinition","parameters":{"id":6929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6928,"mutability":"mutable","name":"order","nameLocation":"7446:5:18","nodeType":"VariableDeclaration","scope":6959,"src":"7431:20:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$6517_calldata_ptr","typeString":"struct Marketplace.Order"},"typeName":{"id":6927,"nodeType":"UserDefinedTypeName","pathNode":{"id":6926,"name":"Order","nameLocations":["7431:5:18"],"nodeType":"IdentifierPath","referencedDeclaration":6517,"src":"7431:5:18"},"referencedDeclaration":6517,"src":"7431:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Order_$6517_storage_ptr","typeString":"struct Marketplace.Order"}},"visibility":"internal"}],"src":"7430:22:18"},"returnParameters":{"id":6932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6931,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6959,"src":"7476:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6930,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7476:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7475:9:18"},"scope":7153,"src":"7411:390:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6978,"nodeType":"Block","src":"7920:66:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":6976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6972,"name":"digest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6963,"src":"7951:6:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":6973,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6965,"src":"7959:9:18","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":6970,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2629,"src":"7937:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$2629_$","typeString":"type(library ECDSA)"}},"id":6971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7943:7:18","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":2385,"src":"7937:13:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":6974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7937:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6975,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6961,"src":"7973:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7937:42:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6969,"id":6977,"nodeType":"Return","src":"7930:49:18"}]},"id":6979,"implemented":true,"kind":"function","modifiers":[],"name":"_verifySignature","nameLocation":"7816:16:18","nodeType":"FunctionDefinition","parameters":{"id":6966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6961,"mutability":"mutable","name":"signer","nameLocation":"7841:6:18","nodeType":"VariableDeclaration","scope":6979,"src":"7833:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6960,"name":"address","nodeType":"ElementaryTypeName","src":"7833:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6963,"mutability":"mutable","name":"digest","nameLocation":"7857:6:18","nodeType":"VariableDeclaration","scope":6979,"src":"7849:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6962,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7849:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":6965,"mutability":"mutable","name":"signature","nameLocation":"7880:9:18","nodeType":"VariableDeclaration","scope":6979,"src":"7865:24:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":6964,"name":"bytes","nodeType":"ElementaryTypeName","src":"7865:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7832:58:18"},"returnParameters":{"id":6969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6968,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6979,"src":"7914:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6967,"name":"bool","nodeType":"ElementaryTypeName","src":"7914:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7913:6:18"},"scope":7153,"src":"7807:179:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7109,"nodeType":"Block","src":"8125:1311:18","statements":[{"assignments":[6996],"declarations":[{"constant":false,"id":6996,"mutability":"mutable","name":"nft","nameLocation":"8259:3:18","nodeType":"VariableDeclaration","scope":7109,"src":"8251:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$387","typeString":"contract IERC721"},"typeName":{"id":6995,"nodeType":"UserDefinedTypeName","pathNode":{"id":6994,"name":"IERC721","nameLocations":["8251:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":387,"src":"8251:7:18"},"referencedDeclaration":387,"src":"8251:7:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$387","typeString":"contract IERC721"}},"visibility":"internal"}],"id":7000,"initialValue":{"arguments":[{"id":6998,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6985,"src":"8273:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6997,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"8265:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$387_$","typeString":"type(contract IERC721)"}},"id":6999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8265:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$387","typeString":"contract IERC721"}},"nodeType":"VariableDeclarationStatement","src":"8251:33:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7004,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6987,"src":"8314:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7002,"name":"nft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"8302:3:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$387","typeString":"contract IERC721"}},"id":7003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8306:7:18","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":320,"src":"8302:11:18","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view external returns (address)"}},"id":7005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8302:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7006,"name":"seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6983,"src":"8326:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8302:30:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53656c6c6572206e6f206c6f6e676572206f776e73204e4654","id":7008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8334:27:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_ade364304ee64f798a996860d608bb28f2310a00659ec71a8a8a51a6dcbdaa71","typeString":"literal_string \"Seller no longer owns NFT\""},"value":"Seller no longer owns NFT"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ade364304ee64f798a996860d608bb28f2310a00659ec71a8a8a51a6dcbdaa71","typeString":"literal_string \"Seller no longer owns NFT\""}],"id":7001,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8294:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8294:68:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7010,"nodeType":"ExpressionStatement","src":"8294:68:18"},{"assignments":[7012],"declarations":[{"constant":false,"id":7012,"mutability":"mutable","name":"platformFee","nameLocation":"8408:11:18","nodeType":"VariableDeclaration","scope":7109,"src":"8400:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7011,"name":"uint256","nodeType":"ElementaryTypeName","src":"8400:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7019,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7013,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6991,"src":"8423:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7014,"name":"platformFeePercent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6521,"src":"8431:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8423:26:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7016,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8422:28:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":7017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8453:5:18","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"8422:36:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8400:58:18"},{"assignments":[7021,7023],"declarations":[{"constant":false,"id":7021,"mutability":"mutable","name":"royaltyRecipient","nameLocation":"8477:16:18","nodeType":"VariableDeclaration","scope":7109,"src":"8469:24:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7020,"name":"address","nodeType":"ElementaryTypeName","src":"8469:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7023,"mutability":"mutable","name":"royaltyFee","nameLocation":"8503:10:18","nodeType":"VariableDeclaration","scope":7109,"src":"8495:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7022,"name":"uint256","nodeType":"ElementaryTypeName","src":"8495:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7029,"initialValue":{"arguments":[{"id":7025,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6985,"src":"8533:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7026,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6987,"src":"8545:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7027,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6991,"src":"8554:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7024,"name":"_getRoyaltyInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7152,"src":"8517:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$_t_uint256_$returns$_t_address_$_t_uint256_$","typeString":"function (address,uint256,uint256) view returns (address,uint256)"}},"id":7028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8517:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"8468:92:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7031,"name":"platformFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7012,"src":"8578:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7032,"name":"royaltyFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7023,"src":"8592:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8578:24:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":7034,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6991,"src":"8606:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8578:33:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4665657320657863656564207072696365","id":7036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8613:19:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_57b44d607556e0a8d9b0d76349d42e851eb016dfd63ce61ce355fc1ddb14a839","typeString":"literal_string \"Fees exceed price\""},"value":"Fees exceed price"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_57b44d607556e0a8d9b0d76349d42e851eb016dfd63ce61ce355fc1ddb14a839","typeString":"literal_string \"Fees exceed price\""}],"id":7030,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8570:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8570:63:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7038,"nodeType":"ExpressionStatement","src":"8570:63:18"},{"assignments":[7040],"declarations":[{"constant":false,"id":7040,"mutability":"mutable","name":"sellerProceeds","nameLocation":"8651:14:18","nodeType":"VariableDeclaration","scope":7109,"src":"8643:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7039,"name":"uint256","nodeType":"ElementaryTypeName","src":"8643:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7046,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7041,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6991,"src":"8668:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7042,"name":"platformFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7012,"src":"8676:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8668:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7044,"name":"royaltyFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7023,"src":"8690:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8668:32:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8643:57:18"},{"assignments":[7049],"declarations":[{"constant":false,"id":7049,"mutability":"mutable","name":"token","nameLocation":"8774:5:18","nodeType":"VariableDeclaration","scope":7109,"src":"8767:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$270","typeString":"contract IERC20"},"typeName":{"id":7048,"nodeType":"UserDefinedTypeName","pathNode":{"id":7047,"name":"IERC20","nameLocations":["8767:6:18"],"nodeType":"IdentifierPath","referencedDeclaration":270,"src":"8767:6:18"},"referencedDeclaration":270,"src":"8767:6:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$270","typeString":"contract IERC20"}},"visibility":"internal"}],"id":7053,"initialValue":{"arguments":[{"id":7051,"name":"currency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6989,"src":"8789:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7050,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":270,"src":"8782:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$270_$","typeString":"type(contract IERC20)"}},"id":7052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8782:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$270","typeString":"contract IERC20"}},"nodeType":"VariableDeclarationStatement","src":"8767:31:18"},{"expression":{"arguments":[{"arguments":[{"id":7057,"name":"buyer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6981,"src":"8961:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7058,"name":"seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6983,"src":"8968:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7059,"name":"sellerProceeds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7040,"src":"8976:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7055,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7049,"src":"8942:5:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$270","typeString":"contract IERC20"}},"id":7056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8948:12:18","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":269,"src":"8942:18:18","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":7060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8942:49:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e7366657220746f2073656c6c6572206661696c6564","id":7061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8993:27:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_8f6f578ebbf968167df384543393bc0cfac4f4e606b30dabcd0d6e81f88de9c3","typeString":"literal_string \"Transfer to seller failed\""},"value":"Transfer to seller failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8f6f578ebbf968167df384543393bc0cfac4f4e606b30dabcd0d6e81f88de9c3","typeString":"literal_string \"Transfer to seller failed\""}],"id":7054,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8934:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8934:87:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7063,"nodeType":"ExpressionStatement","src":"8934:87:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7064,"name":"platformFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7012,"src":"9035:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9049:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9035:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7078,"nodeType":"IfStatement","src":"9031:127:18","trueBody":{"id":7077,"nodeType":"Block","src":"9052:106:18","statements":[{"expression":{"arguments":[{"arguments":[{"id":7070,"name":"buyer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6981,"src":"9081:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7071,"name":"platformFeeRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6519,"src":"9088:20:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7072,"name":"platformFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7012,"src":"9110:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7068,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7049,"src":"9062:5:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$270","typeString":"contract IERC20"}},"id":7069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9068:12:18","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":269,"src":"9062:18:18","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":7073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9062:60:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506c6174666f726d20666565207472616e73666572206661696c6564","id":7074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9124:30:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c6a554350765611c29c35dfe5335e4aec5cb9b9c15676a48a7e33eb5e4bdcc3","typeString":"literal_string \"Platform fee transfer failed\""},"value":"Platform fee transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3c6a554350765611c29c35dfe5335e4aec5cb9b9c15676a48a7e33eb5e4bdcc3","typeString":"literal_string \"Platform fee transfer failed\""}],"id":7067,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9054:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9054:101:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7076,"nodeType":"ExpressionStatement","src":"9054:101:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7079,"name":"royaltyFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7023,"src":"9171:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9184:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9171:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7082,"name":"royaltyRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7021,"src":"9189:16:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9217:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7084,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9209:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7083,"name":"address","nodeType":"ElementaryTypeName","src":"9209:7:18","typeDescriptions":{}}},"id":7086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9209:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9189:30:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9171:48:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7100,"nodeType":"IfStatement","src":"9167:154:18","trueBody":{"id":7099,"nodeType":"Block","src":"9221:100:18","statements":[{"expression":{"arguments":[{"arguments":[{"id":7092,"name":"buyer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6981,"src":"9250:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7093,"name":"royaltyRecipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7021,"src":"9257:16:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7094,"name":"royaltyFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7023,"src":"9275:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7090,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7049,"src":"9231:5:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$270","typeString":"contract IERC20"}},"id":7091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9237:12:18","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":269,"src":"9231:18:18","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":7095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9231:55:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526f79616c747920666565207472616e73666572206661696c6564","id":7096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9288:29:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_670b4428482e1cbafe7bcf6b5ec82d2c2dc94aea769da4da4af83ce2be626d42","typeString":"literal_string \"Royalty fee transfer failed\""},"value":"Royalty fee transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_670b4428482e1cbafe7bcf6b5ec82d2c2dc94aea769da4da4af83ce2be626d42","typeString":"literal_string \"Royalty fee transfer failed\""}],"id":7089,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9223:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9223:95:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7098,"nodeType":"ExpressionStatement","src":"9223:95:18"}]}},{"expression":{"arguments":[{"id":7104,"name":"seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6983,"src":"9406:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7105,"name":"buyer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6981,"src":"9414:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7106,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6987,"src":"9421:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7101,"name":"nft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"9385:3:18","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$387","typeString":"contract IERC721"}},"id":7103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9389:16:18","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":342,"src":"9385:20:18","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) external"}},"id":7107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9385:44:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7108,"nodeType":"ExpressionStatement","src":"9385:44:18"}]},"id":7110,"implemented":true,"kind":"function","modifiers":[],"name":"_executeTrade","nameLocation":"8001:13:18","nodeType":"FunctionDefinition","parameters":{"id":6992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6981,"mutability":"mutable","name":"buyer","nameLocation":"8023:5:18","nodeType":"VariableDeclaration","scope":7110,"src":"8015:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6980,"name":"address","nodeType":"ElementaryTypeName","src":"8015:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6983,"mutability":"mutable","name":"seller","nameLocation":"8038:6:18","nodeType":"VariableDeclaration","scope":7110,"src":"8030:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6982,"name":"address","nodeType":"ElementaryTypeName","src":"8030:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6985,"mutability":"mutable","name":"nftAddress","nameLocation":"8054:10:18","nodeType":"VariableDeclaration","scope":7110,"src":"8046:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6984,"name":"address","nodeType":"ElementaryTypeName","src":"8046:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6987,"mutability":"mutable","name":"tokenId","nameLocation":"8074:7:18","nodeType":"VariableDeclaration","scope":7110,"src":"8066:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6986,"name":"uint256","nodeType":"ElementaryTypeName","src":"8066:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6989,"mutability":"mutable","name":"currency","nameLocation":"8091:8:18","nodeType":"VariableDeclaration","scope":7110,"src":"8083:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6988,"name":"address","nodeType":"ElementaryTypeName","src":"8083:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6991,"mutability":"mutable","name":"price","nameLocation":"8109:5:18","nodeType":"VariableDeclaration","scope":7110,"src":"8101:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6990,"name":"uint256","nodeType":"ElementaryTypeName","src":"8101:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8014:101:18"},"returnParameters":{"id":6993,"nodeType":"ParameterList","parameters":[],"src":"8125:0:18"},"scope":7153,"src":"7992:1444:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":7151,"nodeType":"Block","src":"9563:213:18","statements":[{"clauses":[{"block":{"id":7139,"nodeType":"Block","src":"9679:57:18","statements":[{"expression":{"components":[{"id":7135,"name":"receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7131,"src":"9701:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7136,"name":"royaltyAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7133,"src":"9711:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7137,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9700:25:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}},"functionReturnParameters":7122,"id":7138,"nodeType":"Return","src":"9693:32:18"}]},"errorName":"","id":7140,"nodeType":"TryCatchClause","parameters":{"id":7134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7131,"mutability":"mutable","name":"receiver","nameLocation":"9646:8:18","nodeType":"VariableDeclaration","scope":7140,"src":"9638:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7130,"name":"address","nodeType":"ElementaryTypeName","src":"9638:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7133,"mutability":"mutable","name":"royaltyAmount","nameLocation":"9664:13:18","nodeType":"VariableDeclaration","scope":7140,"src":"9656:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7132,"name":"uint256","nodeType":"ElementaryTypeName","src":"9656:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9637:41:18"},"src":"9629:107:18"},{"block":{"id":7148,"nodeType":"Block","src":"9743:27:18","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":7143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9761:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9753:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7141,"name":"address","nodeType":"ElementaryTypeName","src":"9753:7:18","typeDescriptions":{}}},"id":7144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9753:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":7145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9765:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":7146,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9752:15:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}},"functionReturnParameters":7122,"id":7147,"nodeType":"Return","src":"9745:22:18"}]},"errorName":"","id":7149,"nodeType":"TryCatchClause","src":"9737:33:18"}],"externalCall":{"arguments":[{"id":7127,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"9611:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7128,"name":"_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7116,"src":"9621:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":7124,"name":"_nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7112,"src":"9586:11:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7123,"name":"IERC2981","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"9577:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC2981_$167_$","typeString":"type(contract IERC2981)"}},"id":7125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9577:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC2981_$167","typeString":"contract IERC2981"}},"id":7126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9599:11:18","memberName":"royaltyInfo","nodeType":"MemberAccess","referencedDeclaration":166,"src":"9577:33:18","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$_t_uint256_$returns$_t_address_$_t_uint256_$","typeString":"function (uint256,uint256) view external returns (address,uint256)"}},"id":7129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9577:51:18","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}},"id":7150,"nodeType":"TryStatement","src":"9573:197:18"}]},"id":7152,"implemented":true,"kind":"function","modifiers":[],"name":"_getRoyaltyInfo","nameLocation":"9451:15:18","nodeType":"FunctionDefinition","parameters":{"id":7117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7112,"mutability":"mutable","name":"_nftAddress","nameLocation":"9475:11:18","nodeType":"VariableDeclaration","scope":7152,"src":"9467:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7111,"name":"address","nodeType":"ElementaryTypeName","src":"9467:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7114,"mutability":"mutable","name":"_tokenId","nameLocation":"9496:8:18","nodeType":"VariableDeclaration","scope":7152,"src":"9488:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7113,"name":"uint256","nodeType":"ElementaryTypeName","src":"9488:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7116,"mutability":"mutable","name":"_price","nameLocation":"9514:6:18","nodeType":"VariableDeclaration","scope":7152,"src":"9506:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7115,"name":"uint256","nodeType":"ElementaryTypeName","src":"9506:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9466:55:18"},"returnParameters":{"id":7122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7119,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7152,"src":"9545:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7118,"name":"address","nodeType":"ElementaryTypeName","src":"9545:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7152,"src":"9554:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7120,"name":"uint256","nodeType":"ElementaryTypeName","src":"9554:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9544:18:18"},"scope":7153,"src":"9442:334:18","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":7154,"src":"758:9020:18","usedErrors":[13,18,483,552,554,2292,2297,2302],"usedEvents":[24,172,6543,6553,6559,6565]}],"src":"32:9746:18"},"id":18}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC2981.sol":{"IERC2981":{"abi":[{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"salePrice","type":"uint256"}],"name":"royaltyInfo","outputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"royaltyAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"royaltyInfo(uint256,uint256)":"2a55205a","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the NFT Royalty Standard. A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal support for royalty payments across all NFT marketplaces and ecosystem participants.\",\"kind\":\"dev\",\"methods\":{\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange. NOTE: ERC-2981 allows setting the royalty to 100% of the price. In that case all the price would be sent to the royalty receiver and 0 tokens to the seller. Contracts dealing with royalty should consider empty transfers.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC2981.sol\":\"IERC2981\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0x3b017a19c1730050d0fdff8dfa9255741634699aa4217442724746ca49e13292\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05530a2959e8be01cd88993970924cd6081c3462395f6fc0e73c034519259b05\",\"dweb:/ipfs/QmXAG8dF9fiYE8iVWJYWxmbEMNL6RvBAxzRGq2nyLanB2M\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202672d2a23e458693f6ba1440f70db5954b011cca38f915e3138b6836c3d4ea7464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 PUSH19 0xD2A23E458693F6BA1440F70DB5954B011CCA38 0xF9 ISZERO 0xE3 SGT DUP12 PUSH9 0x36C3D4EA7464736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"657:1315:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202672d2a23e458693f6ba1440f70db5954b011cca38f915e3138b6836c3d4ea7464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 PUSH19 0xD2A23E458693F6BA1440F70DB5954B011CCA38 0xF9 ISZERO 0xE3 SGT DUP12 PUSH9 0x36C3D4EA7464736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"657:1315:6:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122099d0b5f366a78872590dac246cf99b97c37167f78d60be5c3afe67987d15111164736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 0xD0 0xB5 RETURN PUSH7 0xA78872590DAC24 PUSH13 0xF99B97C37167F78D60BE5C3AFE PUSH8 0x987D15111164736F PUSH13 0x63430008140033000000000000 ","sourceMap":"1255:3046:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122099d0b5f366a78872590dac246cf99b97c37167f78d60be5c3afe67987d15111164736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 0xD0 0xB5 RETURN PUSH7 0xA78872590DAC24 PUSH13 0xF99B97C37167F78D60BE5C3AFE PUSH8 0x987D15111164736F PUSH13 0x63430008140033000000000000 ","sourceMap":"1255:3046:8:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":\"ShortStrings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e720a9c2a57f6209f7f2521024ac618e6a0af2a0d030646748b683fc73f60af064736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 KECCAK256 0xA9 0xC2 0xA5 PUSH32 0x6209F7F2521024AC618E6A0AF2A0D030646748B683FC73F60AF064736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1407:2774:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e720a9c2a57f6209f7f2521024ac618e6a0af2a0d030646748b683fc73f60af064736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 KECCAK256 0xA9 0xC2 0xA5 PUSH32 0x6209F7F2521024AC618E6A0AF2A0D030646748B683FC73F60AF064736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1407:2774:9:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bb1c62e0c3e7a6559983a340dc7c49df2af9528361710304691b76111e32808164736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB SHR PUSH3 0xE0C3E7 0xA6 SSTORE SWAP10 DUP4 LOG3 BLOCKHASH 0xDC PUSH29 0x49DF2AF9528361710304691B76111E32808164736F6C63430008140033 ","sourceMap":"297:18980:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bb1c62e0c3e7a6559983a340dc7c49df2af9528361710304691b76111e32808164736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB SHR PUSH3 0xE0C3E7 0xA6 SSTORE SWAP10 DUP4 LOG3 BLOCKHASH 0xDC PUSH29 0x49DF2AF9528361710304691B76111E32808164736F6C63430008140033 ","sourceMap":"297:18980:10:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ea78b0f46ee7f082d029812a528a5e0e5f3a1c646f4731a18cadc8ee8ad0f14364736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA PUSH25 0xB0F46EE7F082D029812A528A5E0E5F3A1C646F4731A18CADC8 0xEE DUP11 0xD0 CALL NUMBER PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"344:7470:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ea78b0f46ee7f082d029812a528a5e0e5f3a1c646f4731a18cadc8ee8ad0f14364736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA PUSH25 0xB0F46EE7F082D029812A528A5E0E5F3A1C646F4731A18CADC8 0xEE DUP11 0xD0 CALL NUMBER PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"344:7470:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x0c60057e7351874f086db8dc9291b7ada9ad62cb7725befd2991430d04a74572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33cdfd1fc36410d45046f88ff9864350146b194736c32834baa38d99b843ffbe\",\"dweb:/ipfs/QmdVmqgFKjgEBURy4KUwWDA6J1LEg1BKcHcXsx4nkeHAD2\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122023a4bfdfc26484b5ed55f5037e19ca157d2a10228e6da7e114d845ad5cd85c8564736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 LOG4 0xBF 0xDF 0xC2 PUSH5 0x84B5ED55F5 SUB PUSH31 0x19CA157D2A10228E6DA7E114D845AD5CD85C8564736F6C6343000814003300 ","sourceMap":"521:3729:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122023a4bfdfc26484b5ed55f5037e19ca157d2a10228e6da7e114d845ad5cd85c8564736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 LOG4 0xBF 0xDF 0xC2 PUSH5 0x84B5ED55F5 SUB PUSH31 0x19CA157D2A10228E6DA7E114D845AD5CD85C8564736F6C6343000814003300 ","sourceMap":"521:3729:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220edaafa2b4bf2e693fe8ad63e033022e5f66b1ea153282004d8fbf7c3431f804e64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED 0xAA STATICCALL 0x2B 0x4B CALLCODE 0xE6 SWAP4 INVALID DUP11 0xD6 RETURNDATACOPY SUB ADDRESS 0x22 0xE5 0xF6 PUSH12 0x1EA153282004D8FBF7C3431F DUP1 0x4E PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:31863:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220edaafa2b4bf2e693fe8ad63e033022e5f66b1ea153282004d8fbf7c3431f804e64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED 0xAA STATICCALL 0x2B 0x4B CALLCODE 0xE6 SWAP4 INVALID DUP11 0xD6 RETURNDATACOPY SUB ADDRESS 0x22 0xE5 0xF6 PUSH12 0x1EA153282004D8FBF7C3431F DUP1 0x4E PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:31863:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220316339f60b3fd1858de7f836dab11b96a56ba64a0fc65a8a88172d93a655ae7464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE PUSH4 0x39F60B3F 0xD1 DUP6 DUP14 0xE7 0xF8 CALLDATASIZE 0xDA 0xB1 SHL SWAP7 0xA5 PUSH12 0xA64A0FC65A8A88172D93A655 0xAE PUSH21 0x64736F6C6343000814003300000000000000000000 ","sourceMap":"769:34173:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220316339f60b3fd1858de7f836dab11b96a56ba64a0fc65a8a88172d93a655ae7464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE PUSH4 0x39F60B3F 0xD1 DUP6 DUP14 0xE7 0xF8 CALLDATASIZE 0xDA 0xB1 SHL SWAP7 0xA5 PUSH12 0xA64A0FC65A8A88172D93A655 0xAE PUSH21 0x64736F6C6343000814003300000000000000000000 ","sourceMap":"769:34173:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220473cbf930ed596e4ec76a1dda41503ab8a3aef35c98db76f2bcec0ef4066bcb664736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE EXTCODECOPY 0xBF SWAP4 0xE 0xD5 SWAP7 0xE4 0xEC PUSH23 0xA1DDA41503AB8A3AEF35C98DB76F2BCEC0EF4066BCB664 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"258:2354:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220473cbf930ed596e4ec76a1dda41503ab8a3aef35c98db76f2bcec0ef4066bcb664736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE EXTCODECOPY 0xBF SWAP4 0xE 0xD5 SWAP7 0xE4 0xEC PUSH23 0xA1DDA41503AB8A3AEF35C98DB76F2BCEC0EF4066BCB664 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"258:2354:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/Marketplace.sol":{"Marketplace":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"address","name":"initialOwner","type":"address"},{"internalType":"address","name":"_platformFeeRecipient","type":"address"},{"internalType":"uint256","name":"_platformFeePercent","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"nftAddress","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"address","name":"user","type":"address"}],"name":"OrderCancelled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"seller","type":"address"},{"indexed":true,"internalType":"address","name":"buyer","type":"address"},{"indexed":false,"internalType":"address","name":"nftAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"}],"name":"OrderFulfilled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"oldFeePercent","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newFeePercent","type":"uint256"}],"name":"PlatformFeePercentUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"oldRecipient","type":"address"},{"indexed":false,"internalType":"address","name":"newRecipient","type":"address"}],"name":"PlatformFeeRecipientUpdated","type":"event"},{"inputs":[{"components":[{"internalType":"address","name":"seller","type":"address"},{"internalType":"address","name":"buyer","type":"address"},{"internalType":"address","name":"nftAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"currency","type":"address"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"internalType":"struct Marketplace.Order","name":"order","type":"tuple"}],"name":"cancelOrder","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"seller","type":"address"},{"internalType":"address","name":"buyer","type":"address"},{"internalType":"address","name":"nftAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"currency","type":"address"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"internalType":"struct Marketplace.Order","name":"order","type":"tuple"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"fulfillOffer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"seller","type":"address"},{"internalType":"address","name":"buyer","type":"address"},{"internalType":"address","name":"nftAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"currency","type":"address"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"internalType":"struct Marketplace.Order","name":"order","type":"tuple"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"fulfillOrder","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"incrementNonce","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"orderStatus","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"platformFeePercent","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"platformFeeRecipient","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newFeePercent","type":"uint256"}],"name":"setPlatformFeePercent","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newRecipient","type":"address"}],"name":"setPlatformFeeRecipient","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"userNonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_2726":{"entryPoint":null,"id":2726,"parameterSlots":2,"returnSlots":0},"@_491":{"entryPoint":null,"id":491,"parameterSlots":0,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_6609":{"entryPoint":null,"id":6609,"parameterSlots":5,"returnSlots":0},"@_buildDomainSeparator_2773":{"entryPoint":858,"id":2773,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_146":{"entryPoint":574,"id":146,"parameterSlots":1,"returnSlots":0},"@getStringSlot_856":{"entryPoint":1060,"id":856,"parameterSlots":1,"returnSlots":1},"@toShortStringWithFallback_696":{"entryPoint":770,"id":696,"parameterSlots":2,"returnSlots":1},"@toShortString_598":{"entryPoint":951,"id":598,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":1347,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":1551,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":1422,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":1610,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_addresst_uint256_fromMemory":{"entryPoint":1633,"id":null,"parameterSlots":2,"returnSlots":5},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1831,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":2826,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2953,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_fc683099c882a9b602caa77f81b8e2530e69b20f829392585b0207e8d63a65a1_to_t_string_memory_ptr_fromStack":{"entryPoint":1935,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2843,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1848,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":2860,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3018,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fc683099c882a9b602caa77f81b8e2530e69b20f829392585b0207e8d63a65a1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1974,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":1218,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":1070,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":1249,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_bytes_memory_ptr":{"entryPoint":3065,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":2119,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":3054,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2008,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1877,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":2430,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":1505,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":2816,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1473,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1574,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":2391,"id":null,"parameterSlots":2,"returnSlots":0},"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32":{"entryPoint":3104,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":2265,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":2585,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":1303,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":2140,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":2066,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":2555,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":1164,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":2255,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":2523,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":2019,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1117,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":2305,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_bytes32":{"entryPoint":3081,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":1090,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":1095,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":1085,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1080,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":1100,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":2156,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":2510,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":2363,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_fc683099c882a9b602caa77f81b8e2530e69b20f829392585b0207e8d63a65a1":{"entryPoint":1894,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":2169,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":2315,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1525,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":1584,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":2358,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:14025:19","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:19","statements":[{"nodeType":"YulAssignment","src":"57:19:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:19","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:19"},"nodeType":"YulFunctionCall","src":"67:9:19"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:19"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:19","type":""}],"src":"7:75:19"},{"body":{"nodeType":"YulBlock","src":"177:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:19"},"nodeType":"YulFunctionCall","src":"187:12:19"},"nodeType":"YulExpressionStatement","src":"187:12:19"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:19"},{"body":{"nodeType":"YulBlock","src":"300:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:19"},"nodeType":"YulFunctionCall","src":"310:12:19"},"nodeType":"YulExpressionStatement","src":"310:12:19"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:19"},{"body":{"nodeType":"YulBlock","src":"423:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:19"},"nodeType":"YulFunctionCall","src":"433:12:19"},"nodeType":"YulExpressionStatement","src":"433:12:19"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:19"},{"body":{"nodeType":"YulBlock","src":"546:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:19"},"nodeType":"YulFunctionCall","src":"556:12:19"},"nodeType":"YulExpressionStatement","src":"556:12:19"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:19"},{"body":{"nodeType":"YulBlock","src":"628:54:19","statements":[{"nodeType":"YulAssignment","src":"638:38:19","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:19","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:19"},"nodeType":"YulFunctionCall","src":"652:14:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:19","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:19"},"nodeType":"YulFunctionCall","src":"668:7:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:19"},"nodeType":"YulFunctionCall","src":"648:28:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:19"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:19","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:19","type":""}],"src":"580:102:19"},{"body":{"nodeType":"YulBlock","src":"716:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:19"},"nodeType":"YulFunctionCall","src":"726:88:19"},"nodeType":"YulExpressionStatement","src":"726:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:19","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:19"},"nodeType":"YulFunctionCall","src":"823:15:19"},"nodeType":"YulExpressionStatement","src":"823:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:19"},"nodeType":"YulFunctionCall","src":"847:15:19"},"nodeType":"YulExpressionStatement","src":"847:15:19"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:19"},{"body":{"nodeType":"YulBlock","src":"917:238:19","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:19","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:19"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:19"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:19"},"nodeType":"YulFunctionCall","src":"957:27:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:19"},"nodeType":"YulFunctionCall","src":"945:40:19"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:19"},"nodeType":"YulFunctionCall","src":"1098:18:19"},"nodeType":"YulExpressionStatement","src":"1098:18:19"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:19"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:19"},"nodeType":"YulFunctionCall","src":"1036:34:19"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:19"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:19"},"nodeType":"YulFunctionCall","src":"1072:22:19"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:19"},"nodeType":"YulFunctionCall","src":"1033:62:19"},"nodeType":"YulIf","src":"1030:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:19","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:19"},"nodeType":"YulFunctionCall","src":"1127:22:19"},"nodeType":"YulExpressionStatement","src":"1127:22:19"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:19","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:19","type":""}],"src":"874:281:19"},{"body":{"nodeType":"YulBlock","src":"1202:88:19","statements":[{"nodeType":"YulAssignment","src":"1212:30:19","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:19"},"nodeType":"YulFunctionCall","src":"1222:20:19"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:19"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:19"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:19"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:19"},"nodeType":"YulFunctionCall","src":"1251:33:19"},"nodeType":"YulExpressionStatement","src":"1251:33:19"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:19","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:19","type":""}],"src":"1161:129:19"},{"body":{"nodeType":"YulBlock","src":"1363:241:19","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:19"},"nodeType":"YulFunctionCall","src":"1470:18:19"},"nodeType":"YulExpressionStatement","src":"1470:18:19"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:19"},"nodeType":"YulFunctionCall","src":"1437:30:19"},"nodeType":"YulIf","src":"1434:56:19"},{"nodeType":"YulAssignment","src":"1500:37:19","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:19"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:19"},"nodeType":"YulFunctionCall","src":"1508:29:19"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:19"}]},{"nodeType":"YulAssignment","src":"1574:23:19","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:19"},"nodeType":"YulFunctionCall","src":"1582:15:19"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:19"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:19","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:19","type":""}],"src":"1296:308:19"},{"body":{"nodeType":"YulBlock","src":"1672:184:19","statements":[{"nodeType":"YulVariableDeclaration","src":"1682:10:19","value":{"kind":"number","nodeType":"YulLiteral","src":"1691:1:19","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1686:1:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"1751:63:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1776:3:19"},{"name":"i","nodeType":"YulIdentifier","src":"1781:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:19"},"nodeType":"YulFunctionCall","src":"1772:11:19"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1795:3:19"},{"name":"i","nodeType":"YulIdentifier","src":"1800:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1791:3:19"},"nodeType":"YulFunctionCall","src":"1791:11:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1785:5:19"},"nodeType":"YulFunctionCall","src":"1785:18:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1765:6:19"},"nodeType":"YulFunctionCall","src":"1765:39:19"},"nodeType":"YulExpressionStatement","src":"1765:39:19"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:19"},{"name":"length","nodeType":"YulIdentifier","src":"1715:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1709:2:19"},"nodeType":"YulFunctionCall","src":"1709:13:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1723:19:19","statements":[{"nodeType":"YulAssignment","src":"1725:15:19","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1734:1:19"},{"kind":"number","nodeType":"YulLiteral","src":"1737:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:19"},"nodeType":"YulFunctionCall","src":"1730:10:19"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1725:1:19"}]}]},"pre":{"nodeType":"YulBlock","src":"1705:3:19","statements":[]},"src":"1701:113:19"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1834:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"1839:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1830:3:19"},"nodeType":"YulFunctionCall","src":"1830:16:19"},{"kind":"number","nodeType":"YulLiteral","src":"1848:1:19","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1823:6:19"},"nodeType":"YulFunctionCall","src":"1823:27:19"},"nodeType":"YulExpressionStatement","src":"1823:27:19"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1654:3:19","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1659:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"1664:6:19","type":""}],"src":"1610:246:19"},{"body":{"nodeType":"YulBlock","src":"1957:339:19","statements":[{"nodeType":"YulAssignment","src":"1967:75:19","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2034:6:19"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1992:41:19"},"nodeType":"YulFunctionCall","src":"1992:49:19"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1976:15:19"},"nodeType":"YulFunctionCall","src":"1976:66:19"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1967:5:19"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2058:5:19"},{"name":"length","nodeType":"YulIdentifier","src":"2065:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2051:6:19"},"nodeType":"YulFunctionCall","src":"2051:21:19"},"nodeType":"YulExpressionStatement","src":"2051:21:19"},{"nodeType":"YulVariableDeclaration","src":"2081:27:19","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2096:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"2103:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2092:3:19"},"nodeType":"YulFunctionCall","src":"2092:16:19"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2085:3:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"2146:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2148:77:19"},"nodeType":"YulFunctionCall","src":"2148:79:19"},"nodeType":"YulExpressionStatement","src":"2148:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2127:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"2132:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2123:3:19"},"nodeType":"YulFunctionCall","src":"2123:16:19"},{"name":"end","nodeType":"YulIdentifier","src":"2141:3:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2120:2:19"},"nodeType":"YulFunctionCall","src":"2120:25:19"},"nodeType":"YulIf","src":"2117:112:19"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2273:3:19"},{"name":"dst","nodeType":"YulIdentifier","src":"2278:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"2283:6:19"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2238:34:19"},"nodeType":"YulFunctionCall","src":"2238:52:19"},"nodeType":"YulExpressionStatement","src":"2238:52:19"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1930:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"1935:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"1943:3:19","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1951:5:19","type":""}],"src":"1862:434:19"},{"body":{"nodeType":"YulBlock","src":"2389:282:19","statements":[{"body":{"nodeType":"YulBlock","src":"2438:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2440:77:19"},"nodeType":"YulFunctionCall","src":"2440:79:19"},"nodeType":"YulExpressionStatement","src":"2440:79:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2417:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"2425:4:19","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2413:3:19"},"nodeType":"YulFunctionCall","src":"2413:17:19"},{"name":"end","nodeType":"YulIdentifier","src":"2432:3:19"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2409:3:19"},"nodeType":"YulFunctionCall","src":"2409:27:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2402:6:19"},"nodeType":"YulFunctionCall","src":"2402:35:19"},"nodeType":"YulIf","src":"2399:122:19"},{"nodeType":"YulVariableDeclaration","src":"2530:27:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2550:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2544:5:19"},"nodeType":"YulFunctionCall","src":"2544:13:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2534:6:19","type":""}]},{"nodeType":"YulAssignment","src":"2566:99:19","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2638:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"2646:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2634:3:19"},"nodeType":"YulFunctionCall","src":"2634:17:19"},{"name":"length","nodeType":"YulIdentifier","src":"2653:6:19"},{"name":"end","nodeType":"YulIdentifier","src":"2661:3:19"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2575:58:19"},"nodeType":"YulFunctionCall","src":"2575:90:19"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2566:5:19"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2367:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"2375:3:19","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2383:5:19","type":""}],"src":"2316:355:19"},{"body":{"nodeType":"YulBlock","src":"2722:81:19","statements":[{"nodeType":"YulAssignment","src":"2732:65:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2747:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"2754:42:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2743:3:19"},"nodeType":"YulFunctionCall","src":"2743:54:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2732:7:19"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2704:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2714:7:19","type":""}],"src":"2677:126:19"},{"body":{"nodeType":"YulBlock","src":"2854:51:19","statements":[{"nodeType":"YulAssignment","src":"2864:35:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2893:5:19"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"2875:17:19"},"nodeType":"YulFunctionCall","src":"2875:24:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2864:7:19"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2836:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2846:7:19","type":""}],"src":"2809:96:19"},{"body":{"nodeType":"YulBlock","src":"2954:79:19","statements":[{"body":{"nodeType":"YulBlock","src":"3011:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3020:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3023:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3013:6:19"},"nodeType":"YulFunctionCall","src":"3013:12:19"},"nodeType":"YulExpressionStatement","src":"3013:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2977:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3002:5:19"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2984:17:19"},"nodeType":"YulFunctionCall","src":"2984:24:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2974:2:19"},"nodeType":"YulFunctionCall","src":"2974:35:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2967:6:19"},"nodeType":"YulFunctionCall","src":"2967:43:19"},"nodeType":"YulIf","src":"2964:63:19"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2947:5:19","type":""}],"src":"2911:122:19"},{"body":{"nodeType":"YulBlock","src":"3102:80:19","statements":[{"nodeType":"YulAssignment","src":"3112:22:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3127:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3121:5:19"},"nodeType":"YulFunctionCall","src":"3121:13:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3112:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3170:5:19"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"3143:26:19"},"nodeType":"YulFunctionCall","src":"3143:33:19"},"nodeType":"YulExpressionStatement","src":"3143:33:19"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3080:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"3088:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3096:5:19","type":""}],"src":"3039:143:19"},{"body":{"nodeType":"YulBlock","src":"3233:32:19","statements":[{"nodeType":"YulAssignment","src":"3243:16:19","value":{"name":"value","nodeType":"YulIdentifier","src":"3254:5:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3243:7:19"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3215:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3225:7:19","type":""}],"src":"3188:77:19"},{"body":{"nodeType":"YulBlock","src":"3314:79:19","statements":[{"body":{"nodeType":"YulBlock","src":"3371:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3380:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3383:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3373:6:19"},"nodeType":"YulFunctionCall","src":"3373:12:19"},"nodeType":"YulExpressionStatement","src":"3373:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3337:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3362:5:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3344:17:19"},"nodeType":"YulFunctionCall","src":"3344:24:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3334:2:19"},"nodeType":"YulFunctionCall","src":"3334:35:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3327:6:19"},"nodeType":"YulFunctionCall","src":"3327:43:19"},"nodeType":"YulIf","src":"3324:63:19"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3307:5:19","type":""}],"src":"3271:122:19"},{"body":{"nodeType":"YulBlock","src":"3462:80:19","statements":[{"nodeType":"YulAssignment","src":"3472:22:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3487:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3481:5:19"},"nodeType":"YulFunctionCall","src":"3481:13:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3472:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3530:5:19"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3503:26:19"},"nodeType":"YulFunctionCall","src":"3503:33:19"},"nodeType":"YulExpressionStatement","src":"3503:33:19"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3440:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"3448:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3456:5:19","type":""}],"src":"3399:143:19"},{"body":{"nodeType":"YulBlock","src":"3713:1158:19","statements":[{"body":{"nodeType":"YulBlock","src":"3760:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3762:77:19"},"nodeType":"YulFunctionCall","src":"3762:79:19"},"nodeType":"YulExpressionStatement","src":"3762:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3734:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"3743:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3730:3:19"},"nodeType":"YulFunctionCall","src":"3730:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"3755:3:19","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3726:3:19"},"nodeType":"YulFunctionCall","src":"3726:33:19"},"nodeType":"YulIf","src":"3723:120:19"},{"nodeType":"YulBlock","src":"3853:291:19","statements":[{"nodeType":"YulVariableDeclaration","src":"3868:38:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3892:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"3903:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3888:3:19"},"nodeType":"YulFunctionCall","src":"3888:17:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3882:5:19"},"nodeType":"YulFunctionCall","src":"3882:24:19"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3872:6:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"3953:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3955:77:19"},"nodeType":"YulFunctionCall","src":"3955:79:19"},"nodeType":"YulExpressionStatement","src":"3955:79:19"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3925:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"3933:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3922:2:19"},"nodeType":"YulFunctionCall","src":"3922:30:19"},"nodeType":"YulIf","src":"3919:117:19"},{"nodeType":"YulAssignment","src":"4050:84:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4106:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"4117:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4102:3:19"},"nodeType":"YulFunctionCall","src":"4102:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4126:7:19"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"4060:41:19"},"nodeType":"YulFunctionCall","src":"4060:74:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4050:6:19"}]}]},{"nodeType":"YulBlock","src":"4154:292:19","statements":[{"nodeType":"YulVariableDeclaration","src":"4169:39:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4193:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"4204:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4189:3:19"},"nodeType":"YulFunctionCall","src":"4189:18:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4183:5:19"},"nodeType":"YulFunctionCall","src":"4183:25:19"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4173:6:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"4255:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"4257:77:19"},"nodeType":"YulFunctionCall","src":"4257:79:19"},"nodeType":"YulExpressionStatement","src":"4257:79:19"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4227:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"4235:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4224:2:19"},"nodeType":"YulFunctionCall","src":"4224:30:19"},"nodeType":"YulIf","src":"4221:117:19"},{"nodeType":"YulAssignment","src":"4352:84:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4408:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"4419:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4404:3:19"},"nodeType":"YulFunctionCall","src":"4404:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4428:7:19"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"4362:41:19"},"nodeType":"YulFunctionCall","src":"4362:74:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4352:6:19"}]}]},{"nodeType":"YulBlock","src":"4456:129:19","statements":[{"nodeType":"YulVariableDeclaration","src":"4471:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"4485:2:19","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4475:6:19","type":""}]},{"nodeType":"YulAssignment","src":"4501:74:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4547:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"4558:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4543:3:19"},"nodeType":"YulFunctionCall","src":"4543:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4567:7:19"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"4511:31:19"},"nodeType":"YulFunctionCall","src":"4511:64:19"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4501:6:19"}]}]},{"nodeType":"YulBlock","src":"4595:129:19","statements":[{"nodeType":"YulVariableDeclaration","src":"4610:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"4624:2:19","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4614:6:19","type":""}]},{"nodeType":"YulAssignment","src":"4640:74:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4686:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"4697:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4682:3:19"},"nodeType":"YulFunctionCall","src":"4682:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4706:7:19"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"4650:31:19"},"nodeType":"YulFunctionCall","src":"4650:64:19"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4640:6:19"}]}]},{"nodeType":"YulBlock","src":"4734:130:19","statements":[{"nodeType":"YulVariableDeclaration","src":"4749:17:19","value":{"kind":"number","nodeType":"YulLiteral","src":"4763:3:19","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4753:6:19","type":""}]},{"nodeType":"YulAssignment","src":"4780:74:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4826:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"4837:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4822:3:19"},"nodeType":"YulFunctionCall","src":"4822:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4846:7:19"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"4790:31:19"},"nodeType":"YulFunctionCall","src":"4790:64:19"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"4780:6:19"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_addresst_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3651:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3662:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3674:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3682:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3690:6:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3698:6:19","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3706:6:19","type":""}],"src":"3548:1323:19"},{"body":{"nodeType":"YulBlock","src":"4942:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4959:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4982:5:19"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4964:17:19"},"nodeType":"YulFunctionCall","src":"4964:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4952:6:19"},"nodeType":"YulFunctionCall","src":"4952:37:19"},"nodeType":"YulExpressionStatement","src":"4952:37:19"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4930:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4937:3:19","type":""}],"src":"4877:118:19"},{"body":{"nodeType":"YulBlock","src":"5099:124:19","statements":[{"nodeType":"YulAssignment","src":"5109:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5121:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"5132:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5117:3:19"},"nodeType":"YulFunctionCall","src":"5117:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5109:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5189:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5202:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"5213:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5198:3:19"},"nodeType":"YulFunctionCall","src":"5198:17:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5145:43:19"},"nodeType":"YulFunctionCall","src":"5145:71:19"},"nodeType":"YulExpressionStatement","src":"5145:71:19"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5071:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5083:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5094:4:19","type":""}],"src":"5001:222:19"},{"body":{"nodeType":"YulBlock","src":"5325:73:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5342:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"5347:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5335:6:19"},"nodeType":"YulFunctionCall","src":"5335:19:19"},"nodeType":"YulExpressionStatement","src":"5335:19:19"},{"nodeType":"YulAssignment","src":"5363:29:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5382:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"5387:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5378:3:19"},"nodeType":"YulFunctionCall","src":"5378:14:19"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"5363:11:19"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5297:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"5302:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"5313:11:19","type":""}],"src":"5229:169:19"},{"body":{"nodeType":"YulBlock","src":"5510:68:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5532:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"5540:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5528:3:19"},"nodeType":"YulFunctionCall","src":"5528:14:19"},{"hexValue":"526563697069656e742063616e6e6f74206265207a65726f","kind":"string","nodeType":"YulLiteral","src":"5544:26:19","type":"","value":"Recipient cannot be zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5521:6:19"},"nodeType":"YulFunctionCall","src":"5521:50:19"},"nodeType":"YulExpressionStatement","src":"5521:50:19"}]},"name":"store_literal_in_memory_fc683099c882a9b602caa77f81b8e2530e69b20f829392585b0207e8d63a65a1","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"5502:6:19","type":""}],"src":"5404:174:19"},{"body":{"nodeType":"YulBlock","src":"5730:220:19","statements":[{"nodeType":"YulAssignment","src":"5740:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5806:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"5811:2:19","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5747:58:19"},"nodeType":"YulFunctionCall","src":"5747:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5740:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5912:3:19"}],"functionName":{"name":"store_literal_in_memory_fc683099c882a9b602caa77f81b8e2530e69b20f829392585b0207e8d63a65a1","nodeType":"YulIdentifier","src":"5823:88:19"},"nodeType":"YulFunctionCall","src":"5823:93:19"},"nodeType":"YulExpressionStatement","src":"5823:93:19"},{"nodeType":"YulAssignment","src":"5925:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5936:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"5941:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5932:3:19"},"nodeType":"YulFunctionCall","src":"5932:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5925:3:19"}]}]},"name":"abi_encode_t_stringliteral_fc683099c882a9b602caa77f81b8e2530e69b20f829392585b0207e8d63a65a1_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5718:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5726:3:19","type":""}],"src":"5584:366:19"},{"body":{"nodeType":"YulBlock","src":"6127:248:19","statements":[{"nodeType":"YulAssignment","src":"6137:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6149:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"6160:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6145:3:19"},"nodeType":"YulFunctionCall","src":"6145:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6137:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6184:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"6195:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6180:3:19"},"nodeType":"YulFunctionCall","src":"6180:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6203:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"6209:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6199:3:19"},"nodeType":"YulFunctionCall","src":"6199:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6173:6:19"},"nodeType":"YulFunctionCall","src":"6173:47:19"},"nodeType":"YulExpressionStatement","src":"6173:47:19"},{"nodeType":"YulAssignment","src":"6229:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6363:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_fc683099c882a9b602caa77f81b8e2530e69b20f829392585b0207e8d63a65a1_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6237:124:19"},"nodeType":"YulFunctionCall","src":"6237:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6229:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc683099c882a9b602caa77f81b8e2530e69b20f829392585b0207e8d63a65a1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6107:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6122:4:19","type":""}],"src":"5956:419:19"},{"body":{"nodeType":"YulBlock","src":"6440:40:19","statements":[{"nodeType":"YulAssignment","src":"6451:22:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6467:5:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6461:5:19"},"nodeType":"YulFunctionCall","src":"6461:12:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6451:6:19"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6423:5:19","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"6433:6:19","type":""}],"src":"6381:99:19"},{"body":{"nodeType":"YulBlock","src":"6514:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6531:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6534:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6524:6:19"},"nodeType":"YulFunctionCall","src":"6524:88:19"},"nodeType":"YulExpressionStatement","src":"6524:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6628:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6631:4:19","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6621:6:19"},"nodeType":"YulFunctionCall","src":"6621:15:19"},"nodeType":"YulExpressionStatement","src":"6621:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6652:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6655:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6645:6:19"},"nodeType":"YulFunctionCall","src":"6645:15:19"},"nodeType":"YulExpressionStatement","src":"6645:15:19"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"6486:180:19"},{"body":{"nodeType":"YulBlock","src":"6723:269:19","statements":[{"nodeType":"YulAssignment","src":"6733:22:19","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6747:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"6753:1:19","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6743:3:19"},"nodeType":"YulFunctionCall","src":"6743:12:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6733:6:19"}]},{"nodeType":"YulVariableDeclaration","src":"6764:38:19","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6794:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"6800:1:19","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6790:3:19"},"nodeType":"YulFunctionCall","src":"6790:12:19"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"6768:18:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"6841:51:19","statements":[{"nodeType":"YulAssignment","src":"6855:27:19","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6869:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"6877:4:19","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6865:3:19"},"nodeType":"YulFunctionCall","src":"6865:17:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6855:6:19"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6821:18:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6814:6:19"},"nodeType":"YulFunctionCall","src":"6814:26:19"},"nodeType":"YulIf","src":"6811:81:19"},{"body":{"nodeType":"YulBlock","src":"6944:42:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"6958:16:19"},"nodeType":"YulFunctionCall","src":"6958:18:19"},"nodeType":"YulExpressionStatement","src":"6958:18:19"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6908:18:19"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6931:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"6939:2:19","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6928:2:19"},"nodeType":"YulFunctionCall","src":"6928:14:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6905:2:19"},"nodeType":"YulFunctionCall","src":"6905:38:19"},"nodeType":"YulIf","src":"6902:84:19"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6707:4:19","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"6716:6:19","type":""}],"src":"6672:320:19"},{"body":{"nodeType":"YulBlock","src":"7052:87:19","statements":[{"nodeType":"YulAssignment","src":"7062:11:19","value":{"name":"ptr","nodeType":"YulIdentifier","src":"7070:3:19"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7062:4:19"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7090:1:19","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"7093:3:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7083:6:19"},"nodeType":"YulFunctionCall","src":"7083:14:19"},"nodeType":"YulExpressionStatement","src":"7083:14:19"},{"nodeType":"YulAssignment","src":"7106:26:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7124:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7127:4:19","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"7114:9:19"},"nodeType":"YulFunctionCall","src":"7114:18:19"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7106:4:19"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"7039:3:19","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"7047:4:19","type":""}],"src":"6998:141:19"},{"body":{"nodeType":"YulBlock","src":"7189:49:19","statements":[{"nodeType":"YulAssignment","src":"7199:33:19","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7217:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"7224:2:19","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7213:3:19"},"nodeType":"YulFunctionCall","src":"7213:14:19"},{"kind":"number","nodeType":"YulLiteral","src":"7229:2:19","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7209:3:19"},"nodeType":"YulFunctionCall","src":"7209:23:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"7199:6:19"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7172:5:19","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"7182:6:19","type":""}],"src":"7145:93:19"},{"body":{"nodeType":"YulBlock","src":"7297:54:19","statements":[{"nodeType":"YulAssignment","src":"7307:37:19","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"7332:4:19"},{"name":"value","nodeType":"YulIdentifier","src":"7338:5:19"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7328:3:19"},"nodeType":"YulFunctionCall","src":"7328:16:19"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"7307:8:19"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"7272:4:19","type":""},{"name":"value","nodeType":"YulTypedName","src":"7278:5:19","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"7288:8:19","type":""}],"src":"7244:107:19"},{"body":{"nodeType":"YulBlock","src":"7433:317:19","statements":[{"nodeType":"YulVariableDeclaration","src":"7443:35:19","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"7464:10:19"},{"kind":"number","nodeType":"YulLiteral","src":"7476:1:19","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7460:3:19"},"nodeType":"YulFunctionCall","src":"7460:18:19"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"7447:9:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7487:109:19","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"7518:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"7529:66:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"7499:18:19"},"nodeType":"YulFunctionCall","src":"7499:97:19"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"7491:4:19","type":""}]},{"nodeType":"YulAssignment","src":"7605:51:19","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"7636:9:19"},{"name":"toInsert","nodeType":"YulIdentifier","src":"7647:8:19"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"7617:18:19"},"nodeType":"YulFunctionCall","src":"7617:39:19"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"7605:8:19"}]},{"nodeType":"YulAssignment","src":"7665:30:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7678:5:19"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"7689:4:19"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7685:3:19"},"nodeType":"YulFunctionCall","src":"7685:9:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7674:3:19"},"nodeType":"YulFunctionCall","src":"7674:21:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7665:5:19"}]},{"nodeType":"YulAssignment","src":"7704:40:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7717:5:19"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"7728:8:19"},{"name":"mask","nodeType":"YulIdentifier","src":"7738:4:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7724:3:19"},"nodeType":"YulFunctionCall","src":"7724:19:19"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7714:2:19"},"nodeType":"YulFunctionCall","src":"7714:30:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"7704:6:19"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7394:5:19","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"7401:10:19","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"7413:8:19","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"7426:6:19","type":""}],"src":"7357:393:19"},{"body":{"nodeType":"YulBlock","src":"7788:28:19","statements":[{"nodeType":"YulAssignment","src":"7798:12:19","value":{"name":"value","nodeType":"YulIdentifier","src":"7805:5:19"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"7798:3:19"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7774:5:19","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"7784:3:19","type":""}],"src":"7756:60:19"},{"body":{"nodeType":"YulBlock","src":"7882:82:19","statements":[{"nodeType":"YulAssignment","src":"7892:66:19","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7950:5:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7932:17:19"},"nodeType":"YulFunctionCall","src":"7932:24:19"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"7923:8:19"},"nodeType":"YulFunctionCall","src":"7923:34:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"7905:17:19"},"nodeType":"YulFunctionCall","src":"7905:53:19"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"7892:9:19"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7862:5:19","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"7872:9:19","type":""}],"src":"7822:142:19"},{"body":{"nodeType":"YulBlock","src":"8017:28:19","statements":[{"nodeType":"YulAssignment","src":"8027:12:19","value":{"name":"value","nodeType":"YulIdentifier","src":"8034:5:19"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"8027:3:19"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8003:5:19","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"8013:3:19","type":""}],"src":"7970:75:19"},{"body":{"nodeType":"YulBlock","src":"8127:193:19","statements":[{"nodeType":"YulVariableDeclaration","src":"8137:63:19","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"8192:7:19"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"8161:30:19"},"nodeType":"YulFunctionCall","src":"8161:39:19"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"8141:16:19","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8216:4:19"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8256:4:19"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"8250:5:19"},"nodeType":"YulFunctionCall","src":"8250:11:19"},{"name":"offset","nodeType":"YulIdentifier","src":"8263:6:19"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"8295:16:19"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"8271:23:19"},"nodeType":"YulFunctionCall","src":"8271:41:19"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"8222:27:19"},"nodeType":"YulFunctionCall","src":"8222:91:19"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8209:6:19"},"nodeType":"YulFunctionCall","src":"8209:105:19"},"nodeType":"YulExpressionStatement","src":"8209:105:19"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"8104:4:19","type":""},{"name":"offset","nodeType":"YulTypedName","src":"8110:6:19","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"8118:7:19","type":""}],"src":"8051:269:19"},{"body":{"nodeType":"YulBlock","src":"8375:24:19","statements":[{"nodeType":"YulAssignment","src":"8385:8:19","value":{"kind":"number","nodeType":"YulLiteral","src":"8392:1:19","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"8385:3:19"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"8371:3:19","type":""}],"src":"8326:73:19"},{"body":{"nodeType":"YulBlock","src":"8458:136:19","statements":[{"nodeType":"YulVariableDeclaration","src":"8468:46:19","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"8482:30:19"},"nodeType":"YulFunctionCall","src":"8482:32:19"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"8472:6:19","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8567:4:19"},{"name":"offset","nodeType":"YulIdentifier","src":"8573:6:19"},{"name":"zero_0","nodeType":"YulIdentifier","src":"8581:6:19"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"8523:43:19"},"nodeType":"YulFunctionCall","src":"8523:65:19"},"nodeType":"YulExpressionStatement","src":"8523:65:19"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"8444:4:19","type":""},{"name":"offset","nodeType":"YulTypedName","src":"8450:6:19","type":""}],"src":"8405:189:19"},{"body":{"nodeType":"YulBlock","src":"8650:136:19","statements":[{"body":{"nodeType":"YulBlock","src":"8717:63:19","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"8761:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"8768:1:19","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"8731:29:19"},"nodeType":"YulFunctionCall","src":"8731:39:19"},"nodeType":"YulExpressionStatement","src":"8731:39:19"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"8670:5:19"},{"name":"end","nodeType":"YulIdentifier","src":"8677:3:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8667:2:19"},"nodeType":"YulFunctionCall","src":"8667:14:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8682:26:19","statements":[{"nodeType":"YulAssignment","src":"8684:22:19","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"8697:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"8704:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8693:3:19"},"nodeType":"YulFunctionCall","src":"8693:13:19"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"8684:5:19"}]}]},"pre":{"nodeType":"YulBlock","src":"8664:2:19","statements":[]},"src":"8660:120:19"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"8638:5:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"8645:3:19","type":""}],"src":"8600:186:19"},{"body":{"nodeType":"YulBlock","src":"8871:464:19","statements":[{"body":{"nodeType":"YulBlock","src":"8897:431:19","statements":[{"nodeType":"YulVariableDeclaration","src":"8911:54:19","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8959:5:19"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"8927:31:19"},"nodeType":"YulFunctionCall","src":"8927:38:19"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"8915:8:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"8978:63:19","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"9001:8:19"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"9029:10:19"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"9011:17:19"},"nodeType":"YulFunctionCall","src":"9011:29:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8997:3:19"},"nodeType":"YulFunctionCall","src":"8997:44:19"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"8982:11:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"9198:27:19","statements":[{"nodeType":"YulAssignment","src":"9200:23:19","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"9215:8:19"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"9200:11:19"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"9182:10:19"},{"kind":"number","nodeType":"YulLiteral","src":"9194:2:19","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9179:2:19"},"nodeType":"YulFunctionCall","src":"9179:18:19"},"nodeType":"YulIf","src":"9176:49:19"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"9267:11:19"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"9284:8:19"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"9312:3:19"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"9294:17:19"},"nodeType":"YulFunctionCall","src":"9294:22:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9280:3:19"},"nodeType":"YulFunctionCall","src":"9280:37:19"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"9238:28:19"},"nodeType":"YulFunctionCall","src":"9238:80:19"},"nodeType":"YulExpressionStatement","src":"9238:80:19"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"8888:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"8893:2:19","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8885:2:19"},"nodeType":"YulFunctionCall","src":"8885:11:19"},"nodeType":"YulIf","src":"8882:446:19"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"8847:5:19","type":""},{"name":"len","nodeType":"YulTypedName","src":"8854:3:19","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"8859:10:19","type":""}],"src":"8792:543:19"},{"body":{"nodeType":"YulBlock","src":"9404:54:19","statements":[{"nodeType":"YulAssignment","src":"9414:37:19","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"9439:4:19"},{"name":"value","nodeType":"YulIdentifier","src":"9445:5:19"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"9435:3:19"},"nodeType":"YulFunctionCall","src":"9435:16:19"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"9414:8:19"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"9379:4:19","type":""},{"name":"value","nodeType":"YulTypedName","src":"9385:5:19","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"9395:8:19","type":""}],"src":"9341:117:19"},{"body":{"nodeType":"YulBlock","src":"9515:118:19","statements":[{"nodeType":"YulVariableDeclaration","src":"9525:68:19","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9574:1:19","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"9577:5:19"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"9570:3:19"},"nodeType":"YulFunctionCall","src":"9570:13:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9589:1:19","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9585:3:19"},"nodeType":"YulFunctionCall","src":"9585:6:19"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"9541:28:19"},"nodeType":"YulFunctionCall","src":"9541:51:19"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9537:3:19"},"nodeType":"YulFunctionCall","src":"9537:56:19"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"9529:4:19","type":""}]},{"nodeType":"YulAssignment","src":"9602:25:19","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9616:4:19"},{"name":"mask","nodeType":"YulIdentifier","src":"9622:4:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9612:3:19"},"nodeType":"YulFunctionCall","src":"9612:15:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"9602:6:19"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"9492:4:19","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"9498:5:19","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"9508:6:19","type":""}],"src":"9464:169:19"},{"body":{"nodeType":"YulBlock","src":"9719:214:19","statements":[{"nodeType":"YulAssignment","src":"9852:37:19","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9879:4:19"},{"name":"len","nodeType":"YulIdentifier","src":"9885:3:19"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"9860:18:19"},"nodeType":"YulFunctionCall","src":"9860:29:19"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"9852:4:19"}]},{"nodeType":"YulAssignment","src":"9898:29:19","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"9909:4:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9919:1:19","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"9922:3:19"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"9915:3:19"},"nodeType":"YulFunctionCall","src":"9915:11:19"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"9906:2:19"},"nodeType":"YulFunctionCall","src":"9906:21:19"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"9898:4:19"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"9700:4:19","type":""},{"name":"len","nodeType":"YulTypedName","src":"9706:3:19","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"9714:4:19","type":""}],"src":"9638:295:19"},{"body":{"nodeType":"YulBlock","src":"10030:1303:19","statements":[{"nodeType":"YulVariableDeclaration","src":"10041:51:19","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10088:3:19"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"10055:32:19"},"nodeType":"YulFunctionCall","src":"10055:37:19"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"10045:6:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"10177:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"10179:16:19"},"nodeType":"YulFunctionCall","src":"10179:18:19"},"nodeType":"YulExpressionStatement","src":"10179:18:19"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"10149:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"10157:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10146:2:19"},"nodeType":"YulFunctionCall","src":"10146:30:19"},"nodeType":"YulIf","src":"10143:56:19"},{"nodeType":"YulVariableDeclaration","src":"10209:52:19","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"10255:4:19"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"10249:5:19"},"nodeType":"YulFunctionCall","src":"10249:11:19"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"10223:25:19"},"nodeType":"YulFunctionCall","src":"10223:38:19"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"10213:6:19","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"10354:4:19"},{"name":"oldLen","nodeType":"YulIdentifier","src":"10360:6:19"},{"name":"newLen","nodeType":"YulIdentifier","src":"10368:6:19"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"10308:45:19"},"nodeType":"YulFunctionCall","src":"10308:67:19"},"nodeType":"YulExpressionStatement","src":"10308:67:19"},{"nodeType":"YulVariableDeclaration","src":"10385:18:19","value":{"kind":"number","nodeType":"YulLiteral","src":"10402:1:19","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"10389:9:19","type":""}]},{"nodeType":"YulAssignment","src":"10413:17:19","value":{"kind":"number","nodeType":"YulLiteral","src":"10426:4:19","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"10413:9:19"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"10477:611:19","statements":[{"nodeType":"YulVariableDeclaration","src":"10491:37:19","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"10510:6:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10522:4:19","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"10518:3:19"},"nodeType":"YulFunctionCall","src":"10518:9:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10506:3:19"},"nodeType":"YulFunctionCall","src":"10506:22:19"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"10495:7:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10542:51:19","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"10588:4:19"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"10556:31:19"},"nodeType":"YulFunctionCall","src":"10556:37:19"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"10546:6:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"10606:10:19","value":{"kind":"number","nodeType":"YulLiteral","src":"10615:1:19","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"10610:1:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"10674:163:19","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"10699:6:19"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10717:3:19"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"10722:9:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10713:3:19"},"nodeType":"YulFunctionCall","src":"10713:19:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10707:5:19"},"nodeType":"YulFunctionCall","src":"10707:26:19"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"10692:6:19"},"nodeType":"YulFunctionCall","src":"10692:42:19"},"nodeType":"YulExpressionStatement","src":"10692:42:19"},{"nodeType":"YulAssignment","src":"10751:24:19","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"10765:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"10773:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10761:3:19"},"nodeType":"YulFunctionCall","src":"10761:14:19"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"10751:6:19"}]},{"nodeType":"YulAssignment","src":"10792:31:19","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"10809:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"10820:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10805:3:19"},"nodeType":"YulFunctionCall","src":"10805:18:19"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"10792:9:19"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10640:1:19"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"10643:7:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10637:2:19"},"nodeType":"YulFunctionCall","src":"10637:14:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"10652:21:19","statements":[{"nodeType":"YulAssignment","src":"10654:17:19","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"10663:1:19"},{"kind":"number","nodeType":"YulLiteral","src":"10666:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10659:3:19"},"nodeType":"YulFunctionCall","src":"10659:12:19"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"10654:1:19"}]}]},"pre":{"nodeType":"YulBlock","src":"10633:3:19","statements":[]},"src":"10629:208:19"},{"body":{"nodeType":"YulBlock","src":"10873:156:19","statements":[{"nodeType":"YulVariableDeclaration","src":"10891:43:19","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10918:3:19"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"10923:9:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10914:3:19"},"nodeType":"YulFunctionCall","src":"10914:19:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10908:5:19"},"nodeType":"YulFunctionCall","src":"10908:26:19"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"10895:9:19","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"10958:6:19"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"10985:9:19"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"11000:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"11008:4:19","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10996:3:19"},"nodeType":"YulFunctionCall","src":"10996:17:19"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"10966:18:19"},"nodeType":"YulFunctionCall","src":"10966:48:19"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"10951:6:19"},"nodeType":"YulFunctionCall","src":"10951:64:19"},"nodeType":"YulExpressionStatement","src":"10951:64:19"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"10856:7:19"},{"name":"newLen","nodeType":"YulIdentifier","src":"10865:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10853:2:19"},"nodeType":"YulFunctionCall","src":"10853:19:19"},"nodeType":"YulIf","src":"10850:179:19"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"11049:4:19"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"11063:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"11071:1:19","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11059:3:19"},"nodeType":"YulFunctionCall","src":"11059:14:19"},{"kind":"number","nodeType":"YulLiteral","src":"11075:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11055:3:19"},"nodeType":"YulFunctionCall","src":"11055:22:19"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"11042:6:19"},"nodeType":"YulFunctionCall","src":"11042:36:19"},"nodeType":"YulExpressionStatement","src":"11042:36:19"}]},"nodeType":"YulCase","src":"10470:618:19","value":{"kind":"number","nodeType":"YulLiteral","src":"10475:1:19","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"11105:222:19","statements":[{"nodeType":"YulVariableDeclaration","src":"11119:14:19","value":{"kind":"number","nodeType":"YulLiteral","src":"11132:1:19","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"11123:5:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"11156:67:19","statements":[{"nodeType":"YulAssignment","src":"11174:35:19","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11193:3:19"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"11198:9:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11189:3:19"},"nodeType":"YulFunctionCall","src":"11189:19:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11183:5:19"},"nodeType":"YulFunctionCall","src":"11183:26:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"11174:5:19"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"11149:6:19"},"nodeType":"YulIf","src":"11146:77:19"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"11243:4:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11302:5:19"},{"name":"newLen","nodeType":"YulIdentifier","src":"11309:6:19"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"11249:52:19"},"nodeType":"YulFunctionCall","src":"11249:67:19"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"11236:6:19"},"nodeType":"YulFunctionCall","src":"11236:81:19"},"nodeType":"YulExpressionStatement","src":"11236:81:19"}]},"nodeType":"YulCase","src":"11097:230:19","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"10450:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"10458:2:19","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10447:2:19"},"nodeType":"YulFunctionCall","src":"10447:14:19"},"nodeType":"YulSwitch","src":"10440:887:19"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"10019:4:19","type":""},{"name":"src","nodeType":"YulTypedName","src":"10025:3:19","type":""}],"src":"9938:1395:19"},{"body":{"nodeType":"YulBlock","src":"11384:32:19","statements":[{"nodeType":"YulAssignment","src":"11394:16:19","value":{"name":"value","nodeType":"YulIdentifier","src":"11405:5:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"11394:7:19"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11366:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"11376:7:19","type":""}],"src":"11339:77:19"},{"body":{"nodeType":"YulBlock","src":"11487:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11504:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11527:5:19"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"11509:17:19"},"nodeType":"YulFunctionCall","src":"11509:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11497:6:19"},"nodeType":"YulFunctionCall","src":"11497:37:19"},"nodeType":"YulExpressionStatement","src":"11497:37:19"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11475:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11482:3:19","type":""}],"src":"11422:118:19"},{"body":{"nodeType":"YulBlock","src":"11611:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11628:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11651:5:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11633:17:19"},"nodeType":"YulFunctionCall","src":"11633:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11621:6:19"},"nodeType":"YulFunctionCall","src":"11621:37:19"},"nodeType":"YulExpressionStatement","src":"11621:37:19"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11599:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11606:3:19","type":""}],"src":"11546:118:19"},{"body":{"nodeType":"YulBlock","src":"11880:454:19","statements":[{"nodeType":"YulAssignment","src":"11890:27:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11902:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"11913:3:19","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11898:3:19"},"nodeType":"YulFunctionCall","src":"11898:19:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11890:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11971:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11984:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"11995:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11980:3:19"},"nodeType":"YulFunctionCall","src":"11980:17:19"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"11927:43:19"},"nodeType":"YulFunctionCall","src":"11927:71:19"},"nodeType":"YulExpressionStatement","src":"11927:71:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12052:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12065:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"12076:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12061:3:19"},"nodeType":"YulFunctionCall","src":"12061:18:19"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"12008:43:19"},"nodeType":"YulFunctionCall","src":"12008:72:19"},"nodeType":"YulExpressionStatement","src":"12008:72:19"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"12134:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12147:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"12158:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12143:3:19"},"nodeType":"YulFunctionCall","src":"12143:18:19"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"12090:43:19"},"nodeType":"YulFunctionCall","src":"12090:72:19"},"nodeType":"YulExpressionStatement","src":"12090:72:19"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"12216:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12229:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"12240:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12225:3:19"},"nodeType":"YulFunctionCall","src":"12225:18:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"12172:43:19"},"nodeType":"YulFunctionCall","src":"12172:72:19"},"nodeType":"YulExpressionStatement","src":"12172:72:19"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"12298:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12311:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"12322:3:19","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12307:3:19"},"nodeType":"YulFunctionCall","src":"12307:19:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12254:43:19"},"nodeType":"YulFunctionCall","src":"12254:73:19"},"nodeType":"YulExpressionStatement","src":"12254:73:19"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11820:9:19","type":""},{"name":"value4","nodeType":"YulTypedName","src":"11832:6:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11840:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11848:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11856:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11864:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11875:4:19","type":""}],"src":"11670:664:19"},{"body":{"nodeType":"YulBlock","src":"12432:285:19","statements":[{"nodeType":"YulVariableDeclaration","src":"12442:53:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12489:5:19"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"12456:32:19"},"nodeType":"YulFunctionCall","src":"12456:39:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"12446:6:19","type":""}]},{"nodeType":"YulAssignment","src":"12504:78:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12570:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"12575:6:19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12511:58:19"},"nodeType":"YulFunctionCall","src":"12511:71:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12504:3:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12630:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"12637:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12626:3:19"},"nodeType":"YulFunctionCall","src":"12626:16:19"},{"name":"pos","nodeType":"YulIdentifier","src":"12644:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"12649:6:19"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"12591:34:19"},"nodeType":"YulFunctionCall","src":"12591:65:19"},"nodeType":"YulExpressionStatement","src":"12591:65:19"},{"nodeType":"YulAssignment","src":"12665:46:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12676:3:19"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12703:6:19"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"12681:21:19"},"nodeType":"YulFunctionCall","src":"12681:29:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12672:3:19"},"nodeType":"YulFunctionCall","src":"12672:39:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12665:3:19"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12413:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12420:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12428:3:19","type":""}],"src":"12340:377:19"},{"body":{"nodeType":"YulBlock","src":"12841:195:19","statements":[{"nodeType":"YulAssignment","src":"12851:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12863:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"12874:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12859:3:19"},"nodeType":"YulFunctionCall","src":"12859:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12851:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12898:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"12909:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12894:3:19"},"nodeType":"YulFunctionCall","src":"12894:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12917:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"12923:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12913:3:19"},"nodeType":"YulFunctionCall","src":"12913:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12887:6:19"},"nodeType":"YulFunctionCall","src":"12887:47:19"},"nodeType":"YulExpressionStatement","src":"12887:47:19"},{"nodeType":"YulAssignment","src":"12943:86:19","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13015:6:19"},{"name":"tail","nodeType":"YulIdentifier","src":"13024:4:19"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12951:63:19"},"nodeType":"YulFunctionCall","src":"12951:78:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12943:4:19"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12813:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12825:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12836:4:19","type":""}],"src":"12723:313:19"},{"body":{"nodeType":"YulBlock","src":"13100:40:19","statements":[{"nodeType":"YulAssignment","src":"13111:22:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13127:5:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13121:5:19"},"nodeType":"YulFunctionCall","src":"13121:12:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"13111:6:19"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13083:5:19","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"13093:6:19","type":""}],"src":"13042:98:19"},{"body":{"nodeType":"YulBlock","src":"13202:60:19","statements":[{"nodeType":"YulAssignment","src":"13212:11:19","value":{"name":"ptr","nodeType":"YulIdentifier","src":"13220:3:19"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"13212:4:19"}]},{"nodeType":"YulAssignment","src":"13233:22:19","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"13245:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"13250:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13241:3:19"},"nodeType":"YulFunctionCall","src":"13241:14:19"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"13233:4:19"}]}]},"name":"array_dataslot_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"13189:3:19","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"13197:4:19","type":""}],"src":"13146:116:19"},{"body":{"nodeType":"YulBlock","src":"13323:99:19","statements":[{"nodeType":"YulVariableDeclaration","src":"13334:42:19","value":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"13371:3:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13365:5:19"},"nodeType":"YulFunctionCall","src":"13365:10:19"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"13347:17:19"},"nodeType":"YulFunctionCall","src":"13347:29:19"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"13338:5:19","type":""}]},{"nodeType":"YulAssignment","src":"13386:29:19","value":{"name":"value","nodeType":"YulIdentifier","src":"13410:5:19"},"variableNames":[{"name":"returnValue","nodeType":"YulIdentifier","src":"13386:11:19"}]}]},"name":"read_from_memoryt_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"13303:3:19","type":""}],"returnVariables":[{"name":"returnValue","nodeType":"YulTypedName","src":"13311:11:19","type":""}],"src":"13268:154:19"},{"body":{"nodeType":"YulBlock","src":"13518:504:19","statements":[{"nodeType":"YulVariableDeclaration","src":"13529:52:19","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"13575:5:19"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"13543:31:19"},"nodeType":"YulFunctionCall","src":"13543:38:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"13533:6:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"13590:21:19","value":{"name":"array","nodeType":"YulIdentifier","src":"13606:5:19"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"13594:8:19","type":""}]},{"nodeType":"YulAssignment","src":"13621:52:19","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"13667:5:19"}],"functionName":{"name":"array_dataslot_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"13633:33:19"},"nodeType":"YulFunctionCall","src":"13633:40:19"},"variableNames":[{"name":"dataArea","nodeType":"YulIdentifier","src":"13621:8:19"}]},{"nodeType":"YulAssignment","src":"13683:44:19","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"13718:8:19"}],"functionName":{"name":"read_from_memoryt_bytes32","nodeType":"YulIdentifier","src":"13692:25:19"},"nodeType":"YulFunctionCall","src":"13692:35:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"13683:5:19"}]},{"body":{"nodeType":"YulBlock","src":"13755:260:19","statements":[{"nodeType":"YulAssignment","src":"13769:236:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13799:5:19"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13866:1:19","type":"","value":"8"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13873:2:19","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"13877:6:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13869:3:19"},"nodeType":"YulFunctionCall","src":"13869:15:19"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"13862:3:19"},"nodeType":"YulFunctionCall","src":"13862:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"13907:66:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"13822:18:19"},"nodeType":"YulFunctionCall","src":"13822:169:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13778:3:19"},"nodeType":"YulFunctionCall","src":"13778:227:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"13769:5:19"}]}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13743:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"13751:2:19","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13740:2:19"},"nodeType":"YulFunctionCall","src":"13740:14:19"},"nodeType":"YulIf","src":"13737:278:19"}]},"name":"convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"13502:5:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"13512:5:19","type":""}],"src":"13428:594:19"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_fc683099c882a9b602caa77f81b8e2530e69b20f829392585b0207e8d63a65a1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Recipient cannot be zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_fc683099c882a9b602caa77f81b8e2530e69b20f829392585b0207e8d63a65a1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_fc683099c882a9b602caa77f81b8e2530e69b20f829392585b0207e8d63a65a1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc683099c882a9b602caa77f81b8e2530e69b20f829392585b0207e8d63a65a1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc683099c882a9b602caa77f81b8e2530e69b20f829392585b0207e8d63a65a1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_dataslot_t_bytes_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function read_from_memoryt_bytes32(ptr) -> returnValue {\n\n        let value := cleanup_t_bytes32(mload(ptr))\n\n        returnValue :=\n\n        value\n\n    }\n\n    function convert_bytes_to_fixedbytes_from_t_bytes_memory_ptr_to_t_bytes32(array) -> value {\n\n        let length := array_length_t_bytes_memory_ptr(array)\n        let dataArea := array\n\n        dataArea := array_dataslot_t_bytes_memory_ptr(array)\n\n        value := read_from_memoryt_bytes32(dataArea)\n\n        if lt(length, 32) {\n            value := and(\n                value,\n                shift_left_dynamic(\n                    mul(8, sub(32, length)),\n                    0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n                )\n            )\n        }\n\n    }\n\n}\n","id":19,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6101606040523480156200001257600080fd5b5060405162003ae338038062003ae3833981810160405281019062000038919062000661565b848484600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000b05760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a7919062000738565b60405180910390fd5b620000c1816200023e60201b60201c565b5060018081905550620000df6002836200030260201b90919060201c565b6101208181525050620000fd6003826200030260201b90919060201c565b6101408181525050818051906020012060e08181525050808051906020012061010081815250504660a081815250506200013c6200035a60201b60201c565b608081815250503073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff16815250505050600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620001eb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001e290620007b6565b60405180910390fd5b81600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600581905550505050505062000c90565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600060208351101562000328576200032083620003b760201b60201c565b905062000354565b826200033a836200042460201b60201c565b60000190816200034b919062000a19565b5060ff60001b90505b92915050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60e0516101005146306040516020016200039c95949392919062000b2c565b60405160208183030381529060405280519060200120905090565b600080829050601f815111156200040757826040517f305a27a9000000000000000000000000000000000000000000000000000000008152600401620003fe919062000bca565b60405180910390fd5b805181620004159062000c20565b60001c1760001b915050919050565b6000819050919050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b62000497826200044c565b810181811067ffffffffffffffff82111715620004b957620004b86200045d565b5b80604052505050565b6000620004ce6200042e565b9050620004dc82826200048c565b919050565b600067ffffffffffffffff821115620004ff57620004fe6200045d565b5b6200050a826200044c565b9050602081019050919050565b60005b83811015620005375780820151818401526020810190506200051a565b60008484015250505050565b60006200055a6200055484620004e1565b620004c2565b90508281526020810184848401111562000579576200057862000447565b5b6200058684828562000517565b509392505050565b600082601f830112620005a657620005a562000442565b5b8151620005b884826020860162000543565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620005ee82620005c1565b9050919050565b6200060081620005e1565b81146200060c57600080fd5b50565b6000815190506200062081620005f5565b92915050565b6000819050919050565b6200063b8162000626565b81146200064757600080fd5b50565b6000815190506200065b8162000630565b92915050565b600080600080600060a0868803121562000680576200067f62000438565b5b600086015167ffffffffffffffff811115620006a157620006a06200043d565b5b620006af888289016200058e565b955050602086015167ffffffffffffffff811115620006d357620006d26200043d565b5b620006e1888289016200058e565b9450506040620006f4888289016200060f565b935050606062000707888289016200060f565b92505060806200071a888289016200064a565b9150509295509295909350565b6200073281620005e1565b82525050565b60006020820190506200074f600083018462000727565b92915050565b600082825260208201905092915050565b7f526563697069656e742063616e6e6f74206265207a65726f0000000000000000600082015250565b60006200079e60188362000755565b9150620007ab8262000766565b602082019050919050565b60006020820190508181036000830152620007d1816200078f565b9050919050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200082b57607f821691505b602082108103620008415762000840620007e3565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620008ab7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200086c565b620008b786836200086c565b95508019841693508086168417925050509392505050565b6000819050919050565b6000620008fa620008f4620008ee8462000626565b620008cf565b62000626565b9050919050565b6000819050919050565b6200091683620008d9565b6200092e620009258262000901565b84845462000879565b825550505050565b600090565b6200094562000936565b620009528184846200090b565b505050565b5b818110156200097a576200096e6000826200093b565b60018101905062000958565b5050565b601f821115620009c957620009938162000847565b6200099e846200085c565b81016020851015620009ae578190505b620009c6620009bd856200085c565b83018262000957565b50505b505050565b600082821c905092915050565b6000620009ee60001984600802620009ce565b1980831691505092915050565b600062000a098383620009db565b9150826002028217905092915050565b62000a2482620007d8565b67ffffffffffffffff81111562000a405762000a3f6200045d565b5b62000a4c825462000812565b62000a598282856200097e565b600060209050601f83116001811462000a91576000841562000a7c578287015190505b62000a888582620009fb565b86555062000af8565b601f19841662000aa18662000847565b60005b8281101562000acb5784890151825560018201915060208501945060208101905062000aa4565b8683101562000aeb578489015162000ae7601f891682620009db565b8355505b6001600288020188555050505b505050505050565b6000819050919050565b62000b158162000b00565b82525050565b62000b268162000626565b82525050565b600060a08201905062000b43600083018862000b0a565b62000b52602083018762000b0a565b62000b61604083018662000b0a565b62000b70606083018562000b1b565b62000b7f608083018462000727565b9695505050505050565b600062000b9682620007d8565b62000ba2818562000755565b935062000bb481856020860162000517565b62000bbf816200044c565b840191505092915050565b6000602082019050818103600083015262000be6818462000b89565b905092915050565b600081519050919050565b6000819050602082019050919050565b600062000c17825162000b00565b80915050919050565b600062000c2d8262000bee565b8262000c398462000bf9565b905062000c468162000c09565b9250602082101562000c895762000c847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff836020036008026200086c565b831692505b5050919050565b60805160a05160c05160e051610100516101205161014051612df862000ceb60003960006110430152600061100801526000611b0801526000611ae70152600061179a015260006117f0015260006118190152612df86000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638c639a851161008c578063da0f62a211610066578063da0f62a214610217578063de5b482d14610233578063eb13554f1461024f578063f2fde38b1461026d576100ea565b80638c639a85146101bf5780638da5cb5b146101dd578063cab230d2146101fb576100ea565b806349a03152116100c857806349a031521461016b578063627cdcb914610187578063715018a61461019157806384b0196e1461019b576100ea565b80631871e243146100ef5780632dff692d1461010b5780632f7801f41461013b575b600080fd5b61010960048036038101906101049190611d04565b610289565b005b61012560048036038101906101209190611d67565b61039f565b6040516101329190611daf565b60405180910390f35b61015560048036038101906101509190611d04565b6103bf565b6040516101629190611de3565b60405180910390f35b61018560048036038101906101809190611e23565b6103d7565b005b61018f6105a9565b005b610199610600565b005b6101a3610614565b6040516101b69796959493929190611ff8565b60405180910390f35b6101c76106be565b6040516101d49190611de3565b60405180910390f35b6101e56106c4565b6040516101f2919061207c565b60405180910390f35b610215600480360381019061021091906120c3565b6106ed565b005b610231600480360381019061022c9190612155565b61077f565b005b61024d60048036038101906102489190612155565b610a87565b005b610257610d48565b604051610264919061207c565b60405180910390f35b61028760048036038101906102829190611d04565b610d6e565b005b610291610df4565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610300576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f790612203565b60405180910390fd5b7faf04973bb8004e313cfd09017b963bee1e6f6ffb9be88c07a0c5ce5fafe93403600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682604051610353929190612223565b60405180910390a180600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60076020528060005260406000206000915054906101000a900460ff1681565b60066020528060005260406000206000915090505481565b60003390508160000160208101906103ef9190611d04565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16148061046557508160200160208101906104369190611d04565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b6104a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049b90612298565b60405180910390fd5b60006104af83610e7b565b90506007600082815260200190815260200160002060009054906101000a900460ff1615610512576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050990612304565b60405180910390fd5b60016007600083815260200190815260200160002060006101000a81548160ff02191690831515021790555082606001358360400160208101906105569190611d04565b73ffffffffffffffffffffffffffffffffffffffff16827f1989da6fac61abd1ab6bc85f17f3f4db680fad48c4a96fd3841977f8cfe9eb0e8560405161059c919061207c565b60405180910390a4505050565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906105f990612353565b9190505550565b610608610df4565b6106126000610f3b565b565b600060608060008060006060610628610fff565b61063061103a565b46306000801b600067ffffffffffffffff8111156106515761065061239b565b5b60405190808252806020026020018201604052801561067f5781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b60055481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6106f5610df4565b61271081111561073a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073190612416565b60405180910390fd5b7ff4b9cde47c67b2b563d8b95f018afcffff71d3f8c847d36a89beb50733d6c9df6005548260405161076d929190612436565b60405180910390a18060058190555050565b610787611075565b8260e0013542106107cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c4906124ab565b60405180910390fd5b60008360000160208101906107e29190611d04565b905060006107ef85610e7b565b90506007600082815260200190815260200160002060009054906101000a900460ff1615610852576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084990612304565b60405180910390fd5b61085e828286866110bb565b61089d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089490612517565b60405180910390fd5b60016007600083815260200190815260200160002060006101000a81548160ff0219169083151502179055506000339050600073ffffffffffffffffffffffffffffffffffffffff168660200160208101906108f99190611d04565b73ffffffffffffffffffffffffffffffffffffffff1614610995578560200160208101906109279190611d04565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610994576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098b90612583565b60405180910390fd5b5b6109e1818760000160208101906109ac9190611d04565b8860400160208101906109bf9190611d04565b89606001358a60800160208101906109d79190611d04565b8b60a00135611143565b8073ffffffffffffffffffffffffffffffffffffffff16866000016020810190610a0b9190611d04565b73ffffffffffffffffffffffffffffffffffffffff16837fae16a7b9f34eb013dde3e7e431986599ff512137255efcd247d5528a550deee7896040016020810190610a569190611d04565b8a606001358b60a00135604051610a6f939291906125a3565b60405180910390a4505050610a826115f7565b505050565b610a8f611075565b8260e001354210610ad5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610acc90612626565b60405180910390fd5b6000836020016020810190610aea9190611d04565b905060003390506000610afc86610e7b565b90506007600082815260200190815260200160002060009054906101000a900460ff1615610b5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5690612692565b60405180910390fd5b856000016020810190610b729190611d04565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614610bdf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd6906126fe565b60405180910390fd5b610beb838287876110bb565b610c2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c219061276a565b60405180910390fd5b60016007600083815260200190815260200160002060006101000a81548160ff021916908315150217905550610ca2866020016020810190610c6c9190611d04565b83886040016020810190610c809190611d04565b89606001358a6080016020810190610c989190611d04565b8b60a00135611143565b856020016020810190610cb59190611d04565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16827fae16a7b9f34eb013dde3e7e431986599ff512137255efcd247d5528a550deee7896040016020810190610d179190611d04565b8a606001358b60a00135604051610d30939291906125a3565b60405180910390a4505050610d436115f7565b505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610d76610df4565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610de85760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610ddf919061207c565b60405180910390fd5b610df181610f3b565b50565b610dfc611600565b73ffffffffffffffffffffffffffffffffffffffff16610e1a6106c4565b73ffffffffffffffffffffffffffffffffffffffff1614610e7957610e3d611600565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610e70919061207c565b60405180910390fd5b565b6000610f347fbf903f52c02ffc68f1c2367d8d2f116d1a25163fe798cb658496619ab6b1bf2d836000016020810190610eb49190611d04565b846020016020810190610ec79190611d04565b856040016020810190610eda9190611d04565b8660600135876080016020810190610ef29190611d04565b8860a001358960c001358a60e00135604051602001610f199998979695949392919061278a565b60405160208183030381529060405280519060200120611608565b9050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b606061103560027f000000000000000000000000000000000000000000000000000000000000000061162290919063ffffffff16565b905090565b606061107060037f000000000000000000000000000000000000000000000000000000000000000061162290919063ffffffff16565b905090565b6002600154036110b1576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600181905550565b60008473ffffffffffffffffffffffffffffffffffffffff166111228585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506116d2565b73ffffffffffffffffffffffffffffffffffffffff16149050949350505050565b60008490508573ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16636352211e866040518263ffffffff1660e01b81526004016111989190611de3565b602060405180830381865afa1580156111b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d9919061282c565b73ffffffffffffffffffffffffffffffffffffffff161461122f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611226906128a5565b60405180910390fd5b60006127106005548461124291906128c5565b61124c9190612936565b905060008061125c8888876116fe565b9150915084818461126d9190612967565b11156112ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112a5906129e7565b60405180910390fd5b60008184876112bd9190612a07565b6112c79190612a07565b905060008790508073ffffffffffffffffffffffffffffffffffffffff166323b872dd8d8d856040518463ffffffff1660e01b815260040161130b93929190612a3b565b6020604051808303816000875af115801561132a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061134e9190612a9e565b61138d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161138490612b17565b60405180910390fd5b6000851115611478578073ffffffffffffffffffffffffffffffffffffffff166323b872dd8d600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16886040518463ffffffff1660e01b81526004016113f593929190612a3b565b6020604051808303816000875af1158015611414573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114389190612a9e565b611477576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161146e90612b83565b60405180910390fd5b5b6000831180156114b55750600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614155b1561157a578073ffffffffffffffffffffffffffffffffffffffff166323b872dd8d86866040518463ffffffff1660e01b81526004016114f793929190612a3b565b6020604051808303816000875af1158015611516573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061153a9190612a9e565b611579576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161157090612bef565b60405180910390fd5b5b8573ffffffffffffffffffffffffffffffffffffffff166342842e0e8c8e8c6040518463ffffffff1660e01b81526004016115b793929190612a3b565b600060405180830381600087803b1580156115d157600080fd5b505af11580156115e5573d6000803e3d6000fd5b50505050505050505050505050505050565b60018081905550565b600033905090565b600061161b611615611796565b8361184d565b9050919050565b606060ff60001b831461163f576116388361188e565b90506116cc565b81805461164b90612c3e565b80601f016020809104026020016040519081016040528092919081815260200182805461167790612c3e565b80156116c45780601f10611699576101008083540402835291602001916116c4565b820191906000526020600020905b8154815290600101906020018083116116a757829003601f168201915b505050505090505b92915050565b6000806000806116e28686611902565b9250925092506116f2828261195e565b82935050505092915050565b6000808473ffffffffffffffffffffffffffffffffffffffff16632a55205a85856040518363ffffffff1660e01b815260040161173c929190612436565b6040805180830381865afa92505050801561177557506040513d601f19601f820116820180604052508101906117729190612c84565b60015b611785576000809150915061178e565b81819350935050505b935093915050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614801561181257507f000000000000000000000000000000000000000000000000000000000000000046145b1561183f577f0000000000000000000000000000000000000000000000000000000000000000905061184a565b611847611ac2565b90505b90565b60006040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b6060600061189b83611b58565b90506000602067ffffffffffffffff8111156118ba576118b961239b565b5b6040519080825280601f01601f1916602001820160405280156118ec5781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b600080600060418451036119475760008060006020870151925060408701519150606087015160001a905061193988828585611ba8565b955095509550505050611957565b60006002855160001b9250925092505b9250925092565b6000600381111561197257611971612cc4565b5b82600381111561198557611984612cc4565b5b0315611abe576001600381111561199f5761199e612cc4565b5b8260038111156119b2576119b1612cc4565b5b036119e9576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260038111156119fd576119fc612cc4565b5b826003811115611a1057611a0f612cc4565b5b03611a55578060001c6040517ffce698f7000000000000000000000000000000000000000000000000000000008152600401611a4c9190611de3565b60405180910390fd5b600380811115611a6857611a67612cc4565b5b826003811115611a7b57611a7a612cc4565b5b03611abd57806040517fd78bce0c000000000000000000000000000000000000000000000000000000008152600401611ab49190612cf3565b60405180910390fd5b5b5050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000004630604051602001611b3d959493929190612d0e565b60405160208183030381529060405280519060200120905090565b60008060ff8360001c169050601f811115611b9f576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c1115611be8576000600385925092509250611c92565b600060018888888860405160008152602001604052604051611c0d9493929190612d7d565b6020604051602081039080840390855afa158015611c2f573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611c8357600060016000801b93509350935050611c92565b8060008060001b935093509350505b9450945094915050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611cd182611ca6565b9050919050565b611ce181611cc6565b8114611cec57600080fd5b50565b600081359050611cfe81611cd8565b92915050565b600060208284031215611d1a57611d19611c9c565b5b6000611d2884828501611cef565b91505092915050565b6000819050919050565b611d4481611d31565b8114611d4f57600080fd5b50565b600081359050611d6181611d3b565b92915050565b600060208284031215611d7d57611d7c611c9c565b5b6000611d8b84828501611d52565b91505092915050565b60008115159050919050565b611da981611d94565b82525050565b6000602082019050611dc46000830184611da0565b92915050565b6000819050919050565b611ddd81611dca565b82525050565b6000602082019050611df86000830184611dd4565b92915050565b600080fd5b60006101008284031215611e1a57611e19611dfe565b5b81905092915050565b60006101008284031215611e3a57611e39611c9c565b5b6000611e4884828501611e03565b91505092915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b611e8681611e51565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611ec6578082015181840152602081019050611eab565b60008484015250505050565b6000601f19601f8301169050919050565b6000611eee82611e8c565b611ef88185611e97565b9350611f08818560208601611ea8565b611f1181611ed2565b840191505092915050565b611f2581611cc6565b82525050565b611f3481611d31565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611f6f81611dca565b82525050565b6000611f818383611f66565b60208301905092915050565b6000602082019050919050565b6000611fa582611f3a565b611faf8185611f45565b9350611fba83611f56565b8060005b83811015611feb578151611fd28882611f75565b9750611fdd83611f8d565b925050600181019050611fbe565b5085935050505092915050565b600060e08201905061200d600083018a611e7d565b818103602083015261201f8189611ee3565b905081810360408301526120338188611ee3565b90506120426060830187611dd4565b61204f6080830186611f1c565b61205c60a0830185611f2b565b81810360c083015261206e8184611f9a565b905098975050505050505050565b60006020820190506120916000830184611f1c565b92915050565b6120a081611dca565b81146120ab57600080fd5b50565b6000813590506120bd81612097565b92915050565b6000602082840312156120d9576120d8611c9c565b5b60006120e7848285016120ae565b91505092915050565b600080fd5b600080fd5b600080fd5b60008083601f840112612115576121146120f0565b5b8235905067ffffffffffffffff811115612132576121316120f5565b5b60208301915083600182028301111561214e5761214d6120fa565b5b9250929050565b6000806000610120848603121561216f5761216e611c9c565b5b600061217d86828701611e03565b93505061010084013567ffffffffffffffff81111561219f5761219e611ca1565b5b6121ab868287016120ff565b92509250509250925092565b7f526563697069656e742063616e6e6f74206265207a65726f0000000000000000600082015250565b60006121ed601883611e97565b91506121f8826121b7565b602082019050919050565b6000602082019050818103600083015261221c816121e0565b9050919050565b60006040820190506122386000830185611f1c565b6122456020830184611f1c565b9392505050565b7f4e6f74206120706172747920746f20746865206f726465720000000000000000600082015250565b6000612282601883611e97565b915061228d8261224c565b602082019050919050565b600060208201905081810360008301526122b181612275565b9050919050565b7f4f726465723a20416c72656164792068616e646c656400000000000000000000600082015250565b60006122ee601683611e97565b91506122f9826122b8565b602082019050919050565b6000602082019050818103600083015261231d816122e1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061235e82611dca565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036123905761238f612324565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4665652070657263656e742063616e6e6f742065786365656420313030303000600082015250565b6000612400601f83611e97565b915061240b826123ca565b602082019050919050565b6000602082019050818103600083015261242f816123f3565b9050919050565b600060408201905061244b6000830185611dd4565b6124586020830184611dd4565b9392505050565b7f4f726465723a2045787069726564000000000000000000000000000000000000600082015250565b6000612495600e83611e97565b91506124a08261245f565b602082019050919050565b600060208201905081810360008301526124c481612488565b9050919050565b7f4f726465723a20496e76616c6964207369676e61747572650000000000000000600082015250565b6000612501601883611e97565b915061250c826124cb565b602082019050919050565b60006020820190508181036000830152612530816124f4565b9050919050565b7f4f726465723a204e6f7420666f7220796f750000000000000000000000000000600082015250565b600061256d601283611e97565b915061257882612537565b602082019050919050565b6000602082019050818103600083015261259c81612560565b9050919050565b60006060820190506125b86000830186611f1c565b6125c56020830185611dd4565b6125d26040830184611dd4565b949350505050565b7f4f666665723a2045787069726564000000000000000000000000000000000000600082015250565b6000612610600e83611e97565b915061261b826125da565b602082019050919050565b6000602082019050818103600083015261263f81612603565b9050919050565b7f4f666665723a20416c72656164792068616e646c656400000000000000000000600082015250565b600061267c601683611e97565b915061268782612646565b602082019050919050565b600060208201905081810360008301526126ab8161266f565b9050919050565b7f4f666665723a204e6f7420666f7220796f750000000000000000000000000000600082015250565b60006126e8601283611e97565b91506126f3826126b2565b602082019050919050565b60006020820190508181036000830152612717816126db565b9050919050565b7f4f666665723a20496e76616c6964206275796572207369676e61747572650000600082015250565b6000612754601e83611e97565b915061275f8261271e565b602082019050919050565b6000602082019050818103600083015261278381612747565b9050919050565b6000610120820190506127a0600083018c611f2b565b6127ad602083018b611f1c565b6127ba604083018a611f1c565b6127c76060830189611f1c565b6127d46080830188611dd4565b6127e160a0830187611f1c565b6127ee60c0830186611dd4565b6127fb60e0830185611dd4565b612809610100830184611dd4565b9a9950505050505050505050565b60008151905061282681611cd8565b92915050565b60006020828403121561284257612841611c9c565b5b600061285084828501612817565b91505092915050565b7f53656c6c6572206e6f206c6f6e676572206f776e73204e465400000000000000600082015250565b600061288f601983611e97565b915061289a82612859565b602082019050919050565b600060208201905081810360008301526128be81612882565b9050919050565b60006128d082611dca565b91506128db83611dca565b92508282026128e981611dca565b91508282048414831517612900576128ff612324565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061294182611dca565b915061294c83611dca565b92508261295c5761295b612907565b5b828204905092915050565b600061297282611dca565b915061297d83611dca565b925082820190508082111561299557612994612324565b5b92915050565b7f4665657320657863656564207072696365000000000000000000000000000000600082015250565b60006129d1601183611e97565b91506129dc8261299b565b602082019050919050565b60006020820190508181036000830152612a00816129c4565b9050919050565b6000612a1282611dca565b9150612a1d83611dca565b9250828203905081811115612a3557612a34612324565b5b92915050565b6000606082019050612a506000830186611f1c565b612a5d6020830185611f1c565b612a6a6040830184611dd4565b949350505050565b612a7b81611d94565b8114612a8657600080fd5b50565b600081519050612a9881612a72565b92915050565b600060208284031215612ab457612ab3611c9c565b5b6000612ac284828501612a89565b91505092915050565b7f5472616e7366657220746f2073656c6c6572206661696c656400000000000000600082015250565b6000612b01601983611e97565b9150612b0c82612acb565b602082019050919050565b60006020820190508181036000830152612b3081612af4565b9050919050565b7f506c6174666f726d20666565207472616e73666572206661696c656400000000600082015250565b6000612b6d601c83611e97565b9150612b7882612b37565b602082019050919050565b60006020820190508181036000830152612b9c81612b60565b9050919050565b7f526f79616c747920666565207472616e73666572206661696c65640000000000600082015250565b6000612bd9601b83611e97565b9150612be482612ba3565b602082019050919050565b60006020820190508181036000830152612c0881612bcc565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680612c5657607f821691505b602082108103612c6957612c68612c0f565b5b50919050565b600081519050612c7e81612097565b92915050565b60008060408385031215612c9b57612c9a611c9c565b5b6000612ca985828601612817565b9250506020612cba85828601612c6f565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000602082019050612d086000830184611f2b565b92915050565b600060a082019050612d236000830188611f2b565b612d306020830187611f2b565b612d3d6040830186611f2b565b612d4a6060830185611dd4565b612d576080830184611f1c565b9695505050505050565b600060ff82169050919050565b612d7781612d61565b82525050565b6000608082019050612d926000830187611f2b565b612d9f6020830186612d6e565b612dac6040830185611f2b565b612db96060830184611f2b565b9594505050505056fea26469706673582212203c8fa14844261bee355eaca0100c3fa06c5b1c92b1ddfd82e1e62bdc3848087f64736f6c63430008140033","opcodes":"PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3AE3 CODESIZE SUB DUP1 PUSH3 0x3AE3 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x38 SWAP2 SWAP1 PUSH3 0x661 JUMP JUMPDEST DUP5 DUP5 DUP5 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xB0 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA7 SWAP2 SWAP1 PUSH3 0x738 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xC1 DUP2 PUSH3 0x23E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH3 0xDF PUSH1 0x2 DUP4 PUSH3 0x302 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x120 DUP2 DUP2 MSTORE POP POP PUSH3 0xFD PUSH1 0x3 DUP3 PUSH3 0x302 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x140 DUP2 DUP2 MSTORE POP POP DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP CHAINID PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP PUSH3 0x13C PUSH3 0x35A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x80 DUP2 DUP2 MSTORE POP POP ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x1EB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1E2 SWAP1 PUSH3 0x7B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP POP POP POP POP PUSH3 0xC90 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 MLOAD LT ISZERO PUSH3 0x328 JUMPI PUSH3 0x320 DUP4 PUSH3 0x3B7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP PUSH3 0x354 JUMP JUMPDEST DUP3 PUSH3 0x33A DUP4 PUSH3 0x424 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 ADD SWAP1 DUP2 PUSH3 0x34B SWAP2 SWAP1 PUSH3 0xA19 JUMP JUMPDEST POP PUSH1 0xFF PUSH1 0x0 SHL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x39C SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xB2C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x1F DUP2 MLOAD GT ISZERO PUSH3 0x407 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x305A27A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x3FE SWAP2 SWAP1 PUSH3 0xBCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH3 0x415 SWAP1 PUSH3 0xC20 JUMP JUMPDEST PUSH1 0x0 SHR OR PUSH1 0x0 SHL SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x497 DUP3 PUSH3 0x44C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x4B9 JUMPI PUSH3 0x4B8 PUSH3 0x45D JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4CE PUSH3 0x42E JUMP JUMPDEST SWAP1 POP PUSH3 0x4DC DUP3 DUP3 PUSH3 0x48C JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x4FF JUMPI PUSH3 0x4FE PUSH3 0x45D JUMP JUMPDEST JUMPDEST PUSH3 0x50A DUP3 PUSH3 0x44C JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x537 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x51A JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x55A PUSH3 0x554 DUP5 PUSH3 0x4E1 JUMP JUMPDEST PUSH3 0x4C2 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x579 JUMPI PUSH3 0x578 PUSH3 0x447 JUMP JUMPDEST JUMPDEST PUSH3 0x586 DUP5 DUP3 DUP6 PUSH3 0x517 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x5A6 JUMPI PUSH3 0x5A5 PUSH3 0x442 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x5B8 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x543 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5EE DUP3 PUSH3 0x5C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x600 DUP2 PUSH3 0x5E1 JUMP JUMPDEST DUP2 EQ PUSH3 0x60C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x620 DUP2 PUSH3 0x5F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x63B DUP2 PUSH3 0x626 JUMP JUMPDEST DUP2 EQ PUSH3 0x647 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x65B DUP2 PUSH3 0x630 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH3 0x680 JUMPI PUSH3 0x67F PUSH3 0x438 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP7 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x6A1 JUMPI PUSH3 0x6A0 PUSH3 0x43D JUMP JUMPDEST JUMPDEST PUSH3 0x6AF DUP9 DUP3 DUP10 ADD PUSH3 0x58E JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x6D3 JUMPI PUSH3 0x6D2 PUSH3 0x43D JUMP JUMPDEST JUMPDEST PUSH3 0x6E1 DUP9 DUP3 DUP10 ADD PUSH3 0x58E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH3 0x6F4 DUP9 DUP3 DUP10 ADD PUSH3 0x60F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH3 0x707 DUP9 DUP3 DUP10 ADD PUSH3 0x60F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH3 0x71A DUP9 DUP3 DUP10 ADD PUSH3 0x64A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH3 0x732 DUP2 PUSH3 0x5E1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x74F PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x727 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x526563697069656E742063616E6E6F74206265207A65726F0000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x79E PUSH1 0x18 DUP4 PUSH3 0x755 JUMP JUMPDEST SWAP2 POP PUSH3 0x7AB DUP3 PUSH3 0x766 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x7D1 DUP2 PUSH3 0x78F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x82B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x841 JUMPI PUSH3 0x840 PUSH3 0x7E3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x8AB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x86C JUMP JUMPDEST PUSH3 0x8B7 DUP7 DUP4 PUSH3 0x86C JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x8FA PUSH3 0x8F4 PUSH3 0x8EE DUP5 PUSH3 0x626 JUMP JUMPDEST PUSH3 0x8CF JUMP JUMPDEST PUSH3 0x626 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x916 DUP4 PUSH3 0x8D9 JUMP JUMPDEST PUSH3 0x92E PUSH3 0x925 DUP3 PUSH3 0x901 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x879 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x945 PUSH3 0x936 JUMP JUMPDEST PUSH3 0x952 DUP2 DUP5 DUP5 PUSH3 0x90B JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x97A JUMPI PUSH3 0x96E PUSH1 0x0 DUP3 PUSH3 0x93B JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x958 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x9C9 JUMPI PUSH3 0x993 DUP2 PUSH3 0x847 JUMP JUMPDEST PUSH3 0x99E DUP5 PUSH3 0x85C JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x9AE JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x9C6 PUSH3 0x9BD DUP6 PUSH3 0x85C JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x957 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x9EE PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x9CE JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xA09 DUP4 DUP4 PUSH3 0x9DB JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xA24 DUP3 PUSH3 0x7D8 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0xA40 JUMPI PUSH3 0xA3F PUSH3 0x45D JUMP JUMPDEST JUMPDEST PUSH3 0xA4C DUP3 SLOAD PUSH3 0x812 JUMP JUMPDEST PUSH3 0xA59 DUP3 DUP3 DUP6 PUSH3 0x97E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0xA91 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0xA7C JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0xA88 DUP6 DUP3 PUSH3 0x9FB JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0xAF8 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0xAA1 DUP7 PUSH3 0x847 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0xACB JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xAA4 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0xAEB JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0xAE7 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x9DB JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xB15 DUP2 PUSH3 0xB00 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0xB26 DUP2 PUSH3 0x626 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH3 0xB43 PUSH1 0x0 DUP4 ADD DUP9 PUSH3 0xB0A JUMP JUMPDEST PUSH3 0xB52 PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0xB0A JUMP JUMPDEST PUSH3 0xB61 PUSH1 0x40 DUP4 ADD DUP7 PUSH3 0xB0A JUMP JUMPDEST PUSH3 0xB70 PUSH1 0x60 DUP4 ADD DUP6 PUSH3 0xB1B JUMP JUMPDEST PUSH3 0xB7F PUSH1 0x80 DUP4 ADD DUP5 PUSH3 0x727 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xB96 DUP3 PUSH3 0x7D8 JUMP JUMPDEST PUSH3 0xBA2 DUP2 DUP6 PUSH3 0x755 JUMP JUMPDEST SWAP4 POP PUSH3 0xBB4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x517 JUMP JUMPDEST PUSH3 0xBBF DUP2 PUSH3 0x44C JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0xBE6 DUP2 DUP5 PUSH3 0xB89 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xC17 DUP3 MLOAD PUSH3 0xB00 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xC2D DUP3 PUSH3 0xBEE JUMP JUMPDEST DUP3 PUSH3 0xC39 DUP5 PUSH3 0xBF9 JUMP JUMPDEST SWAP1 POP PUSH3 0xC46 DUP2 PUSH3 0xC09 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP3 LT ISZERO PUSH3 0xC89 JUMPI PUSH3 0xC84 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SUB PUSH1 0x8 MUL PUSH3 0x86C JUMP JUMPDEST DUP4 AND SWAP3 POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x2DF8 PUSH3 0xCEB PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x1043 ADD MSTORE PUSH1 0x0 PUSH2 0x1008 ADD MSTORE PUSH1 0x0 PUSH2 0x1B08 ADD MSTORE PUSH1 0x0 PUSH2 0x1AE7 ADD MSTORE PUSH1 0x0 PUSH2 0x179A ADD MSTORE PUSH1 0x0 PUSH2 0x17F0 ADD MSTORE PUSH1 0x0 PUSH2 0x1819 ADD MSTORE PUSH2 0x2DF8 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8C639A85 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xDA0F62A2 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xDA0F62A2 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0xDE5B482D EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0xEB13554F EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x26D JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x8C639A85 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0xCAB230D2 EQ PUSH2 0x1FB JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x49A03152 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x49A03152 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x627CDCB9 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x19B JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x1871E243 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x2DFF692D EQ PUSH2 0x10B JUMPI DUP1 PUSH4 0x2F7801F4 EQ PUSH2 0x13B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST PUSH2 0x289 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x125 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x120 SWAP2 SWAP1 PUSH2 0x1D67 JUMP JUMPDEST PUSH2 0x39F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x132 SWAP2 SWAP1 PUSH2 0x1DAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x155 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x150 SWAP2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x162 SWAP2 SWAP1 PUSH2 0x1DE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x185 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x180 SWAP2 SWAP1 PUSH2 0x1E23 JUMP JUMPDEST PUSH2 0x3D7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18F PUSH2 0x5A9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x199 PUSH2 0x600 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A3 PUSH2 0x614 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B6 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C7 PUSH2 0x6BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x1DE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E5 PUSH2 0x6C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0x207C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x215 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x210 SWAP2 SWAP1 PUSH2 0x20C3 JUMP JUMPDEST PUSH2 0x6ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x231 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x2155 JUMP JUMPDEST PUSH2 0x77F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x248 SWAP2 SWAP1 PUSH2 0x2155 JUMP JUMPDEST PUSH2 0xA87 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x257 PUSH2 0xD48 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x264 SWAP2 SWAP1 PUSH2 0x207C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x287 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST PUSH2 0xD6E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x291 PUSH2 0xDF4 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x300 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F7 SWAP1 PUSH2 0x2203 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xAF04973BB8004E313CFD09017B963BEE1E6F6FFB9BE88C07A0C5CE5FAFE93403 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x353 SWAP3 SWAP2 SWAP1 PUSH2 0x2223 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP DUP2 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x3EF SWAP2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x465 JUMPI POP DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x436 SWAP2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x4A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49B SWAP1 PUSH2 0x2298 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4AF DUP4 PUSH2 0xE7B JUMP JUMPDEST SWAP1 POP PUSH1 0x7 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x512 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x509 SWAP1 PUSH2 0x2304 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x60 ADD CALLDATALOAD DUP4 PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x556 SWAP2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0x1989DA6FAC61ABD1AB6BC85F17F3F4DB680FAD48C4A96FD3841977F8CFE9EB0E DUP6 PUSH1 0x40 MLOAD PUSH2 0x59C SWAP2 SWAP1 PUSH2 0x207C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x5F9 SWAP1 PUSH2 0x2353 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMP JUMPDEST PUSH2 0x608 PUSH2 0xDF4 JUMP JUMPDEST PUSH2 0x612 PUSH1 0x0 PUSH2 0xF3B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x628 PUSH2 0xFFF JUMP JUMPDEST PUSH2 0x630 PUSH2 0x103A JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x651 JUMPI PUSH2 0x650 PUSH2 0x239B JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x67F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6F5 PUSH2 0xDF4 JUMP JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0x73A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x731 SWAP1 PUSH2 0x2416 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xF4B9CDE47C67B2B563D8B95F018AFCFFFF71D3F8C847D36A89BEB50733D6C9DF PUSH1 0x5 SLOAD DUP3 PUSH1 0x40 MLOAD PUSH2 0x76D SWAP3 SWAP2 SWAP1 PUSH2 0x2436 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x787 PUSH2 0x1075 JUMP JUMPDEST DUP3 PUSH1 0xE0 ADD CALLDATALOAD TIMESTAMP LT PUSH2 0x7CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C4 SWAP1 PUSH2 0x24AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x7E2 SWAP2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7EF DUP6 PUSH2 0xE7B JUMP JUMPDEST SWAP1 POP PUSH1 0x7 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x852 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x849 SWAP1 PUSH2 0x2304 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x85E DUP3 DUP3 DUP7 DUP7 PUSH2 0x10BB JUMP JUMPDEST PUSH2 0x89D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x894 SWAP1 PUSH2 0x2517 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x8F9 SWAP2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x995 JUMPI DUP6 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x927 SWAP2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x994 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98B SWAP1 PUSH2 0x2583 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH2 0x9E1 DUP2 DUP8 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x9AC SWAP2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST DUP9 PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x9BF SWAP2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST DUP10 PUSH1 0x60 ADD CALLDATALOAD DUP11 PUSH1 0x80 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x9D7 SWAP2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST DUP12 PUSH1 0xA0 ADD CALLDATALOAD PUSH2 0x1143 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xA0B SWAP2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xAE16A7B9F34EB013DDE3E7E431986599FF512137255EFCD247D5528A550DEEE7 DUP10 PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xA56 SWAP2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST DUP11 PUSH1 0x60 ADD CALLDATALOAD DUP12 PUSH1 0xA0 ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH2 0xA6F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP PUSH2 0xA82 PUSH2 0x15F7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xA8F PUSH2 0x1075 JUMP JUMPDEST DUP3 PUSH1 0xE0 ADD CALLDATALOAD TIMESTAMP LT PUSH2 0xAD5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xACC SWAP1 PUSH2 0x2626 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xAEA SWAP2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x0 PUSH2 0xAFC DUP7 PUSH2 0xE7B JUMP JUMPDEST SWAP1 POP PUSH1 0x7 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB5F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB56 SWAP1 PUSH2 0x2692 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xB72 SWAP2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBDF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD6 SWAP1 PUSH2 0x26FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBEB DUP4 DUP3 DUP8 DUP8 PUSH2 0x10BB JUMP JUMPDEST PUSH2 0xC2A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC21 SWAP1 PUSH2 0x276A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xCA2 DUP7 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xC6C SWAP2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST DUP4 DUP9 PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xC80 SWAP2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST DUP10 PUSH1 0x60 ADD CALLDATALOAD DUP11 PUSH1 0x80 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xC98 SWAP2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST DUP12 PUSH1 0xA0 ADD CALLDATALOAD PUSH2 0x1143 JUMP JUMPDEST DUP6 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xCB5 SWAP2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0xAE16A7B9F34EB013DDE3E7E431986599FF512137255EFCD247D5528A550DEEE7 DUP10 PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xD17 SWAP2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST DUP11 PUSH1 0x60 ADD CALLDATALOAD DUP12 PUSH1 0xA0 ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH2 0xD30 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP PUSH2 0xD43 PUSH2 0x15F7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xD76 PUSH2 0xDF4 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDE8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDDF SWAP2 SWAP1 PUSH2 0x207C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDF1 DUP2 PUSH2 0xF3B JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xDFC PUSH2 0x1600 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE1A PUSH2 0x6C4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE79 JUMPI PUSH2 0xE3D PUSH2 0x1600 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE70 SWAP2 SWAP1 PUSH2 0x207C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF34 PUSH32 0xBF903F52C02FFC68F1C2367D8D2F116D1A25163FE798CB658496619AB6B1BF2D DUP4 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xEB4 SWAP2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST DUP5 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xEC7 SWAP2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST DUP6 PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xEDA SWAP2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST DUP7 PUSH1 0x60 ADD CALLDATALOAD DUP8 PUSH1 0x80 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xEF2 SWAP2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST DUP9 PUSH1 0xA0 ADD CALLDATALOAD DUP10 PUSH1 0xC0 ADD CALLDATALOAD DUP11 PUSH1 0xE0 ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF19 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x278A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x1608 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1035 PUSH1 0x2 PUSH32 0x0 PUSH2 0x1622 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1070 PUSH1 0x3 PUSH32 0x0 PUSH2 0x1622 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x10B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1122 DUP6 DUP6 DUP6 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0x16D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP7 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1198 SWAP2 SWAP1 PUSH2 0x1DE3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11B5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11D9 SWAP2 SWAP1 PUSH2 0x282C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x122F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1226 SWAP1 PUSH2 0x28A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2710 PUSH1 0x5 SLOAD DUP5 PUSH2 0x1242 SWAP2 SWAP1 PUSH2 0x28C5 JUMP JUMPDEST PUSH2 0x124C SWAP2 SWAP1 PUSH2 0x2936 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x125C DUP9 DUP9 DUP8 PUSH2 0x16FE JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP5 DUP2 DUP5 PUSH2 0x126D SWAP2 SWAP1 PUSH2 0x2967 JUMP JUMPDEST GT ISZERO PUSH2 0x12AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A5 SWAP1 PUSH2 0x29E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP8 PUSH2 0x12BD SWAP2 SWAP1 PUSH2 0x2A07 JUMP JUMPDEST PUSH2 0x12C7 SWAP2 SWAP1 PUSH2 0x2A07 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP8 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP14 DUP14 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x130B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A3B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x132A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x134E SWAP2 SWAP1 PUSH2 0x2A9E JUMP JUMPDEST PUSH2 0x138D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1384 SWAP1 PUSH2 0x2B17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 GT ISZERO PUSH2 0x1478 JUMPI DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP14 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13F5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A3B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1414 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1438 SWAP2 SWAP1 PUSH2 0x2A9E JUMP JUMPDEST PUSH2 0x1477 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x146E SWAP1 PUSH2 0x2B83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 DUP4 GT DUP1 ISZERO PUSH2 0x14B5 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x157A JUMPI DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP14 DUP7 DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14F7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A3B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1516 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x153A SWAP2 SWAP1 PUSH2 0x2A9E JUMP JUMPDEST PUSH2 0x1579 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1570 SWAP1 PUSH2 0x2BEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E DUP13 DUP15 DUP13 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15B7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A3B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15E5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x161B PUSH2 0x1615 PUSH2 0x1796 JUMP JUMPDEST DUP4 PUSH2 0x184D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x163F JUMPI PUSH2 0x1638 DUP4 PUSH2 0x188E JUMP JUMPDEST SWAP1 POP PUSH2 0x16CC JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x164B SWAP1 PUSH2 0x2C3E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1677 SWAP1 PUSH2 0x2C3E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x16C4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1699 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x16C4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x16A7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x16E2 DUP7 DUP7 PUSH2 0x1902 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x16F2 DUP3 DUP3 PUSH2 0x195E JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2A55205A DUP6 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x173C SWAP3 SWAP2 SWAP1 PUSH2 0x2436 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1775 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1772 SWAP2 SWAP1 PUSH2 0x2C84 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1785 JUMPI PUSH1 0x0 DUP1 SWAP2 POP SWAP2 POP PUSH2 0x178E JUMP JUMPDEST DUP2 DUP2 SWAP4 POP SWAP4 POP POP POP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1812 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x183F JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x184A JUMP JUMPDEST PUSH2 0x1847 PUSH2 0x1AC2 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x189B DUP4 PUSH2 0x1B58 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18BA JUMPI PUSH2 0x18B9 PUSH2 0x239B JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x18EC JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x41 DUP5 MLOAD SUB PUSH2 0x1947 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0x1939 DUP9 DUP3 DUP6 DUP6 PUSH2 0x1BA8 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x1957 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP6 MLOAD PUSH1 0x0 SHL SWAP3 POP SWAP3 POP SWAP3 POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1972 JUMPI PUSH2 0x1971 PUSH2 0x2CC4 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1985 JUMPI PUSH2 0x1984 PUSH2 0x2CC4 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x1ABE JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x199F JUMPI PUSH2 0x199E PUSH2 0x2CC4 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x19B2 JUMPI PUSH2 0x19B1 PUSH2 0x2CC4 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x19E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x19FD JUMPI PUSH2 0x19FC PUSH2 0x2CC4 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1A10 JUMPI PUSH2 0x1A0F PUSH2 0x2CC4 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1A55 JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A4C SWAP2 SWAP1 PUSH2 0x1DE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x1A68 JUMPI PUSH2 0x1A67 PUSH2 0x2CC4 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1A7B JUMPI PUSH2 0x1A7A PUSH2 0x2CC4 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1ABD JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AB4 SWAP2 SWAP1 PUSH2 0x2CF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1B3D SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x1B9F JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x1BE8 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1C92 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1C0D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D7D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C2F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C83 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x1C92 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CD1 DUP3 PUSH2 0x1CA6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CE1 DUP2 PUSH2 0x1CC6 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CFE DUP2 PUSH2 0x1CD8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D1A JUMPI PUSH2 0x1D19 PUSH2 0x1C9C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D28 DUP5 DUP3 DUP6 ADD PUSH2 0x1CEF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D44 DUP2 PUSH2 0x1D31 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D61 DUP2 PUSH2 0x1D3B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D7D JUMPI PUSH2 0x1D7C PUSH2 0x1C9C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D8B DUP5 DUP3 DUP6 ADD PUSH2 0x1D52 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DA9 DUP2 PUSH2 0x1D94 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DC4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1DA0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DDD DUP2 PUSH2 0x1DCA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DF8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1DD4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E1A JUMPI PUSH2 0x1E19 PUSH2 0x1DFE JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E3A JUMPI PUSH2 0x1E39 PUSH2 0x1C9C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E48 DUP5 DUP3 DUP6 ADD PUSH2 0x1E03 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E86 DUP2 PUSH2 0x1E51 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1EC6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1EAB JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EEE DUP3 PUSH2 0x1E8C JUMP JUMPDEST PUSH2 0x1EF8 DUP2 DUP6 PUSH2 0x1E97 JUMP JUMPDEST SWAP4 POP PUSH2 0x1F08 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1EA8 JUMP JUMPDEST PUSH2 0x1F11 DUP2 PUSH2 0x1ED2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F25 DUP2 PUSH2 0x1CC6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1F34 DUP2 PUSH2 0x1D31 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F6F DUP2 PUSH2 0x1DCA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F81 DUP4 DUP4 PUSH2 0x1F66 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FA5 DUP3 PUSH2 0x1F3A JUMP JUMPDEST PUSH2 0x1FAF DUP2 DUP6 PUSH2 0x1F45 JUMP JUMPDEST SWAP4 POP PUSH2 0x1FBA DUP4 PUSH2 0x1F56 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1FEB JUMPI DUP2 MLOAD PUSH2 0x1FD2 DUP9 DUP3 PUSH2 0x1F75 JUMP JUMPDEST SWAP8 POP PUSH2 0x1FDD DUP4 PUSH2 0x1F8D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1FBE JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x200D PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x1E7D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x201F DUP2 DUP10 PUSH2 0x1EE3 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2033 DUP2 DUP9 PUSH2 0x1EE3 JUMP JUMPDEST SWAP1 POP PUSH2 0x2042 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x1DD4 JUMP JUMPDEST PUSH2 0x204F PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x1F1C JUMP JUMPDEST PUSH2 0x205C PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x1F2B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x206E DUP2 DUP5 PUSH2 0x1F9A JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2091 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F1C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20A0 DUP2 PUSH2 0x1DCA JUMP JUMPDEST DUP2 EQ PUSH2 0x20AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x20BD DUP2 PUSH2 0x2097 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20D9 JUMPI PUSH2 0x20D8 PUSH2 0x1C9C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20E7 DUP5 DUP3 DUP6 ADD PUSH2 0x20AE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2115 JUMPI PUSH2 0x2114 PUSH2 0x20F0 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2132 JUMPI PUSH2 0x2131 PUSH2 0x20F5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x214E JUMPI PUSH2 0x214D PUSH2 0x20FA JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x120 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x216F JUMPI PUSH2 0x216E PUSH2 0x1C9C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x217D DUP7 DUP3 DUP8 ADD PUSH2 0x1E03 JUMP JUMPDEST SWAP4 POP POP PUSH2 0x100 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x219F JUMPI PUSH2 0x219E PUSH2 0x1CA1 JUMP JUMPDEST JUMPDEST PUSH2 0x21AB DUP7 DUP3 DUP8 ADD PUSH2 0x20FF JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x526563697069656E742063616E6E6F74206265207A65726F0000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21ED PUSH1 0x18 DUP4 PUSH2 0x1E97 JUMP JUMPDEST SWAP2 POP PUSH2 0x21F8 DUP3 PUSH2 0x21B7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x221C DUP2 PUSH2 0x21E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2238 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1F1C JUMP JUMPDEST PUSH2 0x2245 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F1C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E6F74206120706172747920746F20746865206F726465720000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2282 PUSH1 0x18 DUP4 PUSH2 0x1E97 JUMP JUMPDEST SWAP2 POP PUSH2 0x228D DUP3 PUSH2 0x224C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22B1 DUP2 PUSH2 0x2275 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F726465723A20416C72656164792068616E646C656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22EE PUSH1 0x16 DUP4 PUSH2 0x1E97 JUMP JUMPDEST SWAP2 POP PUSH2 0x22F9 DUP3 PUSH2 0x22B8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x231D DUP2 PUSH2 0x22E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x235E DUP3 PUSH2 0x1DCA JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2390 JUMPI PUSH2 0x238F PUSH2 0x2324 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4665652070657263656E742063616E6E6F742065786365656420313030303000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2400 PUSH1 0x1F DUP4 PUSH2 0x1E97 JUMP JUMPDEST SWAP2 POP PUSH2 0x240B DUP3 PUSH2 0x23CA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x242F DUP2 PUSH2 0x23F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x244B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1DD4 JUMP JUMPDEST PUSH2 0x2458 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1DD4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F726465723A2045787069726564000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2495 PUSH1 0xE DUP4 PUSH2 0x1E97 JUMP JUMPDEST SWAP2 POP PUSH2 0x24A0 DUP3 PUSH2 0x245F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24C4 DUP2 PUSH2 0x2488 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F726465723A20496E76616C6964207369676E61747572650000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2501 PUSH1 0x18 DUP4 PUSH2 0x1E97 JUMP JUMPDEST SWAP2 POP PUSH2 0x250C DUP3 PUSH2 0x24CB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2530 DUP2 PUSH2 0x24F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F726465723A204E6F7420666F7220796F750000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x256D PUSH1 0x12 DUP4 PUSH2 0x1E97 JUMP JUMPDEST SWAP2 POP PUSH2 0x2578 DUP3 PUSH2 0x2537 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x259C DUP2 PUSH2 0x2560 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x25B8 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1F1C JUMP JUMPDEST PUSH2 0x25C5 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1DD4 JUMP JUMPDEST PUSH2 0x25D2 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1DD4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4F666665723A2045787069726564000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2610 PUSH1 0xE DUP4 PUSH2 0x1E97 JUMP JUMPDEST SWAP2 POP PUSH2 0x261B DUP3 PUSH2 0x25DA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x263F DUP2 PUSH2 0x2603 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F666665723A20416C72656164792068616E646C656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x267C PUSH1 0x16 DUP4 PUSH2 0x1E97 JUMP JUMPDEST SWAP2 POP PUSH2 0x2687 DUP3 PUSH2 0x2646 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26AB DUP2 PUSH2 0x266F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F666665723A204E6F7420666F7220796F750000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26E8 PUSH1 0x12 DUP4 PUSH2 0x1E97 JUMP JUMPDEST SWAP2 POP PUSH2 0x26F3 DUP3 PUSH2 0x26B2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2717 DUP2 PUSH2 0x26DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F666665723A20496E76616C6964206275796572207369676E61747572650000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2754 PUSH1 0x1E DUP4 PUSH2 0x1E97 JUMP JUMPDEST SWAP2 POP PUSH2 0x275F DUP3 PUSH2 0x271E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2783 DUP2 PUSH2 0x2747 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x27A0 PUSH1 0x0 DUP4 ADD DUP13 PUSH2 0x1F2B JUMP JUMPDEST PUSH2 0x27AD PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x1F1C JUMP JUMPDEST PUSH2 0x27BA PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x1F1C JUMP JUMPDEST PUSH2 0x27C7 PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x1F1C JUMP JUMPDEST PUSH2 0x27D4 PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x1DD4 JUMP JUMPDEST PUSH2 0x27E1 PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x1F1C JUMP JUMPDEST PUSH2 0x27EE PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x1DD4 JUMP JUMPDEST PUSH2 0x27FB PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x1DD4 JUMP JUMPDEST PUSH2 0x2809 PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x1DD4 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2826 DUP2 PUSH2 0x1CD8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2842 JUMPI PUSH2 0x2841 PUSH2 0x1C9C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2850 DUP5 DUP3 DUP6 ADD PUSH2 0x2817 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x53656C6C6572206E6F206C6F6E676572206F776E73204E465400000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x288F PUSH1 0x19 DUP4 PUSH2 0x1E97 JUMP JUMPDEST SWAP2 POP PUSH2 0x289A DUP3 PUSH2 0x2859 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28BE DUP2 PUSH2 0x2882 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28D0 DUP3 PUSH2 0x1DCA JUMP JUMPDEST SWAP2 POP PUSH2 0x28DB DUP4 PUSH2 0x1DCA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x28E9 DUP2 PUSH2 0x1DCA JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2900 JUMPI PUSH2 0x28FF PUSH2 0x2324 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2941 DUP3 PUSH2 0x1DCA JUMP JUMPDEST SWAP2 POP PUSH2 0x294C DUP4 PUSH2 0x1DCA JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x295C JUMPI PUSH2 0x295B PUSH2 0x2907 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2972 DUP3 PUSH2 0x1DCA JUMP JUMPDEST SWAP2 POP PUSH2 0x297D DUP4 PUSH2 0x1DCA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2995 JUMPI PUSH2 0x2994 PUSH2 0x2324 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4665657320657863656564207072696365000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29D1 PUSH1 0x11 DUP4 PUSH2 0x1E97 JUMP JUMPDEST SWAP2 POP PUSH2 0x29DC DUP3 PUSH2 0x299B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A00 DUP2 PUSH2 0x29C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A12 DUP3 PUSH2 0x1DCA JUMP JUMPDEST SWAP2 POP PUSH2 0x2A1D DUP4 PUSH2 0x1DCA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2A35 JUMPI PUSH2 0x2A34 PUSH2 0x2324 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2A50 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1F1C JUMP JUMPDEST PUSH2 0x2A5D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1F1C JUMP JUMPDEST PUSH2 0x2A6A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1DD4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2A7B DUP2 PUSH2 0x1D94 JUMP JUMPDEST DUP2 EQ PUSH2 0x2A86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2A98 DUP2 PUSH2 0x2A72 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2AB4 JUMPI PUSH2 0x2AB3 PUSH2 0x1C9C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2AC2 DUP5 DUP3 DUP6 ADD PUSH2 0x2A89 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E7366657220746F2073656C6C6572206661696C656400000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B01 PUSH1 0x19 DUP4 PUSH2 0x1E97 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B0C DUP3 PUSH2 0x2ACB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B30 DUP2 PUSH2 0x2AF4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x506C6174666F726D20666565207472616E73666572206661696C656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B6D PUSH1 0x1C DUP4 PUSH2 0x1E97 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B78 DUP3 PUSH2 0x2B37 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B9C DUP2 PUSH2 0x2B60 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x526F79616C747920666565207472616E73666572206661696C65640000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BD9 PUSH1 0x1B DUP4 PUSH2 0x1E97 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BE4 DUP3 PUSH2 0x2BA3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C08 DUP2 PUSH2 0x2BCC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2C56 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2C69 JUMPI PUSH2 0x2C68 PUSH2 0x2C0F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2C7E DUP2 PUSH2 0x2097 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2C9B JUMPI PUSH2 0x2C9A PUSH2 0x1C9C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2CA9 DUP6 DUP3 DUP7 ADD PUSH2 0x2817 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2CBA DUP6 DUP3 DUP7 ADD PUSH2 0x2C6F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D08 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F2B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2D23 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1F2B JUMP JUMPDEST PUSH2 0x2D30 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1F2B JUMP JUMPDEST PUSH2 0x2D3D PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1F2B JUMP JUMPDEST PUSH2 0x2D4A PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1DD4 JUMP JUMPDEST PUSH2 0x2D57 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1F1C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D77 DUP2 PUSH2 0x2D61 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2D92 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1F2B JUMP JUMPDEST PUSH2 0x2D9F PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2D6E JUMP JUMPDEST PUSH2 0x2DAC PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1F2B JUMP JUMPDEST PUSH2 0x2DB9 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1F2B JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY DUP16 LOG1 BASEFEE PREVRANDAO 0x26 SHL 0xEE CALLDATALOAD 0x5E 0xAC LOG0 LT 0xC EXTCODEHASH LOG0 PUSH13 0x5B1C92B1DDFD82E1E62BDC3848 ADDMOD PUSH32 0x64736F6C63430008140033000000000000000000000000000000000000000000 ","sourceMap":"758:9020:18:-:0;;;2639:497;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2906:4;2912:7;2929:12;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1857:1:7;2061:7;:21;;;;3501:45:12;3532:13;3501:4;:30;;;;:45;;;;:::i;:::-;3493:53;;;;;;3567:51;3601:16;3567:7;:33;;;;:51;;;;:::i;:::-;3556:62;;;;;;3658:4;3642:22;;;;;;3628:36;;;;;;3707:7;3691:25;;;;;;3674:42;;;;;;3744:13;3727:30;;;;;;3792:23;:21;;;:23;;:::i;:::-;3767:48;;;;;;3847:4;3825:27;;;;;;;;;;3428:431;;2994:1:18::2;2961:35;;:21;:35;;::::0;2953:72:::2;;;;;;;;;;;;:::i;:::-;;;;;;;;;3058:21;3035:20;;:44;;;;;;;;;;;;;;;;;;3110:19;3089:18;:40;;;;2639:497:::0;;;;;758:9020;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2887:340:8:-;2983:11;3032:2;3016:5;3010:19;:24;3006:215;;;3057:20;3071:5;3057:13;;;:20;;:::i;:::-;3050:27;;;;3006:215;3149:5;3108:32;3134:5;3108:25;;;:32;;:::i;:::-;:38;;:46;;;;;;:::i;:::-;;1390:66;3192:17;;3168:42;;2887:340;;;;;:::o;4213:179:12:-;4268:7;2079:95;4326:11;;4339:14;;4355:13;4378:4;4304:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4294:91;;;;;;4287:98;;4213:179;:::o;1708:286:8:-;1773:11;1796:17;1822:3;1796:30;;1854:2;1840:4;:11;:16;1836:72;;;1893:3;1879:18;;;;;;;;;;;:::i;:::-;;;;;;;;1836:72;1974:4;:11;1965:4;1957:13;;;:::i;:::-;1949:22;;:36;1941:45;;1917:70;;;1708:286;;;:::o;3468:175:9:-;3536:20;3617:10;3607:20;;3468:175;;;:::o;7:75:19:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:126::-;2714:7;2754:42;2747:5;2743:54;2732:65;;2677:126;;;:::o;2809:96::-;2846:7;2875:24;2893:5;2875:24;:::i;:::-;2864:35;;2809:96;;;:::o;2911:122::-;2984:24;3002:5;2984:24;:::i;:::-;2977:5;2974:35;2964:63;;3023:1;3020;3013:12;2964:63;2911:122;:::o;3039:143::-;3096:5;3127:6;3121:13;3112:22;;3143:33;3170:5;3143:33;:::i;:::-;3039:143;;;;:::o;3188:77::-;3225:7;3254:5;3243:16;;3188:77;;;:::o;3271:122::-;3344:24;3362:5;3344:24;:::i;:::-;3337:5;3334:35;3324:63;;3383:1;3380;3373:12;3324:63;3271:122;:::o;3399:143::-;3456:5;3487:6;3481:13;3472:22;;3503:33;3530:5;3503:33;:::i;:::-;3399:143;;;;:::o;3548:1323::-;3674:6;3682;3690;3698;3706;3755:3;3743:9;3734:7;3730:23;3726:33;3723:120;;;3762:79;;:::i;:::-;3723:120;3903:1;3892:9;3888:17;3882:24;3933:18;3925:6;3922:30;3919:117;;;3955:79;;:::i;:::-;3919:117;4060:74;4126:7;4117:6;4106:9;4102:22;4060:74;:::i;:::-;4050:84;;3853:291;4204:2;4193:9;4189:18;4183:25;4235:18;4227:6;4224:30;4221:117;;;4257:79;;:::i;:::-;4221:117;4362:74;4428:7;4419:6;4408:9;4404:22;4362:74;:::i;:::-;4352:84;;4154:292;4485:2;4511:64;4567:7;4558:6;4547:9;4543:22;4511:64;:::i;:::-;4501:74;;4456:129;4624:2;4650:64;4706:7;4697:6;4686:9;4682:22;4650:64;:::i;:::-;4640:74;;4595:129;4763:3;4790:64;4846:7;4837:6;4826:9;4822:22;4790:64;:::i;:::-;4780:74;;4734:130;3548:1323;;;;;;;;:::o;4877:118::-;4964:24;4982:5;4964:24;:::i;:::-;4959:3;4952:37;4877:118;;:::o;5001:222::-;5094:4;5132:2;5121:9;5117:18;5109:26;;5145:71;5213:1;5202:9;5198:17;5189:6;5145:71;:::i;:::-;5001:222;;;;:::o;5229:169::-;5313:11;5347:6;5342:3;5335:19;5387:4;5382:3;5378:14;5363:29;;5229:169;;;;:::o;5404:174::-;5544:26;5540:1;5532:6;5528:14;5521:50;5404:174;:::o;5584:366::-;5726:3;5747:67;5811:2;5806:3;5747:67;:::i;:::-;5740:74;;5823:93;5912:3;5823:93;:::i;:::-;5941:2;5936:3;5932:12;5925:19;;5584:366;;;:::o;5956:419::-;6122:4;6160:2;6149:9;6145:18;6137:26;;6209:9;6203:4;6199:20;6195:1;6184:9;6180:17;6173:47;6237:131;6363:4;6237:131;:::i;:::-;6229:139;;5956:419;;;:::o;6381:99::-;6433:6;6467:5;6461:12;6451:22;;6381:99;;;:::o;6486:180::-;6534:77;6531:1;6524:88;6631:4;6628:1;6621:15;6655:4;6652:1;6645:15;6672:320;6716:6;6753:1;6747:4;6743:12;6733:22;;6800:1;6794:4;6790:12;6821:18;6811:81;;6877:4;6869:6;6865:17;6855:27;;6811:81;6939:2;6931:6;6928:14;6908:18;6905:38;6902:84;;6958:18;;:::i;:::-;6902:84;6723:269;6672:320;;;:::o;6998:141::-;7047:4;7070:3;7062:11;;7093:3;7090:1;7083:14;7127:4;7124:1;7114:18;7106:26;;6998:141;;;:::o;7145:93::-;7182:6;7229:2;7224;7217:5;7213:14;7209:23;7199:33;;7145:93;;;:::o;7244:107::-;7288:8;7338:5;7332:4;7328:16;7307:37;;7244:107;;;;:::o;7357:393::-;7426:6;7476:1;7464:10;7460:18;7499:97;7529:66;7518:9;7499:97;:::i;:::-;7617:39;7647:8;7636:9;7617:39;:::i;:::-;7605:51;;7689:4;7685:9;7678:5;7674:21;7665:30;;7738:4;7728:8;7724:19;7717:5;7714:30;7704:40;;7433:317;;7357:393;;;;;:::o;7756:60::-;7784:3;7805:5;7798:12;;7756:60;;;:::o;7822:142::-;7872:9;7905:53;7923:34;7932:24;7950:5;7932:24;:::i;:::-;7923:34;:::i;:::-;7905:53;:::i;:::-;7892:66;;7822:142;;;:::o;7970:75::-;8013:3;8034:5;8027:12;;7970:75;;;:::o;8051:269::-;8161:39;8192:7;8161:39;:::i;:::-;8222:91;8271:41;8295:16;8271:41;:::i;:::-;8263:6;8256:4;8250:11;8222:91;:::i;:::-;8216:4;8209:105;8127:193;8051:269;;;:::o;8326:73::-;8371:3;8326:73;:::o;8405:189::-;8482:32;;:::i;:::-;8523:65;8581:6;8573;8567:4;8523:65;:::i;:::-;8458:136;8405:189;;:::o;8600:186::-;8660:120;8677:3;8670:5;8667:14;8660:120;;;8731:39;8768:1;8761:5;8731:39;:::i;:::-;8704:1;8697:5;8693:13;8684:22;;8660:120;;;8600:186;;:::o;8792:543::-;8893:2;8888:3;8885:11;8882:446;;;8927:38;8959:5;8927:38;:::i;:::-;9011:29;9029:10;9011:29;:::i;:::-;9001:8;8997:44;9194:2;9182:10;9179:18;9176:49;;;9215:8;9200:23;;9176:49;9238:80;9294:22;9312:3;9294:22;:::i;:::-;9284:8;9280:37;9267:11;9238:80;:::i;:::-;8897:431;;8882:446;8792:543;;;:::o;9341:117::-;9395:8;9445:5;9439:4;9435:16;9414:37;;9341:117;;;;:::o;9464:169::-;9508:6;9541:51;9589:1;9585:6;9577:5;9574:1;9570:13;9541:51;:::i;:::-;9537:56;9622:4;9616;9612:15;9602:25;;9515:118;9464:169;;;;:::o;9638:295::-;9714:4;9860:29;9885:3;9879:4;9860:29;:::i;:::-;9852:37;;9922:3;9919:1;9915:11;9909:4;9906:21;9898:29;;9638:295;;;;:::o;9938:1395::-;10055:37;10088:3;10055:37;:::i;:::-;10157:18;10149:6;10146:30;10143:56;;;10179:18;;:::i;:::-;10143:56;10223:38;10255:4;10249:11;10223:38;:::i;:::-;10308:67;10368:6;10360;10354:4;10308:67;:::i;:::-;10402:1;10426:4;10413:17;;10458:2;10450:6;10447:14;10475:1;10470:618;;;;11132:1;11149:6;11146:77;;;11198:9;11193:3;11189:19;11183:26;11174:35;;11146:77;11249:67;11309:6;11302:5;11249:67;:::i;:::-;11243:4;11236:81;11105:222;10440:887;;10470:618;10522:4;10518:9;10510:6;10506:22;10556:37;10588:4;10556:37;:::i;:::-;10615:1;10629:208;10643:7;10640:1;10637:14;10629:208;;;10722:9;10717:3;10713:19;10707:26;10699:6;10692:42;10773:1;10765:6;10761:14;10751:24;;10820:2;10809:9;10805:18;10792:31;;10666:4;10663:1;10659:12;10654:17;;10629:208;;;10865:6;10856:7;10853:19;10850:179;;;10923:9;10918:3;10914:19;10908:26;10966:48;11008:4;11000:6;10996:17;10985:9;10966:48;:::i;:::-;10958:6;10951:64;10873:156;10850:179;11075:1;11071;11063:6;11059:14;11055:22;11049:4;11042:36;10477:611;;;10440:887;;10030:1303;;;9938:1395;;:::o;11339:77::-;11376:7;11405:5;11394:16;;11339:77;;;:::o;11422:118::-;11509:24;11527:5;11509:24;:::i;:::-;11504:3;11497:37;11422:118;;:::o;11546:::-;11633:24;11651:5;11633:24;:::i;:::-;11628:3;11621:37;11546:118;;:::o;11670:664::-;11875:4;11913:3;11902:9;11898:19;11890:27;;11927:71;11995:1;11984:9;11980:17;11971:6;11927:71;:::i;:::-;12008:72;12076:2;12065:9;12061:18;12052:6;12008:72;:::i;:::-;12090;12158:2;12147:9;12143:18;12134:6;12090:72;:::i;:::-;12172;12240:2;12229:9;12225:18;12216:6;12172:72;:::i;:::-;12254:73;12322:3;12311:9;12307:19;12298:6;12254:73;:::i;:::-;11670:664;;;;;;;;:::o;12340:377::-;12428:3;12456:39;12489:5;12456:39;:::i;:::-;12511:71;12575:6;12570:3;12511:71;:::i;:::-;12504:78;;12591:65;12649:6;12644:3;12637:4;12630:5;12626:16;12591:65;:::i;:::-;12681:29;12703:6;12681:29;:::i;:::-;12676:3;12672:39;12665:46;;12432:285;12340:377;;;;:::o;12723:313::-;12836:4;12874:2;12863:9;12859:18;12851:26;;12923:9;12917:4;12913:20;12909:1;12898:9;12894:17;12887:47;12951:78;13024:4;13015:6;12951:78;:::i;:::-;12943:86;;12723:313;;;;:::o;13042:98::-;13093:6;13127:5;13121:12;13111:22;;13042:98;;;:::o;13146:116::-;13197:4;13220:3;13212:11;;13250:4;13245:3;13241:14;13233:22;;13146:116;;;:::o;13268:154::-;13311:11;13347:29;13371:3;13365:10;13347:29;:::i;:::-;13410:5;13386:29;;13323:99;13268:154;;;:::o;13428:594::-;13512:5;13543:38;13575:5;13543:38;:::i;:::-;13606:5;13633:40;13667:5;13633:40;:::i;:::-;13621:52;;13692:35;13718:8;13692:35;:::i;:::-;13683:44;;13751:2;13743:6;13740:14;13737:278;;;13822:169;13907:66;13877:6;13873:2;13869:15;13866:1;13862:23;13822:169;:::i;:::-;13799:5;13778:227;13769:236;;13737:278;13518:504;;13428:594;;;:::o;758:9020:18:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_EIP712Name_2843":{"entryPoint":4095,"id":2843,"parameterSlots":0,"returnSlots":1},"@_EIP712Version_2855":{"entryPoint":4154,"id":2855,"parameterSlots":0,"returnSlots":1},"@_buildDomainSeparator_2773":{"entryPoint":6850,"id":2773,"parameterSlots":0,"returnSlots":1},"@_checkOwner_84":{"entryPoint":3572,"id":84,"parameterSlots":0,"returnSlots":0},"@_domainSeparatorV4_2752":{"entryPoint":6038,"id":2752,"parameterSlots":0,"returnSlots":1},"@_executeTrade_7110":{"entryPoint":4419,"id":7110,"parameterSlots":6,"returnSlots":0},"@_getRoyaltyInfo_7152":{"entryPoint":5886,"id":7152,"parameterSlots":3,"returnSlots":2},"@_hashOrder_6959":{"entryPoint":3707,"id":6959,"parameterSlots":1,"returnSlots":1},"@_hashTypedDataV4_2789":{"entryPoint":5640,"id":2789,"parameterSlots":1,"returnSlots":1},"@_msgSender_399":{"entryPoint":5632,"id":399,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_526":{"entryPoint":5623,"id":526,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_518":{"entryPoint":4213,"id":518,"parameterSlots":0,"returnSlots":0},"@_throwError_2628":{"entryPoint":6494,"id":2628,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":3899,"id":146,"parameterSlots":1,"returnSlots":0},"@_verifySignature_6979":{"entryPoint":4283,"id":6979,"parameterSlots":4,"returnSlots":1},"@byteLength_656":{"entryPoint":7000,"id":656,"parameterSlots":1,"returnSlots":1},"@cancelOrder_6914":{"entryPoint":983,"id":6914,"parameterSlots":1,"returnSlots":0},"@eip712Domain_2831":{"entryPoint":1556,"id":2831,"parameterSlots":0,"returnSlots":7},"@fulfillOffer_6859":{"entryPoint":2695,"id":6859,"parameterSlots":3,"returnSlots":0},"@fulfillOrder_6764":{"entryPoint":1919,"id":6764,"parameterSlots":3,"returnSlots":0},"@incrementNonce_6925":{"entryPoint":1449,"id":6925,"parameterSlots":0,"returnSlots":0},"@orderStatus_6529":{"entryPoint":927,"id":6529,"parameterSlots":0,"returnSlots":0},"@owner_67":{"entryPoint":1732,"id":67,"parameterSlots":0,"returnSlots":1},"@platformFeePercent_6521":{"entryPoint":1726,"id":6521,"parameterSlots":0,"returnSlots":0},"@platformFeeRecipient_6519":{"entryPoint":3400,"id":6519,"parameterSlots":0,"returnSlots":0},"@recover_2385":{"entryPoint":5842,"id":2385,"parameterSlots":2,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":1536,"id":98,"parameterSlots":0,"returnSlots":0},"@setPlatformFeePercent_6633":{"entryPoint":1773,"id":6633,"parameterSlots":1,"returnSlots":0},"@setPlatformFeeRecipient_6660":{"entryPoint":649,"id":6660,"parameterSlots":1,"returnSlots":0},"@toStringWithFallback_723":{"entryPoint":5666,"id":723,"parameterSlots":2,"returnSlots":1},"@toString_624":{"entryPoint":6286,"id":624,"parameterSlots":1,"returnSlots":1},"@toTypedDataHash_2941":{"entryPoint":6221,"id":2941,"parameterSlots":2,"returnSlots":1},"@transferOwnership_126":{"entryPoint":3438,"id":126,"parameterSlots":1,"returnSlots":0},"@tryRecover_2355":{"entryPoint":6402,"id":2355,"parameterSlots":2,"returnSlots":3},"@tryRecover_2543":{"entryPoint":7080,"id":2543,"parameterSlots":4,"returnSlots":3},"@userNonces_6525":{"entryPoint":959,"id":6525,"parameterSlots":0,"returnSlots":0},"abi_decode_t_address":{"entryPoint":7407,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":10263,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":10889,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":7506,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_calldata_ptr":{"entryPoint":8447,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_struct$_Order_$6517_calldata_ptr":{"entryPoint":7683,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":8366,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":11375,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":7428,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":10284,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256_fromMemory":{"entryPoint":11396,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":10910,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32":{"entryPoint":7527,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_Order_$6517_calldata_ptr":{"entryPoint":7715,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_struct$_Order_$6517_calldata_ptrt_bytes_calldata_ptr":{"entryPoint":8533,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256":{"entryPoint":8387,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":8053,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":7964,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":8090,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":7584,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes1_to_t_bytes1_fromStack":{"entryPoint":7805,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":7979,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":7907,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_0cb4d64781e02901606bf70516bdce82d19e6058128666a71941789d19d9cef6_to_t_string_memory_ptr_fromStack":{"entryPoint":9352,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_25e66163f035f2588372d1dbade133571ced130dbc6a5e4e690e4afa56421a18_to_t_string_memory_ptr_fromStack":{"entryPoint":9731,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3c6a554350765611c29c35dfe5335e4aec5cb9b9c15676a48a7e33eb5e4bdcc3_to_t_string_memory_ptr_fromStack":{"entryPoint":11104,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4e92386cd5dd7e50de0bf20dfe9f8dbbf22c6328d9a617b8179cb3bd33bc4b3b_to_t_string_memory_ptr_fromStack":{"entryPoint":9568,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_57b44d607556e0a8d9b0d76349d42e851eb016dfd63ce61ce355fc1ddb14a839_to_t_string_memory_ptr_fromStack":{"entryPoint":10692,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_670b4428482e1cbafe7bcf6b5ec82d2c2dc94aea769da4da4af83ce2be626d42_to_t_string_memory_ptr_fromStack":{"entryPoint":11212,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_80af65d824aa286438ae3de3c5167c9b4c82eb9eb37a9332237e2bb4d6c603d8_to_t_string_memory_ptr_fromStack":{"entryPoint":9839,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8f6f578ebbf968167df384543393bc0cfac4f4e606b30dabcd0d6e81f88de9c3_to_t_string_memory_ptr_fromStack":{"entryPoint":10996,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_92ca134704187ef3fa501c974cfbff448d63adac4439a8c96e86a1025b91450f_to_t_string_memory_ptr_fromStack":{"entryPoint":9203,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_975613551a7372c615f5b299191a9b4b4e24134559b144db5103f92248cec0f3_to_t_string_memory_ptr_fromStack":{"entryPoint":9460,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_adba10029e9d9a97eee76589a6bea4f4e3829223133272d2c777974e12724bb8_to_t_string_memory_ptr_fromStack":{"entryPoint":10055,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ade364304ee64f798a996860d608bb28f2310a00659ec71a8a8a51a6dcbdaa71_to_t_string_memory_ptr_fromStack":{"entryPoint":10370,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b8d33ebd343fbf304361844b0391ff4a69626e716b23174384fc4b57bd13a78a_to_t_string_memory_ptr_fromStack":{"entryPoint":8929,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_bfd76efe5631a7b194613c25bca698c7684113797e8c6b1c167fe0d7d5387838_to_t_string_memory_ptr_fromStack":{"entryPoint":8821,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_da5c3340b8d13a4de28b6034e9771db52d96e1250696e165889248771d6df19d_to_t_string_memory_ptr_fromStack":{"entryPoint":9947,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_fc683099c882a9b602caa77f81b8e2530e69b20f829392585b0207e8d63a65a1_to_t_string_memory_ptr_fromStack":{"entryPoint":8672,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":8038,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":7636,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":11630,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":8316,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":8739,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":10811,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":9635,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":7599,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":8184,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":11507,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_address_t_uint256_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_address_t_uint256_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":10122,"id":null,"parameterSlots":10,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":11534,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":11645,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0cb4d64781e02901606bf70516bdce82d19e6058128666a71941789d19d9cef6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9387,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_25e66163f035f2588372d1dbade133571ced130dbc6a5e4e690e4afa56421a18__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9766,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3c6a554350765611c29c35dfe5335e4aec5cb9b9c15676a48a7e33eb5e4bdcc3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11139,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4e92386cd5dd7e50de0bf20dfe9f8dbbf22c6328d9a617b8179cb3bd33bc4b3b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9603,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_57b44d607556e0a8d9b0d76349d42e851eb016dfd63ce61ce355fc1ddb14a839__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10727,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_670b4428482e1cbafe7bcf6b5ec82d2c2dc94aea769da4da4af83ce2be626d42__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11247,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_80af65d824aa286438ae3de3c5167c9b4c82eb9eb37a9332237e2bb4d6c603d8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9874,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8f6f578ebbf968167df384543393bc0cfac4f4e606b30dabcd0d6e81f88de9c3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11031,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_92ca134704187ef3fa501c974cfbff448d63adac4439a8c96e86a1025b91450f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9238,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_975613551a7372c615f5b299191a9b4b4e24134559b144db5103f92248cec0f3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9495,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_adba10029e9d9a97eee76589a6bea4f4e3829223133272d2c777974e12724bb8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10090,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ade364304ee64f798a996860d608bb28f2310a00659ec71a8a8a51a6dcbdaa71__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10405,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b8d33ebd343fbf304361844b0391ff4a69626e716b23174384fc4b57bd13a78a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8964,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_bfd76efe5631a7b194613c25bca698c7684113797e8c6b1c167fe0d7d5387838__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8856,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_da5c3340b8d13a4de28b6034e9771db52d96e1250696e165889248771d6df19d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9982,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fc683099c882a9b602caa77f81b8e2530e69b20f829392585b0207e8d63a65a1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8707,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":7651,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":9270,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":8022,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":7994,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":7820,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":8077,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":8005,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":7831,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":10599,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":10550,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":10437,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":10759,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":7366,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":7572,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes1":{"entryPoint":7761,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":7473,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":7334,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":7626,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":11617,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":7848,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":11326,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":9043,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":8996,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":10503,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":11460,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":11279,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":9115,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":8437,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":8432,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d":{"entryPoint":7678,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":8442,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":7329,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":7324,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":7890,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_0cb4d64781e02901606bf70516bdce82d19e6058128666a71941789d19d9cef6":{"entryPoint":9311,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_25e66163f035f2588372d1dbade133571ced130dbc6a5e4e690e4afa56421a18":{"entryPoint":9690,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3c6a554350765611c29c35dfe5335e4aec5cb9b9c15676a48a7e33eb5e4bdcc3":{"entryPoint":11063,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4e92386cd5dd7e50de0bf20dfe9f8dbbf22c6328d9a617b8179cb3bd33bc4b3b":{"entryPoint":9527,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_57b44d607556e0a8d9b0d76349d42e851eb016dfd63ce61ce355fc1ddb14a839":{"entryPoint":10651,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_670b4428482e1cbafe7bcf6b5ec82d2c2dc94aea769da4da4af83ce2be626d42":{"entryPoint":11171,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_80af65d824aa286438ae3de3c5167c9b4c82eb9eb37a9332237e2bb4d6c603d8":{"entryPoint":9798,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8f6f578ebbf968167df384543393bc0cfac4f4e606b30dabcd0d6e81f88de9c3":{"entryPoint":10955,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_92ca134704187ef3fa501c974cfbff448d63adac4439a8c96e86a1025b91450f":{"entryPoint":9162,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_975613551a7372c615f5b299191a9b4b4e24134559b144db5103f92248cec0f3":{"entryPoint":9419,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_adba10029e9d9a97eee76589a6bea4f4e3829223133272d2c777974e12724bb8":{"entryPoint":10014,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ade364304ee64f798a996860d608bb28f2310a00659ec71a8a8a51a6dcbdaa71":{"entryPoint":10329,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b8d33ebd343fbf304361844b0391ff4a69626e716b23174384fc4b57bd13a78a":{"entryPoint":8888,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_bfd76efe5631a7b194613c25bca698c7684113797e8c6b1c167fe0d7d5387838":{"entryPoint":8780,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_da5c3340b8d13a4de28b6034e9771db52d96e1250696e165889248771d6df19d":{"entryPoint":9906,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fc683099c882a9b602caa77f81b8e2530e69b20f829392585b0207e8d63a65a1":{"entryPoint":8631,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":7384,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":10866,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":7483,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":8343,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:34650:19","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:19","statements":[{"nodeType":"YulAssignment","src":"57:19:19","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:19","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:19"},"nodeType":"YulFunctionCall","src":"67:9:19"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:19"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:19","type":""}],"src":"7:75:19"},{"body":{"nodeType":"YulBlock","src":"177:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:19"},"nodeType":"YulFunctionCall","src":"187:12:19"},"nodeType":"YulExpressionStatement","src":"187:12:19"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:19"},{"body":{"nodeType":"YulBlock","src":"300:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:19"},"nodeType":"YulFunctionCall","src":"310:12:19"},"nodeType":"YulExpressionStatement","src":"310:12:19"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:19"},{"body":{"nodeType":"YulBlock","src":"379:81:19","statements":[{"nodeType":"YulAssignment","src":"389:65:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:19"},"nodeType":"YulFunctionCall","src":"400:54:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:19"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:19","type":""}],"src":"334:126:19"},{"body":{"nodeType":"YulBlock","src":"511:51:19","statements":[{"nodeType":"YulAssignment","src":"521:35:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:19"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:19"},"nodeType":"YulFunctionCall","src":"532:24:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:19"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:19","type":""}],"src":"466:96:19"},{"body":{"nodeType":"YulBlock","src":"611:79:19","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:19"},"nodeType":"YulFunctionCall","src":"670:12:19"},"nodeType":"YulExpressionStatement","src":"670:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:19"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:19"},"nodeType":"YulFunctionCall","src":"641:24:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:19"},"nodeType":"YulFunctionCall","src":"631:35:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:19"},"nodeType":"YulFunctionCall","src":"624:43:19"},"nodeType":"YulIf","src":"621:63:19"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:19","type":""}],"src":"568:122:19"},{"body":{"nodeType":"YulBlock","src":"748:87:19","statements":[{"nodeType":"YulAssignment","src":"758:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"780:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"767:12:19"},"nodeType":"YulFunctionCall","src":"767:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"758:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"823:5:19"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"796:26:19"},"nodeType":"YulFunctionCall","src":"796:33:19"},"nodeType":"YulExpressionStatement","src":"796:33:19"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"726:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"734:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"742:5:19","type":""}],"src":"696:139:19"},{"body":{"nodeType":"YulBlock","src":"907:263:19","statements":[{"body":{"nodeType":"YulBlock","src":"953:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"955:77:19"},"nodeType":"YulFunctionCall","src":"955:79:19"},"nodeType":"YulExpressionStatement","src":"955:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"928:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"937:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"924:3:19"},"nodeType":"YulFunctionCall","src":"924:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"949:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"920:3:19"},"nodeType":"YulFunctionCall","src":"920:32:19"},"nodeType":"YulIf","src":"917:119:19"},{"nodeType":"YulBlock","src":"1046:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"1061:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"1075:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1065:6:19","type":""}]},{"nodeType":"YulAssignment","src":"1090:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1125:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"1136:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1121:3:19"},"nodeType":"YulFunctionCall","src":"1121:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1145:7:19"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1100:20:19"},"nodeType":"YulFunctionCall","src":"1100:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1090:6:19"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"877:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"888:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"900:6:19","type":""}],"src":"841:329:19"},{"body":{"nodeType":"YulBlock","src":"1221:32:19","statements":[{"nodeType":"YulAssignment","src":"1231:16:19","value":{"name":"value","nodeType":"YulIdentifier","src":"1242:5:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1231:7:19"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1203:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1213:7:19","type":""}],"src":"1176:77:19"},{"body":{"nodeType":"YulBlock","src":"1302:79:19","statements":[{"body":{"nodeType":"YulBlock","src":"1359:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1368:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1371:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1361:6:19"},"nodeType":"YulFunctionCall","src":"1361:12:19"},"nodeType":"YulExpressionStatement","src":"1361:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1325:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1350:5:19"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"1332:17:19"},"nodeType":"YulFunctionCall","src":"1332:24:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1322:2:19"},"nodeType":"YulFunctionCall","src":"1322:35:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1315:6:19"},"nodeType":"YulFunctionCall","src":"1315:43:19"},"nodeType":"YulIf","src":"1312:63:19"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1295:5:19","type":""}],"src":"1259:122:19"},{"body":{"nodeType":"YulBlock","src":"1439:87:19","statements":[{"nodeType":"YulAssignment","src":"1449:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1471:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1458:12:19"},"nodeType":"YulFunctionCall","src":"1458:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1449:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1514:5:19"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"1487:26:19"},"nodeType":"YulFunctionCall","src":"1487:33:19"},"nodeType":"YulExpressionStatement","src":"1487:33:19"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1417:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"1425:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1433:5:19","type":""}],"src":"1387:139:19"},{"body":{"nodeType":"YulBlock","src":"1598:263:19","statements":[{"body":{"nodeType":"YulBlock","src":"1644:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1646:77:19"},"nodeType":"YulFunctionCall","src":"1646:79:19"},"nodeType":"YulExpressionStatement","src":"1646:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1619:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"1628:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1615:3:19"},"nodeType":"YulFunctionCall","src":"1615:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"1640:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1611:3:19"},"nodeType":"YulFunctionCall","src":"1611:32:19"},"nodeType":"YulIf","src":"1608:119:19"},{"nodeType":"YulBlock","src":"1737:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"1752:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"1766:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1756:6:19","type":""}]},{"nodeType":"YulAssignment","src":"1781:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1816:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"1827:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1812:3:19"},"nodeType":"YulFunctionCall","src":"1812:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1836:7:19"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"1791:20:19"},"nodeType":"YulFunctionCall","src":"1791:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1781:6:19"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1568:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1579:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1591:6:19","type":""}],"src":"1532:329:19"},{"body":{"nodeType":"YulBlock","src":"1909:48:19","statements":[{"nodeType":"YulAssignment","src":"1919:32:19","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1944:5:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1937:6:19"},"nodeType":"YulFunctionCall","src":"1937:13:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1930:6:19"},"nodeType":"YulFunctionCall","src":"1930:21:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1919:7:19"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1891:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1901:7:19","type":""}],"src":"1867:90:19"},{"body":{"nodeType":"YulBlock","src":"2022:50:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2039:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2059:5:19"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"2044:14:19"},"nodeType":"YulFunctionCall","src":"2044:21:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2032:6:19"},"nodeType":"YulFunctionCall","src":"2032:34:19"},"nodeType":"YulExpressionStatement","src":"2032:34:19"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2010:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2017:3:19","type":""}],"src":"1963:109:19"},{"body":{"nodeType":"YulBlock","src":"2170:118:19","statements":[{"nodeType":"YulAssignment","src":"2180:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2192:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2203:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2188:3:19"},"nodeType":"YulFunctionCall","src":"2188:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2180:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2254:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2267:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2278:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2263:3:19"},"nodeType":"YulFunctionCall","src":"2263:17:19"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"2216:37:19"},"nodeType":"YulFunctionCall","src":"2216:65:19"},"nodeType":"YulExpressionStatement","src":"2216:65:19"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2142:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2154:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2165:4:19","type":""}],"src":"2078:210:19"},{"body":{"nodeType":"YulBlock","src":"2339:32:19","statements":[{"nodeType":"YulAssignment","src":"2349:16:19","value":{"name":"value","nodeType":"YulIdentifier","src":"2360:5:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2349:7:19"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2321:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2331:7:19","type":""}],"src":"2294:77:19"},{"body":{"nodeType":"YulBlock","src":"2442:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2459:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2482:5:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2464:17:19"},"nodeType":"YulFunctionCall","src":"2464:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2452:6:19"},"nodeType":"YulFunctionCall","src":"2452:37:19"},"nodeType":"YulExpressionStatement","src":"2452:37:19"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2430:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2437:3:19","type":""}],"src":"2377:118:19"},{"body":{"nodeType":"YulBlock","src":"2599:124:19","statements":[{"nodeType":"YulAssignment","src":"2609:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2621:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2632:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2617:3:19"},"nodeType":"YulFunctionCall","src":"2617:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2609:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2689:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2702:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"2713:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2698:3:19"},"nodeType":"YulFunctionCall","src":"2698:17:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"2645:43:19"},"nodeType":"YulFunctionCall","src":"2645:71:19"},"nodeType":"YulExpressionStatement","src":"2645:71:19"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2571:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2583:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2594:4:19","type":""}],"src":"2501:222:19"},{"body":{"nodeType":"YulBlock","src":"2818:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2835:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2838:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2828:6:19"},"nodeType":"YulFunctionCall","src":"2828:12:19"},"nodeType":"YulExpressionStatement","src":"2828:12:19"}]},"name":"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d","nodeType":"YulFunctionDefinition","src":"2729:117:19"},{"body":{"nodeType":"YulBlock","src":"2961:153:19","statements":[{"body":{"nodeType":"YulBlock","src":"3001:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d","nodeType":"YulIdentifier","src":"3003:77:19"},"nodeType":"YulFunctionCall","src":"3003:79:19"},"nodeType":"YulExpressionStatement","src":"3003:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"2982:3:19"},{"name":"offset","nodeType":"YulIdentifier","src":"2987:6:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2978:3:19"},"nodeType":"YulFunctionCall","src":"2978:16:19"},{"kind":"number","nodeType":"YulLiteral","src":"2996:3:19","type":"","value":"256"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2974:3:19"},"nodeType":"YulFunctionCall","src":"2974:26:19"},"nodeType":"YulIf","src":"2971:113:19"},{"nodeType":"YulAssignment","src":"3093:15:19","value":{"name":"offset","nodeType":"YulIdentifier","src":"3102:6:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3093:5:19"}]}]},"name":"abi_decode_t_struct$_Order_$6517_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2939:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"2947:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2955:5:19","type":""}],"src":"2884:230:19"},{"body":{"nodeType":"YulBlock","src":"3211:289:19","statements":[{"body":{"nodeType":"YulBlock","src":"3258:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3260:77:19"},"nodeType":"YulFunctionCall","src":"3260:79:19"},"nodeType":"YulExpressionStatement","src":"3260:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3232:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"3241:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3228:3:19"},"nodeType":"YulFunctionCall","src":"3228:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"3253:3:19","type":"","value":"256"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3224:3:19"},"nodeType":"YulFunctionCall","src":"3224:33:19"},"nodeType":"YulIf","src":"3221:120:19"},{"nodeType":"YulBlock","src":"3351:142:19","statements":[{"nodeType":"YulVariableDeclaration","src":"3366:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"3380:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3370:6:19","type":""}]},{"nodeType":"YulAssignment","src":"3395:88:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3455:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"3466:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3451:3:19"},"nodeType":"YulFunctionCall","src":"3451:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3475:7:19"}],"functionName":{"name":"abi_decode_t_struct$_Order_$6517_calldata_ptr","nodeType":"YulIdentifier","src":"3405:45:19"},"nodeType":"YulFunctionCall","src":"3405:78:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3395:6:19"}]}]}]},"name":"abi_decode_tuple_t_struct$_Order_$6517_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3181:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3192:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3204:6:19","type":""}],"src":"3120:380:19"},{"body":{"nodeType":"YulBlock","src":"3550:105:19","statements":[{"nodeType":"YulAssignment","src":"3560:89:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3575:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"3582:66:19","type":"","value":"0xff00000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3571:3:19"},"nodeType":"YulFunctionCall","src":"3571:78:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3560:7:19"}]}]},"name":"cleanup_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3532:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3542:7:19","type":""}],"src":"3506:149:19"},{"body":{"nodeType":"YulBlock","src":"3724:52:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3741:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3763:5:19"}],"functionName":{"name":"cleanup_t_bytes1","nodeType":"YulIdentifier","src":"3746:16:19"},"nodeType":"YulFunctionCall","src":"3746:23:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3734:6:19"},"nodeType":"YulFunctionCall","src":"3734:36:19"},"nodeType":"YulExpressionStatement","src":"3734:36:19"}]},"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3712:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3719:3:19","type":""}],"src":"3661:115:19"},{"body":{"nodeType":"YulBlock","src":"3841:40:19","statements":[{"nodeType":"YulAssignment","src":"3852:22:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3868:5:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3862:5:19"},"nodeType":"YulFunctionCall","src":"3862:12:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3852:6:19"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3824:5:19","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3834:6:19","type":""}],"src":"3782:99:19"},{"body":{"nodeType":"YulBlock","src":"3983:73:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4000:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"4005:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3993:6:19"},"nodeType":"YulFunctionCall","src":"3993:19:19"},"nodeType":"YulExpressionStatement","src":"3993:19:19"},{"nodeType":"YulAssignment","src":"4021:29:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4040:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"4045:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4036:3:19"},"nodeType":"YulFunctionCall","src":"4036:14:19"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"4021:11:19"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3955:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"3960:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"3971:11:19","type":""}],"src":"3887:169:19"},{"body":{"nodeType":"YulBlock","src":"4124:184:19","statements":[{"nodeType":"YulVariableDeclaration","src":"4134:10:19","value":{"kind":"number","nodeType":"YulLiteral","src":"4143:1:19","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4138:1:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"4203:63:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4228:3:19"},{"name":"i","nodeType":"YulIdentifier","src":"4233:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4224:3:19"},"nodeType":"YulFunctionCall","src":"4224:11:19"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4247:3:19"},{"name":"i","nodeType":"YulIdentifier","src":"4252:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4243:3:19"},"nodeType":"YulFunctionCall","src":"4243:11:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4237:5:19"},"nodeType":"YulFunctionCall","src":"4237:18:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4217:6:19"},"nodeType":"YulFunctionCall","src":"4217:39:19"},"nodeType":"YulExpressionStatement","src":"4217:39:19"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4164:1:19"},{"name":"length","nodeType":"YulIdentifier","src":"4167:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4161:2:19"},"nodeType":"YulFunctionCall","src":"4161:13:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4175:19:19","statements":[{"nodeType":"YulAssignment","src":"4177:15:19","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4186:1:19"},{"kind":"number","nodeType":"YulLiteral","src":"4189:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4182:3:19"},"nodeType":"YulFunctionCall","src":"4182:10:19"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4177:1:19"}]}]},"pre":{"nodeType":"YulBlock","src":"4157:3:19","statements":[]},"src":"4153:113:19"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4286:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"4291:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4282:3:19"},"nodeType":"YulFunctionCall","src":"4282:16:19"},{"kind":"number","nodeType":"YulLiteral","src":"4300:1:19","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4275:6:19"},"nodeType":"YulFunctionCall","src":"4275:27:19"},"nodeType":"YulExpressionStatement","src":"4275:27:19"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4106:3:19","type":""},{"name":"dst","nodeType":"YulTypedName","src":"4111:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"4116:6:19","type":""}],"src":"4062:246:19"},{"body":{"nodeType":"YulBlock","src":"4362:54:19","statements":[{"nodeType":"YulAssignment","src":"4372:38:19","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4390:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"4397:2:19","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4386:3:19"},"nodeType":"YulFunctionCall","src":"4386:14:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4406:2:19","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4402:3:19"},"nodeType":"YulFunctionCall","src":"4402:7:19"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4382:3:19"},"nodeType":"YulFunctionCall","src":"4382:28:19"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4372:6:19"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4345:5:19","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4355:6:19","type":""}],"src":"4314:102:19"},{"body":{"nodeType":"YulBlock","src":"4514:285:19","statements":[{"nodeType":"YulVariableDeclaration","src":"4524:53:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4571:5:19"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4538:32:19"},"nodeType":"YulFunctionCall","src":"4538:39:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4528:6:19","type":""}]},{"nodeType":"YulAssignment","src":"4586:78:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4652:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"4657:6:19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4593:58:19"},"nodeType":"YulFunctionCall","src":"4593:71:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4586:3:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4712:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"4719:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4708:3:19"},"nodeType":"YulFunctionCall","src":"4708:16:19"},{"name":"pos","nodeType":"YulIdentifier","src":"4726:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"4731:6:19"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"4673:34:19"},"nodeType":"YulFunctionCall","src":"4673:65:19"},"nodeType":"YulExpressionStatement","src":"4673:65:19"},{"nodeType":"YulAssignment","src":"4747:46:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4758:3:19"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4785:6:19"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4763:21:19"},"nodeType":"YulFunctionCall","src":"4763:29:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4754:3:19"},"nodeType":"YulFunctionCall","src":"4754:39:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4747:3:19"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4495:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4502:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4510:3:19","type":""}],"src":"4422:377:19"},{"body":{"nodeType":"YulBlock","src":"4870:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4887:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4910:5:19"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4892:17:19"},"nodeType":"YulFunctionCall","src":"4892:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4880:6:19"},"nodeType":"YulFunctionCall","src":"4880:37:19"},"nodeType":"YulExpressionStatement","src":"4880:37:19"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4858:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4865:3:19","type":""}],"src":"4805:118:19"},{"body":{"nodeType":"YulBlock","src":"4994:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5011:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5034:5:19"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"5016:17:19"},"nodeType":"YulFunctionCall","src":"5016:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5004:6:19"},"nodeType":"YulFunctionCall","src":"5004:37:19"},"nodeType":"YulExpressionStatement","src":"5004:37:19"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4982:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4989:3:19","type":""}],"src":"4929:118:19"},{"body":{"nodeType":"YulBlock","src":"5127:40:19","statements":[{"nodeType":"YulAssignment","src":"5138:22:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5154:5:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5148:5:19"},"nodeType":"YulFunctionCall","src":"5148:12:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5138:6:19"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5110:5:19","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5120:6:19","type":""}],"src":"5053:114:19"},{"body":{"nodeType":"YulBlock","src":"5284:73:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5301:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"5306:6:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5294:6:19"},"nodeType":"YulFunctionCall","src":"5294:19:19"},"nodeType":"YulExpressionStatement","src":"5294:19:19"},{"nodeType":"YulAssignment","src":"5322:29:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5341:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"5346:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5337:3:19"},"nodeType":"YulFunctionCall","src":"5337:14:19"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"5322:11:19"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5256:3:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"5261:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"5272:11:19","type":""}],"src":"5173:184:19"},{"body":{"nodeType":"YulBlock","src":"5435:60:19","statements":[{"nodeType":"YulAssignment","src":"5445:11:19","value":{"name":"ptr","nodeType":"YulIdentifier","src":"5453:3:19"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"5445:4:19"}]},{"nodeType":"YulAssignment","src":"5466:22:19","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"5478:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"5483:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5474:3:19"},"nodeType":"YulFunctionCall","src":"5474:14:19"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"5466:4:19"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"5422:3:19","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"5430:4:19","type":""}],"src":"5363:132:19"},{"body":{"nodeType":"YulBlock","src":"5556:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5573:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5596:5:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5578:17:19"},"nodeType":"YulFunctionCall","src":"5578:24:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5566:6:19"},"nodeType":"YulFunctionCall","src":"5566:37:19"},"nodeType":"YulExpressionStatement","src":"5566:37:19"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5544:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5551:3:19","type":""}],"src":"5501:108:19"},{"body":{"nodeType":"YulBlock","src":"5695:99:19","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5739:6:19"},{"name":"pos","nodeType":"YulIdentifier","src":"5747:3:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5705:33:19"},"nodeType":"YulFunctionCall","src":"5705:46:19"},"nodeType":"YulExpressionStatement","src":"5705:46:19"},{"nodeType":"YulAssignment","src":"5760:28:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5778:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"5783:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5774:3:19"},"nodeType":"YulFunctionCall","src":"5774:14:19"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"5760:10:19"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"5668:6:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5676:3:19","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"5684:10:19","type":""}],"src":"5615:179:19"},{"body":{"nodeType":"YulBlock","src":"5875:38:19","statements":[{"nodeType":"YulAssignment","src":"5885:22:19","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"5897:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"5902:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5893:3:19"},"nodeType":"YulFunctionCall","src":"5893:14:19"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"5885:4:19"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"5862:3:19","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"5870:4:19","type":""}],"src":"5800:113:19"},{"body":{"nodeType":"YulBlock","src":"6073:608:19","statements":[{"nodeType":"YulVariableDeclaration","src":"6083:68:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6145:5:19"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6097:47:19"},"nodeType":"YulFunctionCall","src":"6097:54:19"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6087:6:19","type":""}]},{"nodeType":"YulAssignment","src":"6160:93:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6241:3:19"},{"name":"length","nodeType":"YulIdentifier","src":"6246:6:19"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6167:73:19"},"nodeType":"YulFunctionCall","src":"6167:86:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6160:3:19"}]},{"nodeType":"YulVariableDeclaration","src":"6262:71:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6327:5:19"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6277:49:19"},"nodeType":"YulFunctionCall","src":"6277:56:19"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"6266:7:19","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6342:21:19","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"6356:7:19"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"6346:6:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"6432:224:19","statements":[{"nodeType":"YulVariableDeclaration","src":"6446:34:19","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6473:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6467:5:19"},"nodeType":"YulFunctionCall","src":"6467:13:19"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"6450:13:19","type":""}]},{"nodeType":"YulAssignment","src":"6493:70:19","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"6544:13:19"},{"name":"pos","nodeType":"YulIdentifier","src":"6559:3:19"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"6500:43:19"},"nodeType":"YulFunctionCall","src":"6500:63:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6493:3:19"}]},{"nodeType":"YulAssignment","src":"6576:70:19","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6639:6:19"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6586:52:19"},"nodeType":"YulFunctionCall","src":"6586:60:19"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6576:6:19"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6394:1:19"},{"name":"length","nodeType":"YulIdentifier","src":"6397:6:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6391:2:19"},"nodeType":"YulFunctionCall","src":"6391:13:19"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6405:18:19","statements":[{"nodeType":"YulAssignment","src":"6407:14:19","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6416:1:19"},{"kind":"number","nodeType":"YulLiteral","src":"6419:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6412:3:19"},"nodeType":"YulFunctionCall","src":"6412:9:19"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6407:1:19"}]}]},"pre":{"nodeType":"YulBlock","src":"6376:14:19","statements":[{"nodeType":"YulVariableDeclaration","src":"6378:10:19","value":{"kind":"number","nodeType":"YulLiteral","src":"6387:1:19","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6382:1:19","type":""}]}]},"src":"6372:284:19"},{"nodeType":"YulAssignment","src":"6665:10:19","value":{"name":"pos","nodeType":"YulIdentifier","src":"6672:3:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6665:3:19"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6052:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6059:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6068:3:19","type":""}],"src":"5949:732:19"},{"body":{"nodeType":"YulBlock","src":"7041:861:19","statements":[{"nodeType":"YulAssignment","src":"7051:27:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7063:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"7074:3:19","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7059:3:19"},"nodeType":"YulFunctionCall","src":"7059:19:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7051:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7130:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7143:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"7154:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7139:3:19"},"nodeType":"YulFunctionCall","src":"7139:17:19"}],"functionName":{"name":"abi_encode_t_bytes1_to_t_bytes1_fromStack","nodeType":"YulIdentifier","src":"7088:41:19"},"nodeType":"YulFunctionCall","src":"7088:69:19"},"nodeType":"YulExpressionStatement","src":"7088:69:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7178:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"7189:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7174:3:19"},"nodeType":"YulFunctionCall","src":"7174:18:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7198:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"7204:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7194:3:19"},"nodeType":"YulFunctionCall","src":"7194:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7167:6:19"},"nodeType":"YulFunctionCall","src":"7167:48:19"},"nodeType":"YulExpressionStatement","src":"7167:48:19"},{"nodeType":"YulAssignment","src":"7224:86:19","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7296:6:19"},{"name":"tail","nodeType":"YulIdentifier","src":"7305:4:19"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7232:63:19"},"nodeType":"YulFunctionCall","src":"7232:78:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7224:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7331:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"7342:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7327:3:19"},"nodeType":"YulFunctionCall","src":"7327:18:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7351:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"7357:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7347:3:19"},"nodeType":"YulFunctionCall","src":"7347:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7320:6:19"},"nodeType":"YulFunctionCall","src":"7320:48:19"},"nodeType":"YulExpressionStatement","src":"7320:48:19"},{"nodeType":"YulAssignment","src":"7377:86:19","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"7449:6:19"},{"name":"tail","nodeType":"YulIdentifier","src":"7458:4:19"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7385:63:19"},"nodeType":"YulFunctionCall","src":"7385:78:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7377:4:19"}]},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"7517:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7530:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"7541:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7526:3:19"},"nodeType":"YulFunctionCall","src":"7526:18:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7473:43:19"},"nodeType":"YulFunctionCall","src":"7473:72:19"},"nodeType":"YulExpressionStatement","src":"7473:72:19"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"7599:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7612:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"7623:3:19","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7608:3:19"},"nodeType":"YulFunctionCall","src":"7608:19:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"7555:43:19"},"nodeType":"YulFunctionCall","src":"7555:73:19"},"nodeType":"YulExpressionStatement","src":"7555:73:19"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"7682:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7695:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"7706:3:19","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7691:3:19"},"nodeType":"YulFunctionCall","src":"7691:19:19"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"7638:43:19"},"nodeType":"YulFunctionCall","src":"7638:73:19"},"nodeType":"YulExpressionStatement","src":"7638:73:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7732:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"7743:3:19","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7728:3:19"},"nodeType":"YulFunctionCall","src":"7728:19:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7753:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"7759:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7749:3:19"},"nodeType":"YulFunctionCall","src":"7749:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7721:6:19"},"nodeType":"YulFunctionCall","src":"7721:49:19"},"nodeType":"YulExpressionStatement","src":"7721:49:19"},{"nodeType":"YulAssignment","src":"7779:116:19","value":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"7881:6:19"},{"name":"tail","nodeType":"YulIdentifier","src":"7890:4:19"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7787:93:19"},"nodeType":"YulFunctionCall","src":"7787:108:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7779:4:19"}]}]},"name":"abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6965:9:19","type":""},{"name":"value6","nodeType":"YulTypedName","src":"6977:6:19","type":""},{"name":"value5","nodeType":"YulTypedName","src":"6985:6:19","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6993:6:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"7001:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7009:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7017:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7025:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7036:4:19","type":""}],"src":"6687:1215:19"},{"body":{"nodeType":"YulBlock","src":"8006:124:19","statements":[{"nodeType":"YulAssignment","src":"8016:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8028:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"8039:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8024:3:19"},"nodeType":"YulFunctionCall","src":"8024:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8016:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8096:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8109:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"8120:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8105:3:19"},"nodeType":"YulFunctionCall","src":"8105:17:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"8052:43:19"},"nodeType":"YulFunctionCall","src":"8052:71:19"},"nodeType":"YulExpressionStatement","src":"8052:71:19"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7978:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7990:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8001:4:19","type":""}],"src":"7908:222:19"},{"body":{"nodeType":"YulBlock","src":"8179:79:19","statements":[{"body":{"nodeType":"YulBlock","src":"8236:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8245:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8248:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8238:6:19"},"nodeType":"YulFunctionCall","src":"8238:12:19"},"nodeType":"YulExpressionStatement","src":"8238:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8202:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8227:5:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8209:17:19"},"nodeType":"YulFunctionCall","src":"8209:24:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8199:2:19"},"nodeType":"YulFunctionCall","src":"8199:35:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8192:6:19"},"nodeType":"YulFunctionCall","src":"8192:43:19"},"nodeType":"YulIf","src":"8189:63:19"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8172:5:19","type":""}],"src":"8136:122:19"},{"body":{"nodeType":"YulBlock","src":"8316:87:19","statements":[{"nodeType":"YulAssignment","src":"8326:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8348:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8335:12:19"},"nodeType":"YulFunctionCall","src":"8335:20:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8326:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8391:5:19"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"8364:26:19"},"nodeType":"YulFunctionCall","src":"8364:33:19"},"nodeType":"YulExpressionStatement","src":"8364:33:19"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8294:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"8302:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"8310:5:19","type":""}],"src":"8264:139:19"},{"body":{"nodeType":"YulBlock","src":"8475:263:19","statements":[{"body":{"nodeType":"YulBlock","src":"8521:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8523:77:19"},"nodeType":"YulFunctionCall","src":"8523:79:19"},"nodeType":"YulExpressionStatement","src":"8523:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8496:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"8505:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8492:3:19"},"nodeType":"YulFunctionCall","src":"8492:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"8517:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8488:3:19"},"nodeType":"YulFunctionCall","src":"8488:32:19"},"nodeType":"YulIf","src":"8485:119:19"},{"nodeType":"YulBlock","src":"8614:117:19","statements":[{"nodeType":"YulVariableDeclaration","src":"8629:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"8643:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8633:6:19","type":""}]},{"nodeType":"YulAssignment","src":"8658:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8693:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"8704:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8689:3:19"},"nodeType":"YulFunctionCall","src":"8689:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8713:7:19"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"8668:20:19"},"nodeType":"YulFunctionCall","src":"8668:53:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8658:6:19"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8445:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8456:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8468:6:19","type":""}],"src":"8409:329:19"},{"body":{"nodeType":"YulBlock","src":"8833:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8850:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8853:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8843:6:19"},"nodeType":"YulFunctionCall","src":"8843:12:19"},"nodeType":"YulExpressionStatement","src":"8843:12:19"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"8744:117:19"},{"body":{"nodeType":"YulBlock","src":"8956:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8973:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8976:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8966:6:19"},"nodeType":"YulFunctionCall","src":"8966:12:19"},"nodeType":"YulExpressionStatement","src":"8966:12:19"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulFunctionDefinition","src":"8867:117:19"},{"body":{"nodeType":"YulBlock","src":"9079:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9096:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9099:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9089:6:19"},"nodeType":"YulFunctionCall","src":"9089:12:19"},"nodeType":"YulExpressionStatement","src":"9089:12:19"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"8990:117:19"},{"body":{"nodeType":"YulBlock","src":"9200:478:19","statements":[{"body":{"nodeType":"YulBlock","src":"9249:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"9251:77:19"},"nodeType":"YulFunctionCall","src":"9251:79:19"},"nodeType":"YulExpressionStatement","src":"9251:79:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9228:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"9236:4:19","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9224:3:19"},"nodeType":"YulFunctionCall","src":"9224:17:19"},{"name":"end","nodeType":"YulIdentifier","src":"9243:3:19"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9220:3:19"},"nodeType":"YulFunctionCall","src":"9220:27:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9213:6:19"},"nodeType":"YulFunctionCall","src":"9213:35:19"},"nodeType":"YulIf","src":"9210:122:19"},{"nodeType":"YulAssignment","src":"9341:30:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9364:6:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9351:12:19"},"nodeType":"YulFunctionCall","src":"9351:20:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"9341:6:19"}]},{"body":{"nodeType":"YulBlock","src":"9414:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nodeType":"YulIdentifier","src":"9416:77:19"},"nodeType":"YulFunctionCall","src":"9416:79:19"},"nodeType":"YulExpressionStatement","src":"9416:79:19"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9386:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"9394:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9383:2:19"},"nodeType":"YulFunctionCall","src":"9383:30:19"},"nodeType":"YulIf","src":"9380:117:19"},{"nodeType":"YulAssignment","src":"9506:29:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9522:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"9530:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9518:3:19"},"nodeType":"YulFunctionCall","src":"9518:17:19"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"9506:8:19"}]},{"body":{"nodeType":"YulBlock","src":"9589:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"9591:77:19"},"nodeType":"YulFunctionCall","src":"9591:79:19"},"nodeType":"YulExpressionStatement","src":"9591:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"9554:8:19"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9568:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"9576:4:19","type":"","value":"0x01"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"9564:3:19"},"nodeType":"YulFunctionCall","src":"9564:17:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9550:3:19"},"nodeType":"YulFunctionCall","src":"9550:32:19"},{"name":"end","nodeType":"YulIdentifier","src":"9584:3:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9547:2:19"},"nodeType":"YulFunctionCall","src":"9547:41:19"},"nodeType":"YulIf","src":"9544:128:19"}]},"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9167:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"9175:3:19","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"9183:8:19","type":""},{"name":"length","nodeType":"YulTypedName","src":"9193:6:19","type":""}],"src":"9126:552:19"},{"body":{"nodeType":"YulBlock","src":"9811:597:19","statements":[{"body":{"nodeType":"YulBlock","src":"9858:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9860:77:19"},"nodeType":"YulFunctionCall","src":"9860:79:19"},"nodeType":"YulExpressionStatement","src":"9860:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9832:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"9841:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9828:3:19"},"nodeType":"YulFunctionCall","src":"9828:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"9853:3:19","type":"","value":"288"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9824:3:19"},"nodeType":"YulFunctionCall","src":"9824:33:19"},"nodeType":"YulIf","src":"9821:120:19"},{"nodeType":"YulBlock","src":"9951:142:19","statements":[{"nodeType":"YulVariableDeclaration","src":"9966:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"9980:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9970:6:19","type":""}]},{"nodeType":"YulAssignment","src":"9995:88:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10055:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"10066:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10051:3:19"},"nodeType":"YulFunctionCall","src":"10051:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10075:7:19"}],"functionName":{"name":"abi_decode_t_struct$_Order_$6517_calldata_ptr","nodeType":"YulIdentifier","src":"10005:45:19"},"nodeType":"YulFunctionCall","src":"10005:78:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9995:6:19"}]}]},{"nodeType":"YulBlock","src":"10103:298:19","statements":[{"nodeType":"YulVariableDeclaration","src":"10118:47:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10149:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"10160:3:19","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10145:3:19"},"nodeType":"YulFunctionCall","src":"10145:19:19"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10132:12:19"},"nodeType":"YulFunctionCall","src":"10132:33:19"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10122:6:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"10212:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"10214:77:19"},"nodeType":"YulFunctionCall","src":"10214:79:19"},"nodeType":"YulExpressionStatement","src":"10214:79:19"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10184:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"10192:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10181:2:19"},"nodeType":"YulFunctionCall","src":"10181:30:19"},"nodeType":"YulIf","src":"10178:117:19"},{"nodeType":"YulAssignment","src":"10309:82:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10363:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"10374:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10359:3:19"},"nodeType":"YulFunctionCall","src":"10359:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10383:7:19"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nodeType":"YulIdentifier","src":"10327:31:19"},"nodeType":"YulFunctionCall","src":"10327:64:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10309:6:19"},{"name":"value2","nodeType":"YulIdentifier","src":"10317:6:19"}]}]}]},"name":"abi_decode_tuple_t_struct$_Order_$6517_calldata_ptrt_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9765:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9776:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9788:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9796:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9804:6:19","type":""}],"src":"9684:724:19"},{"body":{"nodeType":"YulBlock","src":"10520:68:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10542:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"10550:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10538:3:19"},"nodeType":"YulFunctionCall","src":"10538:14:19"},{"hexValue":"526563697069656e742063616e6e6f74206265207a65726f","kind":"string","nodeType":"YulLiteral","src":"10554:26:19","type":"","value":"Recipient cannot be zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10531:6:19"},"nodeType":"YulFunctionCall","src":"10531:50:19"},"nodeType":"YulExpressionStatement","src":"10531:50:19"}]},"name":"store_literal_in_memory_fc683099c882a9b602caa77f81b8e2530e69b20f829392585b0207e8d63a65a1","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10512:6:19","type":""}],"src":"10414:174:19"},{"body":{"nodeType":"YulBlock","src":"10740:220:19","statements":[{"nodeType":"YulAssignment","src":"10750:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10816:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"10821:2:19","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10757:58:19"},"nodeType":"YulFunctionCall","src":"10757:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10750:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10922:3:19"}],"functionName":{"name":"store_literal_in_memory_fc683099c882a9b602caa77f81b8e2530e69b20f829392585b0207e8d63a65a1","nodeType":"YulIdentifier","src":"10833:88:19"},"nodeType":"YulFunctionCall","src":"10833:93:19"},"nodeType":"YulExpressionStatement","src":"10833:93:19"},{"nodeType":"YulAssignment","src":"10935:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10946:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"10951:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10942:3:19"},"nodeType":"YulFunctionCall","src":"10942:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10935:3:19"}]}]},"name":"abi_encode_t_stringliteral_fc683099c882a9b602caa77f81b8e2530e69b20f829392585b0207e8d63a65a1_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10728:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10736:3:19","type":""}],"src":"10594:366:19"},{"body":{"nodeType":"YulBlock","src":"11137:248:19","statements":[{"nodeType":"YulAssignment","src":"11147:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11159:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"11170:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11155:3:19"},"nodeType":"YulFunctionCall","src":"11155:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11147:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11194:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"11205:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11190:3:19"},"nodeType":"YulFunctionCall","src":"11190:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11213:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"11219:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11209:3:19"},"nodeType":"YulFunctionCall","src":"11209:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11183:6:19"},"nodeType":"YulFunctionCall","src":"11183:47:19"},"nodeType":"YulExpressionStatement","src":"11183:47:19"},{"nodeType":"YulAssignment","src":"11239:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11373:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_fc683099c882a9b602caa77f81b8e2530e69b20f829392585b0207e8d63a65a1_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11247:124:19"},"nodeType":"YulFunctionCall","src":"11247:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11239:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc683099c882a9b602caa77f81b8e2530e69b20f829392585b0207e8d63a65a1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11117:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11132:4:19","type":""}],"src":"10966:419:19"},{"body":{"nodeType":"YulBlock","src":"11517:206:19","statements":[{"nodeType":"YulAssignment","src":"11527:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11539:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"11550:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11535:3:19"},"nodeType":"YulFunctionCall","src":"11535:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11527:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11607:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11620:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"11631:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11616:3:19"},"nodeType":"YulFunctionCall","src":"11616:17:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11563:43:19"},"nodeType":"YulFunctionCall","src":"11563:71:19"},"nodeType":"YulExpressionStatement","src":"11563:71:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11688:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11701:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"11712:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11697:3:19"},"nodeType":"YulFunctionCall","src":"11697:18:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"11644:43:19"},"nodeType":"YulFunctionCall","src":"11644:72:19"},"nodeType":"YulExpressionStatement","src":"11644:72:19"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11481:9:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11493:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11501:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11512:4:19","type":""}],"src":"11391:332:19"},{"body":{"nodeType":"YulBlock","src":"11835:68:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11857:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"11865:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11853:3:19"},"nodeType":"YulFunctionCall","src":"11853:14:19"},{"hexValue":"4e6f74206120706172747920746f20746865206f72646572","kind":"string","nodeType":"YulLiteral","src":"11869:26:19","type":"","value":"Not a party to the order"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11846:6:19"},"nodeType":"YulFunctionCall","src":"11846:50:19"},"nodeType":"YulExpressionStatement","src":"11846:50:19"}]},"name":"store_literal_in_memory_bfd76efe5631a7b194613c25bca698c7684113797e8c6b1c167fe0d7d5387838","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11827:6:19","type":""}],"src":"11729:174:19"},{"body":{"nodeType":"YulBlock","src":"12055:220:19","statements":[{"nodeType":"YulAssignment","src":"12065:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12131:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"12136:2:19","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12072:58:19"},"nodeType":"YulFunctionCall","src":"12072:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12065:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12237:3:19"}],"functionName":{"name":"store_literal_in_memory_bfd76efe5631a7b194613c25bca698c7684113797e8c6b1c167fe0d7d5387838","nodeType":"YulIdentifier","src":"12148:88:19"},"nodeType":"YulFunctionCall","src":"12148:93:19"},"nodeType":"YulExpressionStatement","src":"12148:93:19"},{"nodeType":"YulAssignment","src":"12250:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12261:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"12266:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12257:3:19"},"nodeType":"YulFunctionCall","src":"12257:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12250:3:19"}]}]},"name":"abi_encode_t_stringliteral_bfd76efe5631a7b194613c25bca698c7684113797e8c6b1c167fe0d7d5387838_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12043:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12051:3:19","type":""}],"src":"11909:366:19"},{"body":{"nodeType":"YulBlock","src":"12452:248:19","statements":[{"nodeType":"YulAssignment","src":"12462:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12474:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"12485:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12470:3:19"},"nodeType":"YulFunctionCall","src":"12470:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12462:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12509:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"12520:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12505:3:19"},"nodeType":"YulFunctionCall","src":"12505:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12528:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"12534:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12524:3:19"},"nodeType":"YulFunctionCall","src":"12524:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12498:6:19"},"nodeType":"YulFunctionCall","src":"12498:47:19"},"nodeType":"YulExpressionStatement","src":"12498:47:19"},{"nodeType":"YulAssignment","src":"12554:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12688:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_bfd76efe5631a7b194613c25bca698c7684113797e8c6b1c167fe0d7d5387838_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12562:124:19"},"nodeType":"YulFunctionCall","src":"12562:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12554:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_bfd76efe5631a7b194613c25bca698c7684113797e8c6b1c167fe0d7d5387838__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12432:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12447:4:19","type":""}],"src":"12281:419:19"},{"body":{"nodeType":"YulBlock","src":"12812:66:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12834:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"12842:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12830:3:19"},"nodeType":"YulFunctionCall","src":"12830:14:19"},{"hexValue":"4f726465723a20416c72656164792068616e646c6564","kind":"string","nodeType":"YulLiteral","src":"12846:24:19","type":"","value":"Order: Already handled"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12823:6:19"},"nodeType":"YulFunctionCall","src":"12823:48:19"},"nodeType":"YulExpressionStatement","src":"12823:48:19"}]},"name":"store_literal_in_memory_b8d33ebd343fbf304361844b0391ff4a69626e716b23174384fc4b57bd13a78a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12804:6:19","type":""}],"src":"12706:172:19"},{"body":{"nodeType":"YulBlock","src":"13030:220:19","statements":[{"nodeType":"YulAssignment","src":"13040:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13106:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"13111:2:19","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13047:58:19"},"nodeType":"YulFunctionCall","src":"13047:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13040:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13212:3:19"}],"functionName":{"name":"store_literal_in_memory_b8d33ebd343fbf304361844b0391ff4a69626e716b23174384fc4b57bd13a78a","nodeType":"YulIdentifier","src":"13123:88:19"},"nodeType":"YulFunctionCall","src":"13123:93:19"},"nodeType":"YulExpressionStatement","src":"13123:93:19"},{"nodeType":"YulAssignment","src":"13225:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13236:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"13241:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13232:3:19"},"nodeType":"YulFunctionCall","src":"13232:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13225:3:19"}]}]},"name":"abi_encode_t_stringliteral_b8d33ebd343fbf304361844b0391ff4a69626e716b23174384fc4b57bd13a78a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13018:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13026:3:19","type":""}],"src":"12884:366:19"},{"body":{"nodeType":"YulBlock","src":"13427:248:19","statements":[{"nodeType":"YulAssignment","src":"13437:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13449:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"13460:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13445:3:19"},"nodeType":"YulFunctionCall","src":"13445:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13437:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13484:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"13495:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13480:3:19"},"nodeType":"YulFunctionCall","src":"13480:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13503:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"13509:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13499:3:19"},"nodeType":"YulFunctionCall","src":"13499:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13473:6:19"},"nodeType":"YulFunctionCall","src":"13473:47:19"},"nodeType":"YulExpressionStatement","src":"13473:47:19"},{"nodeType":"YulAssignment","src":"13529:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13663:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_b8d33ebd343fbf304361844b0391ff4a69626e716b23174384fc4b57bd13a78a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13537:124:19"},"nodeType":"YulFunctionCall","src":"13537:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13529:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_b8d33ebd343fbf304361844b0391ff4a69626e716b23174384fc4b57bd13a78a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13407:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13422:4:19","type":""}],"src":"13256:419:19"},{"body":{"nodeType":"YulBlock","src":"13709:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13726:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13729:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13719:6:19"},"nodeType":"YulFunctionCall","src":"13719:88:19"},"nodeType":"YulExpressionStatement","src":"13719:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13823:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13826:4:19","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13816:6:19"},"nodeType":"YulFunctionCall","src":"13816:15:19"},"nodeType":"YulExpressionStatement","src":"13816:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13847:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13850:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13840:6:19"},"nodeType":"YulFunctionCall","src":"13840:15:19"},"nodeType":"YulExpressionStatement","src":"13840:15:19"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"13681:180:19"},{"body":{"nodeType":"YulBlock","src":"13910:190:19","statements":[{"nodeType":"YulAssignment","src":"13920:33:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13947:5:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"13929:17:19"},"nodeType":"YulFunctionCall","src":"13929:24:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"13920:5:19"}]},{"body":{"nodeType":"YulBlock","src":"14043:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"14045:16:19"},"nodeType":"YulFunctionCall","src":"14045:18:19"},"nodeType":"YulExpressionStatement","src":"14045:18:19"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13968:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"13975:66:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"13965:2:19"},"nodeType":"YulFunctionCall","src":"13965:77:19"},"nodeType":"YulIf","src":"13962:103:19"},{"nodeType":"YulAssignment","src":"14074:20:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14085:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"14092:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14081:3:19"},"nodeType":"YulFunctionCall","src":"14081:13:19"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"14074:3:19"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13896:5:19","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"13906:3:19","type":""}],"src":"13867:233:19"},{"body":{"nodeType":"YulBlock","src":"14134:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14151:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14154:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14144:6:19"},"nodeType":"YulFunctionCall","src":"14144:88:19"},"nodeType":"YulExpressionStatement","src":"14144:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14248:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"14251:4:19","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14241:6:19"},"nodeType":"YulFunctionCall","src":"14241:15:19"},"nodeType":"YulExpressionStatement","src":"14241:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14272:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14275:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14265:6:19"},"nodeType":"YulFunctionCall","src":"14265:15:19"},"nodeType":"YulExpressionStatement","src":"14265:15:19"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14106:180:19"},{"body":{"nodeType":"YulBlock","src":"14398:75:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14420:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"14428:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14416:3:19"},"nodeType":"YulFunctionCall","src":"14416:14:19"},{"hexValue":"4665652070657263656e742063616e6e6f7420657863656564203130303030","kind":"string","nodeType":"YulLiteral","src":"14432:33:19","type":"","value":"Fee percent cannot exceed 10000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14409:6:19"},"nodeType":"YulFunctionCall","src":"14409:57:19"},"nodeType":"YulExpressionStatement","src":"14409:57:19"}]},"name":"store_literal_in_memory_92ca134704187ef3fa501c974cfbff448d63adac4439a8c96e86a1025b91450f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14390:6:19","type":""}],"src":"14292:181:19"},{"body":{"nodeType":"YulBlock","src":"14625:220:19","statements":[{"nodeType":"YulAssignment","src":"14635:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14701:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"14706:2:19","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14642:58:19"},"nodeType":"YulFunctionCall","src":"14642:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14635:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14807:3:19"}],"functionName":{"name":"store_literal_in_memory_92ca134704187ef3fa501c974cfbff448d63adac4439a8c96e86a1025b91450f","nodeType":"YulIdentifier","src":"14718:88:19"},"nodeType":"YulFunctionCall","src":"14718:93:19"},"nodeType":"YulExpressionStatement","src":"14718:93:19"},{"nodeType":"YulAssignment","src":"14820:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14831:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"14836:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14827:3:19"},"nodeType":"YulFunctionCall","src":"14827:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14820:3:19"}]}]},"name":"abi_encode_t_stringliteral_92ca134704187ef3fa501c974cfbff448d63adac4439a8c96e86a1025b91450f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14613:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14621:3:19","type":""}],"src":"14479:366:19"},{"body":{"nodeType":"YulBlock","src":"15022:248:19","statements":[{"nodeType":"YulAssignment","src":"15032:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15044:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"15055:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15040:3:19"},"nodeType":"YulFunctionCall","src":"15040:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15032:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15079:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"15090:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15075:3:19"},"nodeType":"YulFunctionCall","src":"15075:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15098:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"15104:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15094:3:19"},"nodeType":"YulFunctionCall","src":"15094:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15068:6:19"},"nodeType":"YulFunctionCall","src":"15068:47:19"},"nodeType":"YulExpressionStatement","src":"15068:47:19"},{"nodeType":"YulAssignment","src":"15124:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15258:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_92ca134704187ef3fa501c974cfbff448d63adac4439a8c96e86a1025b91450f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15132:124:19"},"nodeType":"YulFunctionCall","src":"15132:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15124:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_92ca134704187ef3fa501c974cfbff448d63adac4439a8c96e86a1025b91450f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15002:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15017:4:19","type":""}],"src":"14851:419:19"},{"body":{"nodeType":"YulBlock","src":"15402:206:19","statements":[{"nodeType":"YulAssignment","src":"15412:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15424:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"15435:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15420:3:19"},"nodeType":"YulFunctionCall","src":"15420:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15412:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15492:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15505:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"15516:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15501:3:19"},"nodeType":"YulFunctionCall","src":"15501:17:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"15448:43:19"},"nodeType":"YulFunctionCall","src":"15448:71:19"},"nodeType":"YulExpressionStatement","src":"15448:71:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15573:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15586:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"15597:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15582:3:19"},"nodeType":"YulFunctionCall","src":"15582:18:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"15529:43:19"},"nodeType":"YulFunctionCall","src":"15529:72:19"},"nodeType":"YulExpressionStatement","src":"15529:72:19"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15366:9:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15378:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15386:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15397:4:19","type":""}],"src":"15276:332:19"},{"body":{"nodeType":"YulBlock","src":"15720:58:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15742:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"15750:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15738:3:19"},"nodeType":"YulFunctionCall","src":"15738:14:19"},{"hexValue":"4f726465723a2045787069726564","kind":"string","nodeType":"YulLiteral","src":"15754:16:19","type":"","value":"Order: Expired"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15731:6:19"},"nodeType":"YulFunctionCall","src":"15731:40:19"},"nodeType":"YulExpressionStatement","src":"15731:40:19"}]},"name":"store_literal_in_memory_0cb4d64781e02901606bf70516bdce82d19e6058128666a71941789d19d9cef6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15712:6:19","type":""}],"src":"15614:164:19"},{"body":{"nodeType":"YulBlock","src":"15930:220:19","statements":[{"nodeType":"YulAssignment","src":"15940:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16006:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"16011:2:19","type":"","value":"14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15947:58:19"},"nodeType":"YulFunctionCall","src":"15947:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15940:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16112:3:19"}],"functionName":{"name":"store_literal_in_memory_0cb4d64781e02901606bf70516bdce82d19e6058128666a71941789d19d9cef6","nodeType":"YulIdentifier","src":"16023:88:19"},"nodeType":"YulFunctionCall","src":"16023:93:19"},"nodeType":"YulExpressionStatement","src":"16023:93:19"},{"nodeType":"YulAssignment","src":"16125:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16136:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"16141:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16132:3:19"},"nodeType":"YulFunctionCall","src":"16132:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16125:3:19"}]}]},"name":"abi_encode_t_stringliteral_0cb4d64781e02901606bf70516bdce82d19e6058128666a71941789d19d9cef6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15918:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15926:3:19","type":""}],"src":"15784:366:19"},{"body":{"nodeType":"YulBlock","src":"16327:248:19","statements":[{"nodeType":"YulAssignment","src":"16337:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16349:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"16360:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16345:3:19"},"nodeType":"YulFunctionCall","src":"16345:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16337:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16384:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"16395:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16380:3:19"},"nodeType":"YulFunctionCall","src":"16380:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16403:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"16409:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16399:3:19"},"nodeType":"YulFunctionCall","src":"16399:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16373:6:19"},"nodeType":"YulFunctionCall","src":"16373:47:19"},"nodeType":"YulExpressionStatement","src":"16373:47:19"},{"nodeType":"YulAssignment","src":"16429:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16563:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_0cb4d64781e02901606bf70516bdce82d19e6058128666a71941789d19d9cef6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16437:124:19"},"nodeType":"YulFunctionCall","src":"16437:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16429:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_0cb4d64781e02901606bf70516bdce82d19e6058128666a71941789d19d9cef6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16307:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16322:4:19","type":""}],"src":"16156:419:19"},{"body":{"nodeType":"YulBlock","src":"16687:68:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16709:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"16717:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16705:3:19"},"nodeType":"YulFunctionCall","src":"16705:14:19"},{"hexValue":"4f726465723a20496e76616c6964207369676e6174757265","kind":"string","nodeType":"YulLiteral","src":"16721:26:19","type":"","value":"Order: Invalid signature"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16698:6:19"},"nodeType":"YulFunctionCall","src":"16698:50:19"},"nodeType":"YulExpressionStatement","src":"16698:50:19"}]},"name":"store_literal_in_memory_975613551a7372c615f5b299191a9b4b4e24134559b144db5103f92248cec0f3","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16679:6:19","type":""}],"src":"16581:174:19"},{"body":{"nodeType":"YulBlock","src":"16907:220:19","statements":[{"nodeType":"YulAssignment","src":"16917:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16983:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"16988:2:19","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16924:58:19"},"nodeType":"YulFunctionCall","src":"16924:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16917:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17089:3:19"}],"functionName":{"name":"store_literal_in_memory_975613551a7372c615f5b299191a9b4b4e24134559b144db5103f92248cec0f3","nodeType":"YulIdentifier","src":"17000:88:19"},"nodeType":"YulFunctionCall","src":"17000:93:19"},"nodeType":"YulExpressionStatement","src":"17000:93:19"},{"nodeType":"YulAssignment","src":"17102:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17113:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"17118:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17109:3:19"},"nodeType":"YulFunctionCall","src":"17109:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17102:3:19"}]}]},"name":"abi_encode_t_stringliteral_975613551a7372c615f5b299191a9b4b4e24134559b144db5103f92248cec0f3_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16895:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16903:3:19","type":""}],"src":"16761:366:19"},{"body":{"nodeType":"YulBlock","src":"17304:248:19","statements":[{"nodeType":"YulAssignment","src":"17314:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17326:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"17337:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17322:3:19"},"nodeType":"YulFunctionCall","src":"17322:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17314:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17361:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"17372:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17357:3:19"},"nodeType":"YulFunctionCall","src":"17357:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17380:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"17386:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17376:3:19"},"nodeType":"YulFunctionCall","src":"17376:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17350:6:19"},"nodeType":"YulFunctionCall","src":"17350:47:19"},"nodeType":"YulExpressionStatement","src":"17350:47:19"},{"nodeType":"YulAssignment","src":"17406:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17540:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_975613551a7372c615f5b299191a9b4b4e24134559b144db5103f92248cec0f3_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17414:124:19"},"nodeType":"YulFunctionCall","src":"17414:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17406:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_975613551a7372c615f5b299191a9b4b4e24134559b144db5103f92248cec0f3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17284:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17299:4:19","type":""}],"src":"17133:419:19"},{"body":{"nodeType":"YulBlock","src":"17664:62:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17686:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"17694:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17682:3:19"},"nodeType":"YulFunctionCall","src":"17682:14:19"},{"hexValue":"4f726465723a204e6f7420666f7220796f75","kind":"string","nodeType":"YulLiteral","src":"17698:20:19","type":"","value":"Order: Not for you"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17675:6:19"},"nodeType":"YulFunctionCall","src":"17675:44:19"},"nodeType":"YulExpressionStatement","src":"17675:44:19"}]},"name":"store_literal_in_memory_4e92386cd5dd7e50de0bf20dfe9f8dbbf22c6328d9a617b8179cb3bd33bc4b3b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17656:6:19","type":""}],"src":"17558:168:19"},{"body":{"nodeType":"YulBlock","src":"17878:220:19","statements":[{"nodeType":"YulAssignment","src":"17888:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17954:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"17959:2:19","type":"","value":"18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17895:58:19"},"nodeType":"YulFunctionCall","src":"17895:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17888:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18060:3:19"}],"functionName":{"name":"store_literal_in_memory_4e92386cd5dd7e50de0bf20dfe9f8dbbf22c6328d9a617b8179cb3bd33bc4b3b","nodeType":"YulIdentifier","src":"17971:88:19"},"nodeType":"YulFunctionCall","src":"17971:93:19"},"nodeType":"YulExpressionStatement","src":"17971:93:19"},{"nodeType":"YulAssignment","src":"18073:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18084:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"18089:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18080:3:19"},"nodeType":"YulFunctionCall","src":"18080:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18073:3:19"}]}]},"name":"abi_encode_t_stringliteral_4e92386cd5dd7e50de0bf20dfe9f8dbbf22c6328d9a617b8179cb3bd33bc4b3b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17866:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17874:3:19","type":""}],"src":"17732:366:19"},{"body":{"nodeType":"YulBlock","src":"18275:248:19","statements":[{"nodeType":"YulAssignment","src":"18285:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18297:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"18308:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18293:3:19"},"nodeType":"YulFunctionCall","src":"18293:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18285:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18332:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"18343:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18328:3:19"},"nodeType":"YulFunctionCall","src":"18328:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18351:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"18357:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18347:3:19"},"nodeType":"YulFunctionCall","src":"18347:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18321:6:19"},"nodeType":"YulFunctionCall","src":"18321:47:19"},"nodeType":"YulExpressionStatement","src":"18321:47:19"},{"nodeType":"YulAssignment","src":"18377:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18511:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_4e92386cd5dd7e50de0bf20dfe9f8dbbf22c6328d9a617b8179cb3bd33bc4b3b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18385:124:19"},"nodeType":"YulFunctionCall","src":"18385:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18377:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_4e92386cd5dd7e50de0bf20dfe9f8dbbf22c6328d9a617b8179cb3bd33bc4b3b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18255:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18270:4:19","type":""}],"src":"18104:419:19"},{"body":{"nodeType":"YulBlock","src":"18683:288:19","statements":[{"nodeType":"YulAssignment","src":"18693:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18705:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"18716:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18701:3:19"},"nodeType":"YulFunctionCall","src":"18701:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18693:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18773:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18786:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"18797:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18782:3:19"},"nodeType":"YulFunctionCall","src":"18782:17:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"18729:43:19"},"nodeType":"YulFunctionCall","src":"18729:71:19"},"nodeType":"YulExpressionStatement","src":"18729:71:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"18854:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18867:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"18878:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18863:3:19"},"nodeType":"YulFunctionCall","src":"18863:18:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"18810:43:19"},"nodeType":"YulFunctionCall","src":"18810:72:19"},"nodeType":"YulExpressionStatement","src":"18810:72:19"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"18936:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18949:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"18960:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18945:3:19"},"nodeType":"YulFunctionCall","src":"18945:18:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"18892:43:19"},"nodeType":"YulFunctionCall","src":"18892:72:19"},"nodeType":"YulExpressionStatement","src":"18892:72:19"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18639:9:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"18651:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18659:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18667:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18678:4:19","type":""}],"src":"18529:442:19"},{"body":{"nodeType":"YulBlock","src":"19083:58:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19105:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"19113:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19101:3:19"},"nodeType":"YulFunctionCall","src":"19101:14:19"},{"hexValue":"4f666665723a2045787069726564","kind":"string","nodeType":"YulLiteral","src":"19117:16:19","type":"","value":"Offer: Expired"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19094:6:19"},"nodeType":"YulFunctionCall","src":"19094:40:19"},"nodeType":"YulExpressionStatement","src":"19094:40:19"}]},"name":"store_literal_in_memory_25e66163f035f2588372d1dbade133571ced130dbc6a5e4e690e4afa56421a18","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19075:6:19","type":""}],"src":"18977:164:19"},{"body":{"nodeType":"YulBlock","src":"19293:220:19","statements":[{"nodeType":"YulAssignment","src":"19303:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19369:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"19374:2:19","type":"","value":"14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19310:58:19"},"nodeType":"YulFunctionCall","src":"19310:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19303:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19475:3:19"}],"functionName":{"name":"store_literal_in_memory_25e66163f035f2588372d1dbade133571ced130dbc6a5e4e690e4afa56421a18","nodeType":"YulIdentifier","src":"19386:88:19"},"nodeType":"YulFunctionCall","src":"19386:93:19"},"nodeType":"YulExpressionStatement","src":"19386:93:19"},{"nodeType":"YulAssignment","src":"19488:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19499:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"19504:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19495:3:19"},"nodeType":"YulFunctionCall","src":"19495:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19488:3:19"}]}]},"name":"abi_encode_t_stringliteral_25e66163f035f2588372d1dbade133571ced130dbc6a5e4e690e4afa56421a18_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19281:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19289:3:19","type":""}],"src":"19147:366:19"},{"body":{"nodeType":"YulBlock","src":"19690:248:19","statements":[{"nodeType":"YulAssignment","src":"19700:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19712:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"19723:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19708:3:19"},"nodeType":"YulFunctionCall","src":"19708:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19700:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19747:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"19758:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19743:3:19"},"nodeType":"YulFunctionCall","src":"19743:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19766:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"19772:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19762:3:19"},"nodeType":"YulFunctionCall","src":"19762:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19736:6:19"},"nodeType":"YulFunctionCall","src":"19736:47:19"},"nodeType":"YulExpressionStatement","src":"19736:47:19"},{"nodeType":"YulAssignment","src":"19792:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19926:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_25e66163f035f2588372d1dbade133571ced130dbc6a5e4e690e4afa56421a18_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19800:124:19"},"nodeType":"YulFunctionCall","src":"19800:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19792:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_25e66163f035f2588372d1dbade133571ced130dbc6a5e4e690e4afa56421a18__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19670:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19685:4:19","type":""}],"src":"19519:419:19"},{"body":{"nodeType":"YulBlock","src":"20050:66:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20072:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"20080:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20068:3:19"},"nodeType":"YulFunctionCall","src":"20068:14:19"},{"hexValue":"4f666665723a20416c72656164792068616e646c6564","kind":"string","nodeType":"YulLiteral","src":"20084:24:19","type":"","value":"Offer: Already handled"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20061:6:19"},"nodeType":"YulFunctionCall","src":"20061:48:19"},"nodeType":"YulExpressionStatement","src":"20061:48:19"}]},"name":"store_literal_in_memory_80af65d824aa286438ae3de3c5167c9b4c82eb9eb37a9332237e2bb4d6c603d8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20042:6:19","type":""}],"src":"19944:172:19"},{"body":{"nodeType":"YulBlock","src":"20268:220:19","statements":[{"nodeType":"YulAssignment","src":"20278:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20344:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"20349:2:19","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20285:58:19"},"nodeType":"YulFunctionCall","src":"20285:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20278:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20450:3:19"}],"functionName":{"name":"store_literal_in_memory_80af65d824aa286438ae3de3c5167c9b4c82eb9eb37a9332237e2bb4d6c603d8","nodeType":"YulIdentifier","src":"20361:88:19"},"nodeType":"YulFunctionCall","src":"20361:93:19"},"nodeType":"YulExpressionStatement","src":"20361:93:19"},{"nodeType":"YulAssignment","src":"20463:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20474:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"20479:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20470:3:19"},"nodeType":"YulFunctionCall","src":"20470:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20463:3:19"}]}]},"name":"abi_encode_t_stringliteral_80af65d824aa286438ae3de3c5167c9b4c82eb9eb37a9332237e2bb4d6c603d8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20256:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20264:3:19","type":""}],"src":"20122:366:19"},{"body":{"nodeType":"YulBlock","src":"20665:248:19","statements":[{"nodeType":"YulAssignment","src":"20675:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20687:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"20698:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20683:3:19"},"nodeType":"YulFunctionCall","src":"20683:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20675:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20722:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"20733:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20718:3:19"},"nodeType":"YulFunctionCall","src":"20718:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20741:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"20747:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20737:3:19"},"nodeType":"YulFunctionCall","src":"20737:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20711:6:19"},"nodeType":"YulFunctionCall","src":"20711:47:19"},"nodeType":"YulExpressionStatement","src":"20711:47:19"},{"nodeType":"YulAssignment","src":"20767:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20901:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_80af65d824aa286438ae3de3c5167c9b4c82eb9eb37a9332237e2bb4d6c603d8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20775:124:19"},"nodeType":"YulFunctionCall","src":"20775:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20767:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_80af65d824aa286438ae3de3c5167c9b4c82eb9eb37a9332237e2bb4d6c603d8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20645:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20660:4:19","type":""}],"src":"20494:419:19"},{"body":{"nodeType":"YulBlock","src":"21025:62:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21047:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"21055:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21043:3:19"},"nodeType":"YulFunctionCall","src":"21043:14:19"},{"hexValue":"4f666665723a204e6f7420666f7220796f75","kind":"string","nodeType":"YulLiteral","src":"21059:20:19","type":"","value":"Offer: Not for you"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21036:6:19"},"nodeType":"YulFunctionCall","src":"21036:44:19"},"nodeType":"YulExpressionStatement","src":"21036:44:19"}]},"name":"store_literal_in_memory_da5c3340b8d13a4de28b6034e9771db52d96e1250696e165889248771d6df19d","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21017:6:19","type":""}],"src":"20919:168:19"},{"body":{"nodeType":"YulBlock","src":"21239:220:19","statements":[{"nodeType":"YulAssignment","src":"21249:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21315:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"21320:2:19","type":"","value":"18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21256:58:19"},"nodeType":"YulFunctionCall","src":"21256:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21249:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21421:3:19"}],"functionName":{"name":"store_literal_in_memory_da5c3340b8d13a4de28b6034e9771db52d96e1250696e165889248771d6df19d","nodeType":"YulIdentifier","src":"21332:88:19"},"nodeType":"YulFunctionCall","src":"21332:93:19"},"nodeType":"YulExpressionStatement","src":"21332:93:19"},{"nodeType":"YulAssignment","src":"21434:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21445:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"21450:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21441:3:19"},"nodeType":"YulFunctionCall","src":"21441:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21434:3:19"}]}]},"name":"abi_encode_t_stringliteral_da5c3340b8d13a4de28b6034e9771db52d96e1250696e165889248771d6df19d_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21227:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21235:3:19","type":""}],"src":"21093:366:19"},{"body":{"nodeType":"YulBlock","src":"21636:248:19","statements":[{"nodeType":"YulAssignment","src":"21646:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21658:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"21669:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21654:3:19"},"nodeType":"YulFunctionCall","src":"21654:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21646:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21693:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"21704:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21689:3:19"},"nodeType":"YulFunctionCall","src":"21689:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21712:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"21718:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21708:3:19"},"nodeType":"YulFunctionCall","src":"21708:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21682:6:19"},"nodeType":"YulFunctionCall","src":"21682:47:19"},"nodeType":"YulExpressionStatement","src":"21682:47:19"},{"nodeType":"YulAssignment","src":"21738:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21872:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_da5c3340b8d13a4de28b6034e9771db52d96e1250696e165889248771d6df19d_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21746:124:19"},"nodeType":"YulFunctionCall","src":"21746:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21738:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_da5c3340b8d13a4de28b6034e9771db52d96e1250696e165889248771d6df19d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21616:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21631:4:19","type":""}],"src":"21465:419:19"},{"body":{"nodeType":"YulBlock","src":"21996:74:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22018:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"22026:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22014:3:19"},"nodeType":"YulFunctionCall","src":"22014:14:19"},{"hexValue":"4f666665723a20496e76616c6964206275796572207369676e6174757265","kind":"string","nodeType":"YulLiteral","src":"22030:32:19","type":"","value":"Offer: Invalid buyer signature"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22007:6:19"},"nodeType":"YulFunctionCall","src":"22007:56:19"},"nodeType":"YulExpressionStatement","src":"22007:56:19"}]},"name":"store_literal_in_memory_adba10029e9d9a97eee76589a6bea4f4e3829223133272d2c777974e12724bb8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21988:6:19","type":""}],"src":"21890:180:19"},{"body":{"nodeType":"YulBlock","src":"22222:220:19","statements":[{"nodeType":"YulAssignment","src":"22232:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22298:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"22303:2:19","type":"","value":"30"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22239:58:19"},"nodeType":"YulFunctionCall","src":"22239:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22232:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22404:3:19"}],"functionName":{"name":"store_literal_in_memory_adba10029e9d9a97eee76589a6bea4f4e3829223133272d2c777974e12724bb8","nodeType":"YulIdentifier","src":"22315:88:19"},"nodeType":"YulFunctionCall","src":"22315:93:19"},"nodeType":"YulExpressionStatement","src":"22315:93:19"},{"nodeType":"YulAssignment","src":"22417:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22428:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"22433:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22424:3:19"},"nodeType":"YulFunctionCall","src":"22424:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22417:3:19"}]}]},"name":"abi_encode_t_stringliteral_adba10029e9d9a97eee76589a6bea4f4e3829223133272d2c777974e12724bb8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22210:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22218:3:19","type":""}],"src":"22076:366:19"},{"body":{"nodeType":"YulBlock","src":"22619:248:19","statements":[{"nodeType":"YulAssignment","src":"22629:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22641:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"22652:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22637:3:19"},"nodeType":"YulFunctionCall","src":"22637:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22629:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22676:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"22687:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22672:3:19"},"nodeType":"YulFunctionCall","src":"22672:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22695:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"22701:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22691:3:19"},"nodeType":"YulFunctionCall","src":"22691:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22665:6:19"},"nodeType":"YulFunctionCall","src":"22665:47:19"},"nodeType":"YulExpressionStatement","src":"22665:47:19"},{"nodeType":"YulAssignment","src":"22721:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22855:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_adba10029e9d9a97eee76589a6bea4f4e3829223133272d2c777974e12724bb8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22729:124:19"},"nodeType":"YulFunctionCall","src":"22729:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22721:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_adba10029e9d9a97eee76589a6bea4f4e3829223133272d2c777974e12724bb8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22599:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22614:4:19","type":""}],"src":"22448:419:19"},{"body":{"nodeType":"YulBlock","src":"23195:786:19","statements":[{"nodeType":"YulAssignment","src":"23205:27:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23217:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"23228:3:19","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23213:3:19"},"nodeType":"YulFunctionCall","src":"23213:19:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23205:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23286:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23299:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"23310:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23295:3:19"},"nodeType":"YulFunctionCall","src":"23295:17:19"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"23242:43:19"},"nodeType":"YulFunctionCall","src":"23242:71:19"},"nodeType":"YulExpressionStatement","src":"23242:71:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"23367:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23380:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"23391:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23376:3:19"},"nodeType":"YulFunctionCall","src":"23376:18:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"23323:43:19"},"nodeType":"YulFunctionCall","src":"23323:72:19"},"nodeType":"YulExpressionStatement","src":"23323:72:19"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"23449:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23462:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"23473:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23458:3:19"},"nodeType":"YulFunctionCall","src":"23458:18:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"23405:43:19"},"nodeType":"YulFunctionCall","src":"23405:72:19"},"nodeType":"YulExpressionStatement","src":"23405:72:19"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"23531:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23544:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"23555:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23540:3:19"},"nodeType":"YulFunctionCall","src":"23540:18:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"23487:43:19"},"nodeType":"YulFunctionCall","src":"23487:72:19"},"nodeType":"YulExpressionStatement","src":"23487:72:19"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"23613:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23626:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"23637:3:19","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23622:3:19"},"nodeType":"YulFunctionCall","src":"23622:19:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"23569:43:19"},"nodeType":"YulFunctionCall","src":"23569:73:19"},"nodeType":"YulExpressionStatement","src":"23569:73:19"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"23696:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23709:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"23720:3:19","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23705:3:19"},"nodeType":"YulFunctionCall","src":"23705:19:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"23652:43:19"},"nodeType":"YulFunctionCall","src":"23652:73:19"},"nodeType":"YulExpressionStatement","src":"23652:73:19"},{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"23779:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23792:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"23803:3:19","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23788:3:19"},"nodeType":"YulFunctionCall","src":"23788:19:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"23735:43:19"},"nodeType":"YulFunctionCall","src":"23735:73:19"},"nodeType":"YulExpressionStatement","src":"23735:73:19"},{"expression":{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"23862:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23875:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"23886:3:19","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23871:3:19"},"nodeType":"YulFunctionCall","src":"23871:19:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"23818:43:19"},"nodeType":"YulFunctionCall","src":"23818:73:19"},"nodeType":"YulExpressionStatement","src":"23818:73:19"},{"expression":{"arguments":[{"name":"value8","nodeType":"YulIdentifier","src":"23945:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23958:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"23969:3:19","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23954:3:19"},"nodeType":"YulFunctionCall","src":"23954:19:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"23901:43:19"},"nodeType":"YulFunctionCall","src":"23901:73:19"},"nodeType":"YulExpressionStatement","src":"23901:73:19"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_address_t_uint256_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_address_t_uint256_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23103:9:19","type":""},{"name":"value8","nodeType":"YulTypedName","src":"23115:6:19","type":""},{"name":"value7","nodeType":"YulTypedName","src":"23123:6:19","type":""},{"name":"value6","nodeType":"YulTypedName","src":"23131:6:19","type":""},{"name":"value5","nodeType":"YulTypedName","src":"23139:6:19","type":""},{"name":"value4","nodeType":"YulTypedName","src":"23147:6:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"23155:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"23163:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23171:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23179:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23190:4:19","type":""}],"src":"22873:1108:19"},{"body":{"nodeType":"YulBlock","src":"24050:80:19","statements":[{"nodeType":"YulAssignment","src":"24060:22:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"24075:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"24069:5:19"},"nodeType":"YulFunctionCall","src":"24069:13:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"24060:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24118:5:19"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"24091:26:19"},"nodeType":"YulFunctionCall","src":"24091:33:19"},"nodeType":"YulExpressionStatement","src":"24091:33:19"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"24028:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"24036:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"24044:5:19","type":""}],"src":"23987:143:19"},{"body":{"nodeType":"YulBlock","src":"24213:274:19","statements":[{"body":{"nodeType":"YulBlock","src":"24259:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"24261:77:19"},"nodeType":"YulFunctionCall","src":"24261:79:19"},"nodeType":"YulExpressionStatement","src":"24261:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"24234:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"24243:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24230:3:19"},"nodeType":"YulFunctionCall","src":"24230:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"24255:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"24226:3:19"},"nodeType":"YulFunctionCall","src":"24226:32:19"},"nodeType":"YulIf","src":"24223:119:19"},{"nodeType":"YulBlock","src":"24352:128:19","statements":[{"nodeType":"YulVariableDeclaration","src":"24367:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"24381:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"24371:6:19","type":""}]},{"nodeType":"YulAssignment","src":"24396:74:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24442:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"24453:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24438:3:19"},"nodeType":"YulFunctionCall","src":"24438:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"24462:7:19"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"24406:31:19"},"nodeType":"YulFunctionCall","src":"24406:64:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"24396:6:19"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24183:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"24194:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"24206:6:19","type":""}],"src":"24136:351:19"},{"body":{"nodeType":"YulBlock","src":"24599:69:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24621:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"24629:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24617:3:19"},"nodeType":"YulFunctionCall","src":"24617:14:19"},{"hexValue":"53656c6c6572206e6f206c6f6e676572206f776e73204e4654","kind":"string","nodeType":"YulLiteral","src":"24633:27:19","type":"","value":"Seller no longer owns NFT"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24610:6:19"},"nodeType":"YulFunctionCall","src":"24610:51:19"},"nodeType":"YulExpressionStatement","src":"24610:51:19"}]},"name":"store_literal_in_memory_ade364304ee64f798a996860d608bb28f2310a00659ec71a8a8a51a6dcbdaa71","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24591:6:19","type":""}],"src":"24493:175:19"},{"body":{"nodeType":"YulBlock","src":"24820:220:19","statements":[{"nodeType":"YulAssignment","src":"24830:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24896:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"24901:2:19","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24837:58:19"},"nodeType":"YulFunctionCall","src":"24837:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24830:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25002:3:19"}],"functionName":{"name":"store_literal_in_memory_ade364304ee64f798a996860d608bb28f2310a00659ec71a8a8a51a6dcbdaa71","nodeType":"YulIdentifier","src":"24913:88:19"},"nodeType":"YulFunctionCall","src":"24913:93:19"},"nodeType":"YulExpressionStatement","src":"24913:93:19"},{"nodeType":"YulAssignment","src":"25015:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25026:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"25031:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25022:3:19"},"nodeType":"YulFunctionCall","src":"25022:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25015:3:19"}]}]},"name":"abi_encode_t_stringliteral_ade364304ee64f798a996860d608bb28f2310a00659ec71a8a8a51a6dcbdaa71_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24808:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24816:3:19","type":""}],"src":"24674:366:19"},{"body":{"nodeType":"YulBlock","src":"25217:248:19","statements":[{"nodeType":"YulAssignment","src":"25227:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25239:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"25250:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25235:3:19"},"nodeType":"YulFunctionCall","src":"25235:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25227:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25274:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"25285:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25270:3:19"},"nodeType":"YulFunctionCall","src":"25270:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25293:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"25299:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25289:3:19"},"nodeType":"YulFunctionCall","src":"25289:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25263:6:19"},"nodeType":"YulFunctionCall","src":"25263:47:19"},"nodeType":"YulExpressionStatement","src":"25263:47:19"},{"nodeType":"YulAssignment","src":"25319:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25453:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_ade364304ee64f798a996860d608bb28f2310a00659ec71a8a8a51a6dcbdaa71_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25327:124:19"},"nodeType":"YulFunctionCall","src":"25327:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25319:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_ade364304ee64f798a996860d608bb28f2310a00659ec71a8a8a51a6dcbdaa71__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25197:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25212:4:19","type":""}],"src":"25046:419:19"},{"body":{"nodeType":"YulBlock","src":"25519:362:19","statements":[{"nodeType":"YulAssignment","src":"25529:25:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"25552:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"25534:17:19"},"nodeType":"YulFunctionCall","src":"25534:20:19"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"25529:1:19"}]},{"nodeType":"YulAssignment","src":"25563:25:19","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"25586:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"25568:17:19"},"nodeType":"YulFunctionCall","src":"25568:20:19"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"25563:1:19"}]},{"nodeType":"YulVariableDeclaration","src":"25597:28:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"25620:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"25623:1:19"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"25616:3:19"},"nodeType":"YulFunctionCall","src":"25616:9:19"},"variables":[{"name":"product_raw","nodeType":"YulTypedName","src":"25601:11:19","type":""}]},{"nodeType":"YulAssignment","src":"25634:41:19","value":{"arguments":[{"name":"product_raw","nodeType":"YulIdentifier","src":"25663:11:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"25645:17:19"},"nodeType":"YulFunctionCall","src":"25645:30:19"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"25634:7:19"}]},{"body":{"nodeType":"YulBlock","src":"25852:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"25854:16:19"},"nodeType":"YulFunctionCall","src":"25854:18:19"},"nodeType":"YulExpressionStatement","src":"25854:18:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"25785:1:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"25778:6:19"},"nodeType":"YulFunctionCall","src":"25778:9:19"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"25808:1:19"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"25815:7:19"},{"name":"x","nodeType":"YulIdentifier","src":"25824:1:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"25811:3:19"},"nodeType":"YulFunctionCall","src":"25811:15:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"25805:2:19"},"nodeType":"YulFunctionCall","src":"25805:22:19"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"25758:2:19"},"nodeType":"YulFunctionCall","src":"25758:83:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"25738:6:19"},"nodeType":"YulFunctionCall","src":"25738:113:19"},"nodeType":"YulIf","src":"25735:139:19"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"25502:1:19","type":""},{"name":"y","nodeType":"YulTypedName","src":"25505:1:19","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"25511:7:19","type":""}],"src":"25471:410:19"},{"body":{"nodeType":"YulBlock","src":"25915:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25932:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25935:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25925:6:19"},"nodeType":"YulFunctionCall","src":"25925:88:19"},"nodeType":"YulExpressionStatement","src":"25925:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26029:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"26032:4:19","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26022:6:19"},"nodeType":"YulFunctionCall","src":"26022:15:19"},"nodeType":"YulExpressionStatement","src":"26022:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26053:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26056:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"26046:6:19"},"nodeType":"YulFunctionCall","src":"26046:15:19"},"nodeType":"YulExpressionStatement","src":"26046:15:19"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"25887:180:19"},{"body":{"nodeType":"YulBlock","src":"26115:143:19","statements":[{"nodeType":"YulAssignment","src":"26125:25:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"26148:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"26130:17:19"},"nodeType":"YulFunctionCall","src":"26130:20:19"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"26125:1:19"}]},{"nodeType":"YulAssignment","src":"26159:25:19","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"26182:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"26164:17:19"},"nodeType":"YulFunctionCall","src":"26164:20:19"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"26159:1:19"}]},{"body":{"nodeType":"YulBlock","src":"26206:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"26208:16:19"},"nodeType":"YulFunctionCall","src":"26208:18:19"},"nodeType":"YulExpressionStatement","src":"26208:18:19"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"26203:1:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"26196:6:19"},"nodeType":"YulFunctionCall","src":"26196:9:19"},"nodeType":"YulIf","src":"26193:35:19"},{"nodeType":"YulAssignment","src":"26238:14:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"26247:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"26250:1:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"26243:3:19"},"nodeType":"YulFunctionCall","src":"26243:9:19"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"26238:1:19"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"26104:1:19","type":""},{"name":"y","nodeType":"YulTypedName","src":"26107:1:19","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"26113:1:19","type":""}],"src":"26073:185:19"},{"body":{"nodeType":"YulBlock","src":"26308:147:19","statements":[{"nodeType":"YulAssignment","src":"26318:25:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"26341:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"26323:17:19"},"nodeType":"YulFunctionCall","src":"26323:20:19"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"26318:1:19"}]},{"nodeType":"YulAssignment","src":"26352:25:19","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"26375:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"26357:17:19"},"nodeType":"YulFunctionCall","src":"26357:20:19"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"26352:1:19"}]},{"nodeType":"YulAssignment","src":"26386:16:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"26397:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"26400:1:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26393:3:19"},"nodeType":"YulFunctionCall","src":"26393:9:19"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"26386:3:19"}]},{"body":{"nodeType":"YulBlock","src":"26426:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"26428:16:19"},"nodeType":"YulFunctionCall","src":"26428:18:19"},"nodeType":"YulExpressionStatement","src":"26428:18:19"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"26418:1:19"},{"name":"sum","nodeType":"YulIdentifier","src":"26421:3:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"26415:2:19"},"nodeType":"YulFunctionCall","src":"26415:10:19"},"nodeType":"YulIf","src":"26412:36:19"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"26295:1:19","type":""},{"name":"y","nodeType":"YulTypedName","src":"26298:1:19","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"26304:3:19","type":""}],"src":"26264:191:19"},{"body":{"nodeType":"YulBlock","src":"26567:61:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26589:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"26597:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26585:3:19"},"nodeType":"YulFunctionCall","src":"26585:14:19"},{"hexValue":"4665657320657863656564207072696365","kind":"string","nodeType":"YulLiteral","src":"26601:19:19","type":"","value":"Fees exceed price"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26578:6:19"},"nodeType":"YulFunctionCall","src":"26578:43:19"},"nodeType":"YulExpressionStatement","src":"26578:43:19"}]},"name":"store_literal_in_memory_57b44d607556e0a8d9b0d76349d42e851eb016dfd63ce61ce355fc1ddb14a839","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"26559:6:19","type":""}],"src":"26461:167:19"},{"body":{"nodeType":"YulBlock","src":"26780:220:19","statements":[{"nodeType":"YulAssignment","src":"26790:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26856:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"26861:2:19","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26797:58:19"},"nodeType":"YulFunctionCall","src":"26797:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26790:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26962:3:19"}],"functionName":{"name":"store_literal_in_memory_57b44d607556e0a8d9b0d76349d42e851eb016dfd63ce61ce355fc1ddb14a839","nodeType":"YulIdentifier","src":"26873:88:19"},"nodeType":"YulFunctionCall","src":"26873:93:19"},"nodeType":"YulExpressionStatement","src":"26873:93:19"},{"nodeType":"YulAssignment","src":"26975:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26986:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"26991:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26982:3:19"},"nodeType":"YulFunctionCall","src":"26982:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26975:3:19"}]}]},"name":"abi_encode_t_stringliteral_57b44d607556e0a8d9b0d76349d42e851eb016dfd63ce61ce355fc1ddb14a839_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26768:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26776:3:19","type":""}],"src":"26634:366:19"},{"body":{"nodeType":"YulBlock","src":"27177:248:19","statements":[{"nodeType":"YulAssignment","src":"27187:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27199:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"27210:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27195:3:19"},"nodeType":"YulFunctionCall","src":"27195:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27187:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27234:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"27245:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27230:3:19"},"nodeType":"YulFunctionCall","src":"27230:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27253:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"27259:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27249:3:19"},"nodeType":"YulFunctionCall","src":"27249:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27223:6:19"},"nodeType":"YulFunctionCall","src":"27223:47:19"},"nodeType":"YulExpressionStatement","src":"27223:47:19"},{"nodeType":"YulAssignment","src":"27279:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27413:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_57b44d607556e0a8d9b0d76349d42e851eb016dfd63ce61ce355fc1ddb14a839_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27287:124:19"},"nodeType":"YulFunctionCall","src":"27287:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27279:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_57b44d607556e0a8d9b0d76349d42e851eb016dfd63ce61ce355fc1ddb14a839__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27157:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27172:4:19","type":""}],"src":"27006:419:19"},{"body":{"nodeType":"YulBlock","src":"27476:149:19","statements":[{"nodeType":"YulAssignment","src":"27486:25:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"27509:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"27491:17:19"},"nodeType":"YulFunctionCall","src":"27491:20:19"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"27486:1:19"}]},{"nodeType":"YulAssignment","src":"27520:25:19","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"27543:1:19"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"27525:17:19"},"nodeType":"YulFunctionCall","src":"27525:20:19"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"27520:1:19"}]},{"nodeType":"YulAssignment","src":"27554:17:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"27566:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"27569:1:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27562:3:19"},"nodeType":"YulFunctionCall","src":"27562:9:19"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"27554:4:19"}]},{"body":{"nodeType":"YulBlock","src":"27596:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"27598:16:19"},"nodeType":"YulFunctionCall","src":"27598:18:19"},"nodeType":"YulExpressionStatement","src":"27598:18:19"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"27587:4:19"},{"name":"x","nodeType":"YulIdentifier","src":"27593:1:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"27584:2:19"},"nodeType":"YulFunctionCall","src":"27584:11:19"},"nodeType":"YulIf","src":"27581:37:19"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"27462:1:19","type":""},{"name":"y","nodeType":"YulTypedName","src":"27465:1:19","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"27471:4:19","type":""}],"src":"27431:194:19"},{"body":{"nodeType":"YulBlock","src":"27785:288:19","statements":[{"nodeType":"YulAssignment","src":"27795:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27807:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"27818:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27803:3:19"},"nodeType":"YulFunctionCall","src":"27803:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27795:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"27875:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27888:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"27899:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27884:3:19"},"nodeType":"YulFunctionCall","src":"27884:17:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"27831:43:19"},"nodeType":"YulFunctionCall","src":"27831:71:19"},"nodeType":"YulExpressionStatement","src":"27831:71:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"27956:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27969:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"27980:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27965:3:19"},"nodeType":"YulFunctionCall","src":"27965:18:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"27912:43:19"},"nodeType":"YulFunctionCall","src":"27912:72:19"},"nodeType":"YulExpressionStatement","src":"27912:72:19"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"28038:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28051:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"28062:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28047:3:19"},"nodeType":"YulFunctionCall","src":"28047:18:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"27994:43:19"},"nodeType":"YulFunctionCall","src":"27994:72:19"},"nodeType":"YulExpressionStatement","src":"27994:72:19"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27741:9:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"27753:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"27761:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27769:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27780:4:19","type":""}],"src":"27631:442:19"},{"body":{"nodeType":"YulBlock","src":"28119:76:19","statements":[{"body":{"nodeType":"YulBlock","src":"28173:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28182:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"28185:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"28175:6:19"},"nodeType":"YulFunctionCall","src":"28175:12:19"},"nodeType":"YulExpressionStatement","src":"28175:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28142:5:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28164:5:19"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"28149:14:19"},"nodeType":"YulFunctionCall","src":"28149:21:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"28139:2:19"},"nodeType":"YulFunctionCall","src":"28139:32:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"28132:6:19"},"nodeType":"YulFunctionCall","src":"28132:40:19"},"nodeType":"YulIf","src":"28129:60:19"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"28112:5:19","type":""}],"src":"28079:116:19"},{"body":{"nodeType":"YulBlock","src":"28261:77:19","statements":[{"nodeType":"YulAssignment","src":"28271:22:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"28286:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"28280:5:19"},"nodeType":"YulFunctionCall","src":"28280:13:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"28271:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"28326:5:19"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"28302:23:19"},"nodeType":"YulFunctionCall","src":"28302:30:19"},"nodeType":"YulExpressionStatement","src":"28302:30:19"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"28239:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"28247:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"28255:5:19","type":""}],"src":"28201:137:19"},{"body":{"nodeType":"YulBlock","src":"28418:271:19","statements":[{"body":{"nodeType":"YulBlock","src":"28464:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"28466:77:19"},"nodeType":"YulFunctionCall","src":"28466:79:19"},"nodeType":"YulExpressionStatement","src":"28466:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"28439:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"28448:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28435:3:19"},"nodeType":"YulFunctionCall","src":"28435:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"28460:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"28431:3:19"},"nodeType":"YulFunctionCall","src":"28431:32:19"},"nodeType":"YulIf","src":"28428:119:19"},{"nodeType":"YulBlock","src":"28557:125:19","statements":[{"nodeType":"YulVariableDeclaration","src":"28572:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"28586:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"28576:6:19","type":""}]},{"nodeType":"YulAssignment","src":"28601:71:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28644:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"28655:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28640:3:19"},"nodeType":"YulFunctionCall","src":"28640:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"28664:7:19"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"28611:28:19"},"nodeType":"YulFunctionCall","src":"28611:61:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"28601:6:19"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28388:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"28399:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"28411:6:19","type":""}],"src":"28344:345:19"},{"body":{"nodeType":"YulBlock","src":"28801:69:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28823:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"28831:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28819:3:19"},"nodeType":"YulFunctionCall","src":"28819:14:19"},{"hexValue":"5472616e7366657220746f2073656c6c6572206661696c6564","kind":"string","nodeType":"YulLiteral","src":"28835:27:19","type":"","value":"Transfer to seller failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28812:6:19"},"nodeType":"YulFunctionCall","src":"28812:51:19"},"nodeType":"YulExpressionStatement","src":"28812:51:19"}]},"name":"store_literal_in_memory_8f6f578ebbf968167df384543393bc0cfac4f4e606b30dabcd0d6e81f88de9c3","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28793:6:19","type":""}],"src":"28695:175:19"},{"body":{"nodeType":"YulBlock","src":"29022:220:19","statements":[{"nodeType":"YulAssignment","src":"29032:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29098:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"29103:2:19","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29039:58:19"},"nodeType":"YulFunctionCall","src":"29039:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29032:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29204:3:19"}],"functionName":{"name":"store_literal_in_memory_8f6f578ebbf968167df384543393bc0cfac4f4e606b30dabcd0d6e81f88de9c3","nodeType":"YulIdentifier","src":"29115:88:19"},"nodeType":"YulFunctionCall","src":"29115:93:19"},"nodeType":"YulExpressionStatement","src":"29115:93:19"},{"nodeType":"YulAssignment","src":"29217:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29228:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"29233:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29224:3:19"},"nodeType":"YulFunctionCall","src":"29224:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29217:3:19"}]}]},"name":"abi_encode_t_stringliteral_8f6f578ebbf968167df384543393bc0cfac4f4e606b30dabcd0d6e81f88de9c3_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29010:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29018:3:19","type":""}],"src":"28876:366:19"},{"body":{"nodeType":"YulBlock","src":"29419:248:19","statements":[{"nodeType":"YulAssignment","src":"29429:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29441:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"29452:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29437:3:19"},"nodeType":"YulFunctionCall","src":"29437:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29429:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29476:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"29487:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29472:3:19"},"nodeType":"YulFunctionCall","src":"29472:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29495:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"29501:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29491:3:19"},"nodeType":"YulFunctionCall","src":"29491:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29465:6:19"},"nodeType":"YulFunctionCall","src":"29465:47:19"},"nodeType":"YulExpressionStatement","src":"29465:47:19"},{"nodeType":"YulAssignment","src":"29521:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29655:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_8f6f578ebbf968167df384543393bc0cfac4f4e606b30dabcd0d6e81f88de9c3_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29529:124:19"},"nodeType":"YulFunctionCall","src":"29529:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29521:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_8f6f578ebbf968167df384543393bc0cfac4f4e606b30dabcd0d6e81f88de9c3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29399:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29414:4:19","type":""}],"src":"29248:419:19"},{"body":{"nodeType":"YulBlock","src":"29779:72:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29801:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"29809:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29797:3:19"},"nodeType":"YulFunctionCall","src":"29797:14:19"},{"hexValue":"506c6174666f726d20666565207472616e73666572206661696c6564","kind":"string","nodeType":"YulLiteral","src":"29813:30:19","type":"","value":"Platform fee transfer failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29790:6:19"},"nodeType":"YulFunctionCall","src":"29790:54:19"},"nodeType":"YulExpressionStatement","src":"29790:54:19"}]},"name":"store_literal_in_memory_3c6a554350765611c29c35dfe5335e4aec5cb9b9c15676a48a7e33eb5e4bdcc3","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29771:6:19","type":""}],"src":"29673:178:19"},{"body":{"nodeType":"YulBlock","src":"30003:220:19","statements":[{"nodeType":"YulAssignment","src":"30013:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30079:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"30084:2:19","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30020:58:19"},"nodeType":"YulFunctionCall","src":"30020:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30013:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30185:3:19"}],"functionName":{"name":"store_literal_in_memory_3c6a554350765611c29c35dfe5335e4aec5cb9b9c15676a48a7e33eb5e4bdcc3","nodeType":"YulIdentifier","src":"30096:88:19"},"nodeType":"YulFunctionCall","src":"30096:93:19"},"nodeType":"YulExpressionStatement","src":"30096:93:19"},{"nodeType":"YulAssignment","src":"30198:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30209:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"30214:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30205:3:19"},"nodeType":"YulFunctionCall","src":"30205:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30198:3:19"}]}]},"name":"abi_encode_t_stringliteral_3c6a554350765611c29c35dfe5335e4aec5cb9b9c15676a48a7e33eb5e4bdcc3_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29991:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29999:3:19","type":""}],"src":"29857:366:19"},{"body":{"nodeType":"YulBlock","src":"30400:248:19","statements":[{"nodeType":"YulAssignment","src":"30410:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30422:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"30433:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30418:3:19"},"nodeType":"YulFunctionCall","src":"30418:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30410:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30457:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"30468:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30453:3:19"},"nodeType":"YulFunctionCall","src":"30453:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30476:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"30482:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30472:3:19"},"nodeType":"YulFunctionCall","src":"30472:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30446:6:19"},"nodeType":"YulFunctionCall","src":"30446:47:19"},"nodeType":"YulExpressionStatement","src":"30446:47:19"},{"nodeType":"YulAssignment","src":"30502:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30636:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_3c6a554350765611c29c35dfe5335e4aec5cb9b9c15676a48a7e33eb5e4bdcc3_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30510:124:19"},"nodeType":"YulFunctionCall","src":"30510:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30502:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_3c6a554350765611c29c35dfe5335e4aec5cb9b9c15676a48a7e33eb5e4bdcc3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30380:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30395:4:19","type":""}],"src":"30229:419:19"},{"body":{"nodeType":"YulBlock","src":"30760:71:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30782:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"30790:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30778:3:19"},"nodeType":"YulFunctionCall","src":"30778:14:19"},{"hexValue":"526f79616c747920666565207472616e73666572206661696c6564","kind":"string","nodeType":"YulLiteral","src":"30794:29:19","type":"","value":"Royalty fee transfer failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30771:6:19"},"nodeType":"YulFunctionCall","src":"30771:53:19"},"nodeType":"YulExpressionStatement","src":"30771:53:19"}]},"name":"store_literal_in_memory_670b4428482e1cbafe7bcf6b5ec82d2c2dc94aea769da4da4af83ce2be626d42","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"30752:6:19","type":""}],"src":"30654:177:19"},{"body":{"nodeType":"YulBlock","src":"30983:220:19","statements":[{"nodeType":"YulAssignment","src":"30993:74:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31059:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"31064:2:19","type":"","value":"27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31000:58:19"},"nodeType":"YulFunctionCall","src":"31000:67:19"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30993:3:19"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31165:3:19"}],"functionName":{"name":"store_literal_in_memory_670b4428482e1cbafe7bcf6b5ec82d2c2dc94aea769da4da4af83ce2be626d42","nodeType":"YulIdentifier","src":"31076:88:19"},"nodeType":"YulFunctionCall","src":"31076:93:19"},"nodeType":"YulExpressionStatement","src":"31076:93:19"},{"nodeType":"YulAssignment","src":"31178:19:19","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31189:3:19"},{"kind":"number","nodeType":"YulLiteral","src":"31194:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31185:3:19"},"nodeType":"YulFunctionCall","src":"31185:12:19"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"31178:3:19"}]}]},"name":"abi_encode_t_stringliteral_670b4428482e1cbafe7bcf6b5ec82d2c2dc94aea769da4da4af83ce2be626d42_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30971:3:19","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30979:3:19","type":""}],"src":"30837:366:19"},{"body":{"nodeType":"YulBlock","src":"31380:248:19","statements":[{"nodeType":"YulAssignment","src":"31390:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31402:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"31413:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31398:3:19"},"nodeType":"YulFunctionCall","src":"31398:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31390:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31437:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"31448:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31433:3:19"},"nodeType":"YulFunctionCall","src":"31433:17:19"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31456:4:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"31462:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31452:3:19"},"nodeType":"YulFunctionCall","src":"31452:20:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31426:6:19"},"nodeType":"YulFunctionCall","src":"31426:47:19"},"nodeType":"YulExpressionStatement","src":"31426:47:19"},{"nodeType":"YulAssignment","src":"31482:139:19","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31616:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_670b4428482e1cbafe7bcf6b5ec82d2c2dc94aea769da4da4af83ce2be626d42_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31490:124:19"},"nodeType":"YulFunctionCall","src":"31490:131:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31482:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_670b4428482e1cbafe7bcf6b5ec82d2c2dc94aea769da4da4af83ce2be626d42__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31360:9:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31375:4:19","type":""}],"src":"31209:419:19"},{"body":{"nodeType":"YulBlock","src":"31662:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31679:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"31682:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31672:6:19"},"nodeType":"YulFunctionCall","src":"31672:88:19"},"nodeType":"YulExpressionStatement","src":"31672:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31776:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"31779:4:19","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31769:6:19"},"nodeType":"YulFunctionCall","src":"31769:15:19"},"nodeType":"YulExpressionStatement","src":"31769:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31800:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"31803:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"31793:6:19"},"nodeType":"YulFunctionCall","src":"31793:15:19"},"nodeType":"YulExpressionStatement","src":"31793:15:19"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"31634:180:19"},{"body":{"nodeType":"YulBlock","src":"31871:269:19","statements":[{"nodeType":"YulAssignment","src":"31881:22:19","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"31895:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"31901:1:19","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"31891:3:19"},"nodeType":"YulFunctionCall","src":"31891:12:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"31881:6:19"}]},{"nodeType":"YulVariableDeclaration","src":"31912:38:19","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"31942:4:19"},{"kind":"number","nodeType":"YulLiteral","src":"31948:1:19","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"31938:3:19"},"nodeType":"YulFunctionCall","src":"31938:12:19"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"31916:18:19","type":""}]},{"body":{"nodeType":"YulBlock","src":"31989:51:19","statements":[{"nodeType":"YulAssignment","src":"32003:27:19","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"32017:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"32025:4:19","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"32013:3:19"},"nodeType":"YulFunctionCall","src":"32013:17:19"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"32003:6:19"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"31969:18:19"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"31962:6:19"},"nodeType":"YulFunctionCall","src":"31962:26:19"},"nodeType":"YulIf","src":"31959:81:19"},{"body":{"nodeType":"YulBlock","src":"32092:42:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"32106:16:19"},"nodeType":"YulFunctionCall","src":"32106:18:19"},"nodeType":"YulExpressionStatement","src":"32106:18:19"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"32056:18:19"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"32079:6:19"},{"kind":"number","nodeType":"YulLiteral","src":"32087:2:19","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"32076:2:19"},"nodeType":"YulFunctionCall","src":"32076:14:19"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"32053:2:19"},"nodeType":"YulFunctionCall","src":"32053:38:19"},"nodeType":"YulIf","src":"32050:84:19"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"31855:4:19","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"31864:6:19","type":""}],"src":"31820:320:19"},{"body":{"nodeType":"YulBlock","src":"32209:80:19","statements":[{"nodeType":"YulAssignment","src":"32219:22:19","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"32234:6:19"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"32228:5:19"},"nodeType":"YulFunctionCall","src":"32228:13:19"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"32219:5:19"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32277:5:19"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"32250:26:19"},"nodeType":"YulFunctionCall","src":"32250:33:19"},"nodeType":"YulExpressionStatement","src":"32250:33:19"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"32187:6:19","type":""},{"name":"end","nodeType":"YulTypedName","src":"32195:3:19","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"32203:5:19","type":""}],"src":"32146:143:19"},{"body":{"nodeType":"YulBlock","src":"32389:413:19","statements":[{"body":{"nodeType":"YulBlock","src":"32435:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"32437:77:19"},"nodeType":"YulFunctionCall","src":"32437:79:19"},"nodeType":"YulExpressionStatement","src":"32437:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"32410:7:19"},{"name":"headStart","nodeType":"YulIdentifier","src":"32419:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32406:3:19"},"nodeType":"YulFunctionCall","src":"32406:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"32431:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"32402:3:19"},"nodeType":"YulFunctionCall","src":"32402:32:19"},"nodeType":"YulIf","src":"32399:119:19"},{"nodeType":"YulBlock","src":"32528:128:19","statements":[{"nodeType":"YulVariableDeclaration","src":"32543:15:19","value":{"kind":"number","nodeType":"YulLiteral","src":"32557:1:19","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"32547:6:19","type":""}]},{"nodeType":"YulAssignment","src":"32572:74:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32618:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"32629:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32614:3:19"},"nodeType":"YulFunctionCall","src":"32614:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"32638:7:19"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"32582:31:19"},"nodeType":"YulFunctionCall","src":"32582:64:19"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"32572:6:19"}]}]},{"nodeType":"YulBlock","src":"32666:129:19","statements":[{"nodeType":"YulVariableDeclaration","src":"32681:16:19","value":{"kind":"number","nodeType":"YulLiteral","src":"32695:2:19","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"32685:6:19","type":""}]},{"nodeType":"YulAssignment","src":"32711:74:19","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32757:9:19"},{"name":"offset","nodeType":"YulIdentifier","src":"32768:6:19"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32753:3:19"},"nodeType":"YulFunctionCall","src":"32753:22:19"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"32777:7:19"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"32721:31:19"},"nodeType":"YulFunctionCall","src":"32721:64:19"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"32711:6:19"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32351:9:19","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"32362:7:19","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"32374:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"32382:6:19","type":""}],"src":"32295:507:19"},{"body":{"nodeType":"YulBlock","src":"32836:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32853:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"32856:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32846:6:19"},"nodeType":"YulFunctionCall","src":"32846:88:19"},"nodeType":"YulExpressionStatement","src":"32846:88:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32950:1:19","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"32953:4:19","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32943:6:19"},"nodeType":"YulFunctionCall","src":"32943:15:19"},"nodeType":"YulExpressionStatement","src":"32943:15:19"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32974:1:19","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"32977:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"32967:6:19"},"nodeType":"YulFunctionCall","src":"32967:15:19"},"nodeType":"YulExpressionStatement","src":"32967:15:19"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"32808:180:19"},{"body":{"nodeType":"YulBlock","src":"33092:124:19","statements":[{"nodeType":"YulAssignment","src":"33102:26:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33114:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"33125:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33110:3:19"},"nodeType":"YulFunctionCall","src":"33110:18:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33102:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"33182:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33195:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"33206:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33191:3:19"},"nodeType":"YulFunctionCall","src":"33191:17:19"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"33138:43:19"},"nodeType":"YulFunctionCall","src":"33138:71:19"},"nodeType":"YulExpressionStatement","src":"33138:71:19"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33064:9:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"33076:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33087:4:19","type":""}],"src":"32994:222:19"},{"body":{"nodeType":"YulBlock","src":"33432:454:19","statements":[{"nodeType":"YulAssignment","src":"33442:27:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33454:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"33465:3:19","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33450:3:19"},"nodeType":"YulFunctionCall","src":"33450:19:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33442:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"33523:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33536:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"33547:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33532:3:19"},"nodeType":"YulFunctionCall","src":"33532:17:19"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"33479:43:19"},"nodeType":"YulFunctionCall","src":"33479:71:19"},"nodeType":"YulExpressionStatement","src":"33479:71:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"33604:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33617:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"33628:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33613:3:19"},"nodeType":"YulFunctionCall","src":"33613:18:19"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"33560:43:19"},"nodeType":"YulFunctionCall","src":"33560:72:19"},"nodeType":"YulExpressionStatement","src":"33560:72:19"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"33686:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33699:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"33710:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33695:3:19"},"nodeType":"YulFunctionCall","src":"33695:18:19"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"33642:43:19"},"nodeType":"YulFunctionCall","src":"33642:72:19"},"nodeType":"YulExpressionStatement","src":"33642:72:19"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"33768:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33781:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"33792:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33777:3:19"},"nodeType":"YulFunctionCall","src":"33777:18:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"33724:43:19"},"nodeType":"YulFunctionCall","src":"33724:72:19"},"nodeType":"YulExpressionStatement","src":"33724:72:19"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"33850:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33863:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"33874:3:19","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33859:3:19"},"nodeType":"YulFunctionCall","src":"33859:19:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"33806:43:19"},"nodeType":"YulFunctionCall","src":"33806:73:19"},"nodeType":"YulExpressionStatement","src":"33806:73:19"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33372:9:19","type":""},{"name":"value4","nodeType":"YulTypedName","src":"33384:6:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"33392:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"33400:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"33408:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"33416:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33427:4:19","type":""}],"src":"33222:664:19"},{"body":{"nodeType":"YulBlock","src":"33935:43:19","statements":[{"nodeType":"YulAssignment","src":"33945:27:19","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33960:5:19"},{"kind":"number","nodeType":"YulLiteral","src":"33967:4:19","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"33956:3:19"},"nodeType":"YulFunctionCall","src":"33956:16:19"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"33945:7:19"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33917:5:19","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"33927:7:19","type":""}],"src":"33892:86:19"},{"body":{"nodeType":"YulBlock","src":"34045:51:19","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34062:3:19"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34083:5:19"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"34067:15:19"},"nodeType":"YulFunctionCall","src":"34067:22:19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34055:6:19"},"nodeType":"YulFunctionCall","src":"34055:35:19"},"nodeType":"YulExpressionStatement","src":"34055:35:19"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34033:5:19","type":""},{"name":"pos","nodeType":"YulTypedName","src":"34040:3:19","type":""}],"src":"33984:112:19"},{"body":{"nodeType":"YulBlock","src":"34280:367:19","statements":[{"nodeType":"YulAssignment","src":"34290:27:19","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34302:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"34313:3:19","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34298:3:19"},"nodeType":"YulFunctionCall","src":"34298:19:19"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34290:4:19"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"34371:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34384:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"34395:1:19","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34380:3:19"},"nodeType":"YulFunctionCall","src":"34380:17:19"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"34327:43:19"},"nodeType":"YulFunctionCall","src":"34327:71:19"},"nodeType":"YulExpressionStatement","src":"34327:71:19"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"34448:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34461:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"34472:2:19","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34457:3:19"},"nodeType":"YulFunctionCall","src":"34457:18:19"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"34408:39:19"},"nodeType":"YulFunctionCall","src":"34408:68:19"},"nodeType":"YulExpressionStatement","src":"34408:68:19"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"34530:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34543:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"34554:2:19","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34539:3:19"},"nodeType":"YulFunctionCall","src":"34539:18:19"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"34486:43:19"},"nodeType":"YulFunctionCall","src":"34486:72:19"},"nodeType":"YulExpressionStatement","src":"34486:72:19"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"34612:6:19"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34625:9:19"},{"kind":"number","nodeType":"YulLiteral","src":"34636:2:19","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34621:3:19"},"nodeType":"YulFunctionCall","src":"34621:18:19"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"34568:43:19"},"nodeType":"YulFunctionCall","src":"34568:72:19"},"nodeType":"YulExpressionStatement","src":"34568:72:19"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34228:9:19","type":""},{"name":"value3","nodeType":"YulTypedName","src":"34240:6:19","type":""},{"name":"value2","nodeType":"YulTypedName","src":"34248:6:19","type":""},{"name":"value1","nodeType":"YulTypedName","src":"34256:6:19","type":""},{"name":"value0","nodeType":"YulTypedName","src":"34264:6:19","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34275:4:19","type":""}],"src":"34102:545:19"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() {\n        revert(0, 0)\n    }\n\n    // struct Marketplace.Order\n    function abi_decode_t_struct$_Order_$6517_calldata_ptr(offset, end) -> value {\n        if slt(sub(end, offset), 256) { revert_error_21fe6b43b4db61d76a176e95bf1a6b9ede4c301f93a4246f41fecb96e160861d() }\n        value := offset\n    }\n\n    function abi_decode_tuple_t_struct$_Order_$6517_calldata_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 256) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_Order_$6517_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes1(value) -> cleaned {\n        cleaned := and(value, 0xff00000000000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes1_to_t_bytes1_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes1(value))\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__to_t_bytes1_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address_t_bytes32_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_bytes1_to_t_bytes1_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value5,  add(headStart, 160))\n\n        mstore(add(headStart, 192), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value6,  tail)\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_struct$_Order_$6517_calldata_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 288) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_Order_$6517_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 256))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1, value2 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_fc683099c882a9b602caa77f81b8e2530e69b20f829392585b0207e8d63a65a1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Recipient cannot be zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_fc683099c882a9b602caa77f81b8e2530e69b20f829392585b0207e8d63a65a1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_fc683099c882a9b602caa77f81b8e2530e69b20f829392585b0207e8d63a65a1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc683099c882a9b602caa77f81b8e2530e69b20f829392585b0207e8d63a65a1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc683099c882a9b602caa77f81b8e2530e69b20f829392585b0207e8d63a65a1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_bfd76efe5631a7b194613c25bca698c7684113797e8c6b1c167fe0d7d5387838(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not a party to the order\")\n\n    }\n\n    function abi_encode_t_stringliteral_bfd76efe5631a7b194613c25bca698c7684113797e8c6b1c167fe0d7d5387838_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_bfd76efe5631a7b194613c25bca698c7684113797e8c6b1c167fe0d7d5387838(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bfd76efe5631a7b194613c25bca698c7684113797e8c6b1c167fe0d7d5387838__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bfd76efe5631a7b194613c25bca698c7684113797e8c6b1c167fe0d7d5387838_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b8d33ebd343fbf304361844b0391ff4a69626e716b23174384fc4b57bd13a78a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Order: Already handled\")\n\n    }\n\n    function abi_encode_t_stringliteral_b8d33ebd343fbf304361844b0391ff4a69626e716b23174384fc4b57bd13a78a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_b8d33ebd343fbf304361844b0391ff4a69626e716b23174384fc4b57bd13a78a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b8d33ebd343fbf304361844b0391ff4a69626e716b23174384fc4b57bd13a78a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b8d33ebd343fbf304361844b0391ff4a69626e716b23174384fc4b57bd13a78a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_92ca134704187ef3fa501c974cfbff448d63adac4439a8c96e86a1025b91450f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Fee percent cannot exceed 10000\")\n\n    }\n\n    function abi_encode_t_stringliteral_92ca134704187ef3fa501c974cfbff448d63adac4439a8c96e86a1025b91450f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_92ca134704187ef3fa501c974cfbff448d63adac4439a8c96e86a1025b91450f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_92ca134704187ef3fa501c974cfbff448d63adac4439a8c96e86a1025b91450f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_92ca134704187ef3fa501c974cfbff448d63adac4439a8c96e86a1025b91450f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_0cb4d64781e02901606bf70516bdce82d19e6058128666a71941789d19d9cef6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Order: Expired\")\n\n    }\n\n    function abi_encode_t_stringliteral_0cb4d64781e02901606bf70516bdce82d19e6058128666a71941789d19d9cef6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_0cb4d64781e02901606bf70516bdce82d19e6058128666a71941789d19d9cef6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0cb4d64781e02901606bf70516bdce82d19e6058128666a71941789d19d9cef6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0cb4d64781e02901606bf70516bdce82d19e6058128666a71941789d19d9cef6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_975613551a7372c615f5b299191a9b4b4e24134559b144db5103f92248cec0f3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Order: Invalid signature\")\n\n    }\n\n    function abi_encode_t_stringliteral_975613551a7372c615f5b299191a9b4b4e24134559b144db5103f92248cec0f3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_975613551a7372c615f5b299191a9b4b4e24134559b144db5103f92248cec0f3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_975613551a7372c615f5b299191a9b4b4e24134559b144db5103f92248cec0f3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_975613551a7372c615f5b299191a9b4b4e24134559b144db5103f92248cec0f3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4e92386cd5dd7e50de0bf20dfe9f8dbbf22c6328d9a617b8179cb3bd33bc4b3b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Order: Not for you\")\n\n    }\n\n    function abi_encode_t_stringliteral_4e92386cd5dd7e50de0bf20dfe9f8dbbf22c6328d9a617b8179cb3bd33bc4b3b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_4e92386cd5dd7e50de0bf20dfe9f8dbbf22c6328d9a617b8179cb3bd33bc4b3b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4e92386cd5dd7e50de0bf20dfe9f8dbbf22c6328d9a617b8179cb3bd33bc4b3b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4e92386cd5dd7e50de0bf20dfe9f8dbbf22c6328d9a617b8179cb3bd33bc4b3b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_25e66163f035f2588372d1dbade133571ced130dbc6a5e4e690e4afa56421a18(memPtr) {\n\n        mstore(add(memPtr, 0), \"Offer: Expired\")\n\n    }\n\n    function abi_encode_t_stringliteral_25e66163f035f2588372d1dbade133571ced130dbc6a5e4e690e4afa56421a18_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_25e66163f035f2588372d1dbade133571ced130dbc6a5e4e690e4afa56421a18(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_25e66163f035f2588372d1dbade133571ced130dbc6a5e4e690e4afa56421a18__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_25e66163f035f2588372d1dbade133571ced130dbc6a5e4e690e4afa56421a18_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_80af65d824aa286438ae3de3c5167c9b4c82eb9eb37a9332237e2bb4d6c603d8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Offer: Already handled\")\n\n    }\n\n    function abi_encode_t_stringliteral_80af65d824aa286438ae3de3c5167c9b4c82eb9eb37a9332237e2bb4d6c603d8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_80af65d824aa286438ae3de3c5167c9b4c82eb9eb37a9332237e2bb4d6c603d8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_80af65d824aa286438ae3de3c5167c9b4c82eb9eb37a9332237e2bb4d6c603d8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_80af65d824aa286438ae3de3c5167c9b4c82eb9eb37a9332237e2bb4d6c603d8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_da5c3340b8d13a4de28b6034e9771db52d96e1250696e165889248771d6df19d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Offer: Not for you\")\n\n    }\n\n    function abi_encode_t_stringliteral_da5c3340b8d13a4de28b6034e9771db52d96e1250696e165889248771d6df19d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_da5c3340b8d13a4de28b6034e9771db52d96e1250696e165889248771d6df19d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_da5c3340b8d13a4de28b6034e9771db52d96e1250696e165889248771d6df19d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_da5c3340b8d13a4de28b6034e9771db52d96e1250696e165889248771d6df19d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_adba10029e9d9a97eee76589a6bea4f4e3829223133272d2c777974e12724bb8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Offer: Invalid buyer signature\")\n\n    }\n\n    function abi_encode_t_stringliteral_adba10029e9d9a97eee76589a6bea4f4e3829223133272d2c777974e12724bb8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_adba10029e9d9a97eee76589a6bea4f4e3829223133272d2c777974e12724bb8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_adba10029e9d9a97eee76589a6bea4f4e3829223133272d2c777974e12724bb8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_adba10029e9d9a97eee76589a6bea4f4e3829223133272d2c777974e12724bb8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_address_t_uint256_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_address_t_uint256_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 288)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_address_to_t_address_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value8,  add(headStart, 256))\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_ade364304ee64f798a996860d608bb28f2310a00659ec71a8a8a51a6dcbdaa71(memPtr) {\n\n        mstore(add(memPtr, 0), \"Seller no longer owns NFT\")\n\n    }\n\n    function abi_encode_t_stringliteral_ade364304ee64f798a996860d608bb28f2310a00659ec71a8a8a51a6dcbdaa71_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_ade364304ee64f798a996860d608bb28f2310a00659ec71a8a8a51a6dcbdaa71(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ade364304ee64f798a996860d608bb28f2310a00659ec71a8a8a51a6dcbdaa71__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ade364304ee64f798a996860d608bb28f2310a00659ec71a8a8a51a6dcbdaa71_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_57b44d607556e0a8d9b0d76349d42e851eb016dfd63ce61ce355fc1ddb14a839(memPtr) {\n\n        mstore(add(memPtr, 0), \"Fees exceed price\")\n\n    }\n\n    function abi_encode_t_stringliteral_57b44d607556e0a8d9b0d76349d42e851eb016dfd63ce61ce355fc1ddb14a839_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_57b44d607556e0a8d9b0d76349d42e851eb016dfd63ce61ce355fc1ddb14a839(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_57b44d607556e0a8d9b0d76349d42e851eb016dfd63ce61ce355fc1ddb14a839__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_57b44d607556e0a8d9b0d76349d42e851eb016dfd63ce61ce355fc1ddb14a839_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_8f6f578ebbf968167df384543393bc0cfac4f4e606b30dabcd0d6e81f88de9c3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer to seller failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_8f6f578ebbf968167df384543393bc0cfac4f4e606b30dabcd0d6e81f88de9c3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_8f6f578ebbf968167df384543393bc0cfac4f4e606b30dabcd0d6e81f88de9c3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8f6f578ebbf968167df384543393bc0cfac4f4e606b30dabcd0d6e81f88de9c3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8f6f578ebbf968167df384543393bc0cfac4f4e606b30dabcd0d6e81f88de9c3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3c6a554350765611c29c35dfe5335e4aec5cb9b9c15676a48a7e33eb5e4bdcc3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Platform fee transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_3c6a554350765611c29c35dfe5335e4aec5cb9b9c15676a48a7e33eb5e4bdcc3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_3c6a554350765611c29c35dfe5335e4aec5cb9b9c15676a48a7e33eb5e4bdcc3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3c6a554350765611c29c35dfe5335e4aec5cb9b9c15676a48a7e33eb5e4bdcc3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3c6a554350765611c29c35dfe5335e4aec5cb9b9c15676a48a7e33eb5e4bdcc3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_670b4428482e1cbafe7bcf6b5ec82d2c2dc94aea769da4da4af83ce2be626d42(memPtr) {\n\n        mstore(add(memPtr, 0), \"Royalty fee transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_670b4428482e1cbafe7bcf6b5ec82d2c2dc94aea769da4da4af83ce2be626d42_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_670b4428482e1cbafe7bcf6b5ec82d2c2dc94aea769da4da4af83ce2be626d42(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_670b4428482e1cbafe7bcf6b5ec82d2c2dc94aea769da4da4af83ce2be626d42__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_670b4428482e1cbafe7bcf6b5ec82d2c2dc94aea769da4da4af83ce2be626d42_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n}\n","id":19,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"2650":[{"length":32,"start":6169}],"2652":[{"length":32,"start":6128}],"2654":[{"length":32,"start":6042}],"2656":[{"length":32,"start":6887}],"2658":[{"length":32,"start":6920}],"2661":[{"length":32,"start":4104}],"2664":[{"length":32,"start":4163}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638c639a851161008c578063da0f62a211610066578063da0f62a214610217578063de5b482d14610233578063eb13554f1461024f578063f2fde38b1461026d576100ea565b80638c639a85146101bf5780638da5cb5b146101dd578063cab230d2146101fb576100ea565b806349a03152116100c857806349a031521461016b578063627cdcb914610187578063715018a61461019157806384b0196e1461019b576100ea565b80631871e243146100ef5780632dff692d1461010b5780632f7801f41461013b575b600080fd5b61010960048036038101906101049190611d04565b610289565b005b61012560048036038101906101209190611d67565b61039f565b6040516101329190611daf565b60405180910390f35b61015560048036038101906101509190611d04565b6103bf565b6040516101629190611de3565b60405180910390f35b61018560048036038101906101809190611e23565b6103d7565b005b61018f6105a9565b005b610199610600565b005b6101a3610614565b6040516101b69796959493929190611ff8565b60405180910390f35b6101c76106be565b6040516101d49190611de3565b60405180910390f35b6101e56106c4565b6040516101f2919061207c565b60405180910390f35b610215600480360381019061021091906120c3565b6106ed565b005b610231600480360381019061022c9190612155565b61077f565b005b61024d60048036038101906102489190612155565b610a87565b005b610257610d48565b604051610264919061207c565b60405180910390f35b61028760048036038101906102829190611d04565b610d6e565b005b610291610df4565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610300576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f790612203565b60405180910390fd5b7faf04973bb8004e313cfd09017b963bee1e6f6ffb9be88c07a0c5ce5fafe93403600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682604051610353929190612223565b60405180910390a180600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60076020528060005260406000206000915054906101000a900460ff1681565b60066020528060005260406000206000915090505481565b60003390508160000160208101906103ef9190611d04565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16148061046557508160200160208101906104369190611d04565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b6104a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049b90612298565b60405180910390fd5b60006104af83610e7b565b90506007600082815260200190815260200160002060009054906101000a900460ff1615610512576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050990612304565b60405180910390fd5b60016007600083815260200190815260200160002060006101000a81548160ff02191690831515021790555082606001358360400160208101906105569190611d04565b73ffffffffffffffffffffffffffffffffffffffff16827f1989da6fac61abd1ab6bc85f17f3f4db680fad48c4a96fd3841977f8cfe9eb0e8560405161059c919061207c565b60405180910390a4505050565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906105f990612353565b9190505550565b610608610df4565b6106126000610f3b565b565b600060608060008060006060610628610fff565b61063061103a565b46306000801b600067ffffffffffffffff8111156106515761065061239b565b5b60405190808252806020026020018201604052801561067f5781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b60055481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6106f5610df4565b61271081111561073a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073190612416565b60405180910390fd5b7ff4b9cde47c67b2b563d8b95f018afcffff71d3f8c847d36a89beb50733d6c9df6005548260405161076d929190612436565b60405180910390a18060058190555050565b610787611075565b8260e0013542106107cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c4906124ab565b60405180910390fd5b60008360000160208101906107e29190611d04565b905060006107ef85610e7b565b90506007600082815260200190815260200160002060009054906101000a900460ff1615610852576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084990612304565b60405180910390fd5b61085e828286866110bb565b61089d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089490612517565b60405180910390fd5b60016007600083815260200190815260200160002060006101000a81548160ff0219169083151502179055506000339050600073ffffffffffffffffffffffffffffffffffffffff168660200160208101906108f99190611d04565b73ffffffffffffffffffffffffffffffffffffffff1614610995578560200160208101906109279190611d04565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610994576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098b90612583565b60405180910390fd5b5b6109e1818760000160208101906109ac9190611d04565b8860400160208101906109bf9190611d04565b89606001358a60800160208101906109d79190611d04565b8b60a00135611143565b8073ffffffffffffffffffffffffffffffffffffffff16866000016020810190610a0b9190611d04565b73ffffffffffffffffffffffffffffffffffffffff16837fae16a7b9f34eb013dde3e7e431986599ff512137255efcd247d5528a550deee7896040016020810190610a569190611d04565b8a606001358b60a00135604051610a6f939291906125a3565b60405180910390a4505050610a826115f7565b505050565b610a8f611075565b8260e001354210610ad5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610acc90612626565b60405180910390fd5b6000836020016020810190610aea9190611d04565b905060003390506000610afc86610e7b565b90506007600082815260200190815260200160002060009054906101000a900460ff1615610b5f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5690612692565b60405180910390fd5b856000016020810190610b729190611d04565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614610bdf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd6906126fe565b60405180910390fd5b610beb838287876110bb565b610c2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c219061276a565b60405180910390fd5b60016007600083815260200190815260200160002060006101000a81548160ff021916908315150217905550610ca2866020016020810190610c6c9190611d04565b83886040016020810190610c809190611d04565b89606001358a6080016020810190610c989190611d04565b8b60a00135611143565b856020016020810190610cb59190611d04565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16827fae16a7b9f34eb013dde3e7e431986599ff512137255efcd247d5528a550deee7896040016020810190610d179190611d04565b8a606001358b60a00135604051610d30939291906125a3565b60405180910390a4505050610d436115f7565b505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610d76610df4565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610de85760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610ddf919061207c565b60405180910390fd5b610df181610f3b565b50565b610dfc611600565b73ffffffffffffffffffffffffffffffffffffffff16610e1a6106c4565b73ffffffffffffffffffffffffffffffffffffffff1614610e7957610e3d611600565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610e70919061207c565b60405180910390fd5b565b6000610f347fbf903f52c02ffc68f1c2367d8d2f116d1a25163fe798cb658496619ab6b1bf2d836000016020810190610eb49190611d04565b846020016020810190610ec79190611d04565b856040016020810190610eda9190611d04565b8660600135876080016020810190610ef29190611d04565b8860a001358960c001358a60e00135604051602001610f199998979695949392919061278a565b60405160208183030381529060405280519060200120611608565b9050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b606061103560027f000000000000000000000000000000000000000000000000000000000000000061162290919063ffffffff16565b905090565b606061107060037f000000000000000000000000000000000000000000000000000000000000000061162290919063ffffffff16565b905090565b6002600154036110b1576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600181905550565b60008473ffffffffffffffffffffffffffffffffffffffff166111228585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506116d2565b73ffffffffffffffffffffffffffffffffffffffff16149050949350505050565b60008490508573ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16636352211e866040518263ffffffff1660e01b81526004016111989190611de3565b602060405180830381865afa1580156111b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d9919061282c565b73ffffffffffffffffffffffffffffffffffffffff161461122f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611226906128a5565b60405180910390fd5b60006127106005548461124291906128c5565b61124c9190612936565b905060008061125c8888876116fe565b9150915084818461126d9190612967565b11156112ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112a5906129e7565b60405180910390fd5b60008184876112bd9190612a07565b6112c79190612a07565b905060008790508073ffffffffffffffffffffffffffffffffffffffff166323b872dd8d8d856040518463ffffffff1660e01b815260040161130b93929190612a3b565b6020604051808303816000875af115801561132a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061134e9190612a9e565b61138d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161138490612b17565b60405180910390fd5b6000851115611478578073ffffffffffffffffffffffffffffffffffffffff166323b872dd8d600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16886040518463ffffffff1660e01b81526004016113f593929190612a3b565b6020604051808303816000875af1158015611414573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114389190612a9e565b611477576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161146e90612b83565b60405180910390fd5b5b6000831180156114b55750600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614155b1561157a578073ffffffffffffffffffffffffffffffffffffffff166323b872dd8d86866040518463ffffffff1660e01b81526004016114f793929190612a3b565b6020604051808303816000875af1158015611516573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061153a9190612a9e565b611579576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161157090612bef565b60405180910390fd5b5b8573ffffffffffffffffffffffffffffffffffffffff166342842e0e8c8e8c6040518463ffffffff1660e01b81526004016115b793929190612a3b565b600060405180830381600087803b1580156115d157600080fd5b505af11580156115e5573d6000803e3d6000fd5b50505050505050505050505050505050565b60018081905550565b600033905090565b600061161b611615611796565b8361184d565b9050919050565b606060ff60001b831461163f576116388361188e565b90506116cc565b81805461164b90612c3e565b80601f016020809104026020016040519081016040528092919081815260200182805461167790612c3e565b80156116c45780601f10611699576101008083540402835291602001916116c4565b820191906000526020600020905b8154815290600101906020018083116116a757829003601f168201915b505050505090505b92915050565b6000806000806116e28686611902565b9250925092506116f2828261195e565b82935050505092915050565b6000808473ffffffffffffffffffffffffffffffffffffffff16632a55205a85856040518363ffffffff1660e01b815260040161173c929190612436565b6040805180830381865afa92505050801561177557506040513d601f19601f820116820180604052508101906117729190612c84565b60015b611785576000809150915061178e565b81819350935050505b935093915050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614801561181257507f000000000000000000000000000000000000000000000000000000000000000046145b1561183f577f0000000000000000000000000000000000000000000000000000000000000000905061184a565b611847611ac2565b90505b90565b60006040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b6060600061189b83611b58565b90506000602067ffffffffffffffff8111156118ba576118b961239b565b5b6040519080825280601f01601f1916602001820160405280156118ec5781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b600080600060418451036119475760008060006020870151925060408701519150606087015160001a905061193988828585611ba8565b955095509550505050611957565b60006002855160001b9250925092505b9250925092565b6000600381111561197257611971612cc4565b5b82600381111561198557611984612cc4565b5b0315611abe576001600381111561199f5761199e612cc4565b5b8260038111156119b2576119b1612cc4565b5b036119e9576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260038111156119fd576119fc612cc4565b5b826003811115611a1057611a0f612cc4565b5b03611a55578060001c6040517ffce698f7000000000000000000000000000000000000000000000000000000008152600401611a4c9190611de3565b60405180910390fd5b600380811115611a6857611a67612cc4565b5b826003811115611a7b57611a7a612cc4565b5b03611abd57806040517fd78bce0c000000000000000000000000000000000000000000000000000000008152600401611ab49190612cf3565b60405180910390fd5b5b5050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000004630604051602001611b3d959493929190612d0e565b60405160208183030381529060405280519060200120905090565b60008060ff8360001c169050601f811115611b9f576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b60008060007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08460001c1115611be8576000600385925092509250611c92565b600060018888888860405160008152602001604052604051611c0d9493929190612d7d565b6020604051602081039080840390855afa158015611c2f573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611c8357600060016000801b93509350935050611c92565b8060008060001b935093509350505b9450945094915050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611cd182611ca6565b9050919050565b611ce181611cc6565b8114611cec57600080fd5b50565b600081359050611cfe81611cd8565b92915050565b600060208284031215611d1a57611d19611c9c565b5b6000611d2884828501611cef565b91505092915050565b6000819050919050565b611d4481611d31565b8114611d4f57600080fd5b50565b600081359050611d6181611d3b565b92915050565b600060208284031215611d7d57611d7c611c9c565b5b6000611d8b84828501611d52565b91505092915050565b60008115159050919050565b611da981611d94565b82525050565b6000602082019050611dc46000830184611da0565b92915050565b6000819050919050565b611ddd81611dca565b82525050565b6000602082019050611df86000830184611dd4565b92915050565b600080fd5b60006101008284031215611e1a57611e19611dfe565b5b81905092915050565b60006101008284031215611e3a57611e39611c9c565b5b6000611e4884828501611e03565b91505092915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b611e8681611e51565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611ec6578082015181840152602081019050611eab565b60008484015250505050565b6000601f19601f8301169050919050565b6000611eee82611e8c565b611ef88185611e97565b9350611f08818560208601611ea8565b611f1181611ed2565b840191505092915050565b611f2581611cc6565b82525050565b611f3481611d31565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611f6f81611dca565b82525050565b6000611f818383611f66565b60208301905092915050565b6000602082019050919050565b6000611fa582611f3a565b611faf8185611f45565b9350611fba83611f56565b8060005b83811015611feb578151611fd28882611f75565b9750611fdd83611f8d565b925050600181019050611fbe565b5085935050505092915050565b600060e08201905061200d600083018a611e7d565b818103602083015261201f8189611ee3565b905081810360408301526120338188611ee3565b90506120426060830187611dd4565b61204f6080830186611f1c565b61205c60a0830185611f2b565b81810360c083015261206e8184611f9a565b905098975050505050505050565b60006020820190506120916000830184611f1c565b92915050565b6120a081611dca565b81146120ab57600080fd5b50565b6000813590506120bd81612097565b92915050565b6000602082840312156120d9576120d8611c9c565b5b60006120e7848285016120ae565b91505092915050565b600080fd5b600080fd5b600080fd5b60008083601f840112612115576121146120f0565b5b8235905067ffffffffffffffff811115612132576121316120f5565b5b60208301915083600182028301111561214e5761214d6120fa565b5b9250929050565b6000806000610120848603121561216f5761216e611c9c565b5b600061217d86828701611e03565b93505061010084013567ffffffffffffffff81111561219f5761219e611ca1565b5b6121ab868287016120ff565b92509250509250925092565b7f526563697069656e742063616e6e6f74206265207a65726f0000000000000000600082015250565b60006121ed601883611e97565b91506121f8826121b7565b602082019050919050565b6000602082019050818103600083015261221c816121e0565b9050919050565b60006040820190506122386000830185611f1c565b6122456020830184611f1c565b9392505050565b7f4e6f74206120706172747920746f20746865206f726465720000000000000000600082015250565b6000612282601883611e97565b915061228d8261224c565b602082019050919050565b600060208201905081810360008301526122b181612275565b9050919050565b7f4f726465723a20416c72656164792068616e646c656400000000000000000000600082015250565b60006122ee601683611e97565b91506122f9826122b8565b602082019050919050565b6000602082019050818103600083015261231d816122e1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061235e82611dca565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036123905761238f612324565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4665652070657263656e742063616e6e6f742065786365656420313030303000600082015250565b6000612400601f83611e97565b915061240b826123ca565b602082019050919050565b6000602082019050818103600083015261242f816123f3565b9050919050565b600060408201905061244b6000830185611dd4565b6124586020830184611dd4565b9392505050565b7f4f726465723a2045787069726564000000000000000000000000000000000000600082015250565b6000612495600e83611e97565b91506124a08261245f565b602082019050919050565b600060208201905081810360008301526124c481612488565b9050919050565b7f4f726465723a20496e76616c6964207369676e61747572650000000000000000600082015250565b6000612501601883611e97565b915061250c826124cb565b602082019050919050565b60006020820190508181036000830152612530816124f4565b9050919050565b7f4f726465723a204e6f7420666f7220796f750000000000000000000000000000600082015250565b600061256d601283611e97565b915061257882612537565b602082019050919050565b6000602082019050818103600083015261259c81612560565b9050919050565b60006060820190506125b86000830186611f1c565b6125c56020830185611dd4565b6125d26040830184611dd4565b949350505050565b7f4f666665723a2045787069726564000000000000000000000000000000000000600082015250565b6000612610600e83611e97565b915061261b826125da565b602082019050919050565b6000602082019050818103600083015261263f81612603565b9050919050565b7f4f666665723a20416c72656164792068616e646c656400000000000000000000600082015250565b600061267c601683611e97565b915061268782612646565b602082019050919050565b600060208201905081810360008301526126ab8161266f565b9050919050565b7f4f666665723a204e6f7420666f7220796f750000000000000000000000000000600082015250565b60006126e8601283611e97565b91506126f3826126b2565b602082019050919050565b60006020820190508181036000830152612717816126db565b9050919050565b7f4f666665723a20496e76616c6964206275796572207369676e61747572650000600082015250565b6000612754601e83611e97565b915061275f8261271e565b602082019050919050565b6000602082019050818103600083015261278381612747565b9050919050565b6000610120820190506127a0600083018c611f2b565b6127ad602083018b611f1c565b6127ba604083018a611f1c565b6127c76060830189611f1c565b6127d46080830188611dd4565b6127e160a0830187611f1c565b6127ee60c0830186611dd4565b6127fb60e0830185611dd4565b612809610100830184611dd4565b9a9950505050505050505050565b60008151905061282681611cd8565b92915050565b60006020828403121561284257612841611c9c565b5b600061285084828501612817565b91505092915050565b7f53656c6c6572206e6f206c6f6e676572206f776e73204e465400000000000000600082015250565b600061288f601983611e97565b915061289a82612859565b602082019050919050565b600060208201905081810360008301526128be81612882565b9050919050565b60006128d082611dca565b91506128db83611dca565b92508282026128e981611dca565b91508282048414831517612900576128ff612324565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061294182611dca565b915061294c83611dca565b92508261295c5761295b612907565b5b828204905092915050565b600061297282611dca565b915061297d83611dca565b925082820190508082111561299557612994612324565b5b92915050565b7f4665657320657863656564207072696365000000000000000000000000000000600082015250565b60006129d1601183611e97565b91506129dc8261299b565b602082019050919050565b60006020820190508181036000830152612a00816129c4565b9050919050565b6000612a1282611dca565b9150612a1d83611dca565b9250828203905081811115612a3557612a34612324565b5b92915050565b6000606082019050612a506000830186611f1c565b612a5d6020830185611f1c565b612a6a6040830184611dd4565b949350505050565b612a7b81611d94565b8114612a8657600080fd5b50565b600081519050612a9881612a72565b92915050565b600060208284031215612ab457612ab3611c9c565b5b6000612ac284828501612a89565b91505092915050565b7f5472616e7366657220746f2073656c6c6572206661696c656400000000000000600082015250565b6000612b01601983611e97565b9150612b0c82612acb565b602082019050919050565b60006020820190508181036000830152612b3081612af4565b9050919050565b7f506c6174666f726d20666565207472616e73666572206661696c656400000000600082015250565b6000612b6d601c83611e97565b9150612b7882612b37565b602082019050919050565b60006020820190508181036000830152612b9c81612b60565b9050919050565b7f526f79616c747920666565207472616e73666572206661696c65640000000000600082015250565b6000612bd9601b83611e97565b9150612be482612ba3565b602082019050919050565b60006020820190508181036000830152612c0881612bcc565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680612c5657607f821691505b602082108103612c6957612c68612c0f565b5b50919050565b600081519050612c7e81612097565b92915050565b60008060408385031215612c9b57612c9a611c9c565b5b6000612ca985828601612817565b9250506020612cba85828601612c6f565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000602082019050612d086000830184611f2b565b92915050565b600060a082019050612d236000830188611f2b565b612d306020830187611f2b565b612d3d6040830186611f2b565b612d4a6060830185611dd4565b612d576080830184611f1c565b9695505050505050565b600060ff82169050919050565b612d7781612d61565b82525050565b6000608082019050612d926000830187611f2b565b612d9f6020830186612d6e565b612dac6040830185611f2b565b612db96060830184611f2b565b9594505050505056fea26469706673582212203c8fa14844261bee355eaca0100c3fa06c5b1c92b1ddfd82e1e62bdc3848087f64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8C639A85 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xDA0F62A2 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xDA0F62A2 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0xDE5B482D EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0xEB13554F EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x26D JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x8C639A85 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0xCAB230D2 EQ PUSH2 0x1FB JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x49A03152 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x49A03152 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x627CDCB9 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x84B0196E EQ PUSH2 0x19B JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x1871E243 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x2DFF692D EQ PUSH2 0x10B JUMPI DUP1 PUSH4 0x2F7801F4 EQ PUSH2 0x13B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST PUSH2 0x289 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x125 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x120 SWAP2 SWAP1 PUSH2 0x1D67 JUMP JUMPDEST PUSH2 0x39F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x132 SWAP2 SWAP1 PUSH2 0x1DAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x155 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x150 SWAP2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x162 SWAP2 SWAP1 PUSH2 0x1DE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x185 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x180 SWAP2 SWAP1 PUSH2 0x1E23 JUMP JUMPDEST PUSH2 0x3D7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18F PUSH2 0x5A9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x199 PUSH2 0x600 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A3 PUSH2 0x614 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B6 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C7 PUSH2 0x6BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x1DE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E5 PUSH2 0x6C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0x207C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x215 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x210 SWAP2 SWAP1 PUSH2 0x20C3 JUMP JUMPDEST PUSH2 0x6ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x231 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x2155 JUMP JUMPDEST PUSH2 0x77F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x248 SWAP2 SWAP1 PUSH2 0x2155 JUMP JUMPDEST PUSH2 0xA87 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x257 PUSH2 0xD48 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x264 SWAP2 SWAP1 PUSH2 0x207C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x287 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST PUSH2 0xD6E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x291 PUSH2 0xDF4 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x300 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F7 SWAP1 PUSH2 0x2203 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xAF04973BB8004E313CFD09017B963BEE1E6F6FFB9BE88C07A0C5CE5FAFE93403 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x353 SWAP3 SWAP2 SWAP1 PUSH2 0x2223 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP DUP2 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x3EF SWAP2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x465 JUMPI POP DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x436 SWAP2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x4A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49B SWAP1 PUSH2 0x2298 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4AF DUP4 PUSH2 0xE7B JUMP JUMPDEST SWAP1 POP PUSH1 0x7 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x512 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x509 SWAP1 PUSH2 0x2304 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x60 ADD CALLDATALOAD DUP4 PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x556 SWAP2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0x1989DA6FAC61ABD1AB6BC85F17F3F4DB680FAD48C4A96FD3841977F8CFE9EB0E DUP6 PUSH1 0x40 MLOAD PUSH2 0x59C SWAP2 SWAP1 PUSH2 0x207C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x5F9 SWAP1 PUSH2 0x2353 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMP JUMPDEST PUSH2 0x608 PUSH2 0xDF4 JUMP JUMPDEST PUSH2 0x612 PUSH1 0x0 PUSH2 0xF3B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH2 0x628 PUSH2 0xFFF JUMP JUMPDEST PUSH2 0x630 PUSH2 0x103A JUMP JUMPDEST CHAINID ADDRESS PUSH1 0x0 DUP1 SHL PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x651 JUMPI PUSH2 0x650 PUSH2 0x239B JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x67F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH32 0xF00000000000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6F5 PUSH2 0xDF4 JUMP JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0x73A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x731 SWAP1 PUSH2 0x2416 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xF4B9CDE47C67B2B563D8B95F018AFCFFFF71D3F8C847D36A89BEB50733D6C9DF PUSH1 0x5 SLOAD DUP3 PUSH1 0x40 MLOAD PUSH2 0x76D SWAP3 SWAP2 SWAP1 PUSH2 0x2436 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x787 PUSH2 0x1075 JUMP JUMPDEST DUP3 PUSH1 0xE0 ADD CALLDATALOAD TIMESTAMP LT PUSH2 0x7CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C4 SWAP1 PUSH2 0x24AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x7E2 SWAP2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7EF DUP6 PUSH2 0xE7B JUMP JUMPDEST SWAP1 POP PUSH1 0x7 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x852 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x849 SWAP1 PUSH2 0x2304 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x85E DUP3 DUP3 DUP7 DUP7 PUSH2 0x10BB JUMP JUMPDEST PUSH2 0x89D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x894 SWAP1 PUSH2 0x2517 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x8F9 SWAP2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x995 JUMPI DUP6 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x927 SWAP2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x994 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98B SWAP1 PUSH2 0x2583 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH2 0x9E1 DUP2 DUP8 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x9AC SWAP2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST DUP9 PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x9BF SWAP2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST DUP10 PUSH1 0x60 ADD CALLDATALOAD DUP11 PUSH1 0x80 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x9D7 SWAP2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST DUP12 PUSH1 0xA0 ADD CALLDATALOAD PUSH2 0x1143 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xA0B SWAP2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xAE16A7B9F34EB013DDE3E7E431986599FF512137255EFCD247D5528A550DEEE7 DUP10 PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xA56 SWAP2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST DUP11 PUSH1 0x60 ADD CALLDATALOAD DUP12 PUSH1 0xA0 ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH2 0xA6F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP PUSH2 0xA82 PUSH2 0x15F7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xA8F PUSH2 0x1075 JUMP JUMPDEST DUP3 PUSH1 0xE0 ADD CALLDATALOAD TIMESTAMP LT PUSH2 0xAD5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xACC SWAP1 PUSH2 0x2626 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xAEA SWAP2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x0 PUSH2 0xAFC DUP7 PUSH2 0xE7B JUMP JUMPDEST SWAP1 POP PUSH1 0x7 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB5F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB56 SWAP1 PUSH2 0x2692 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xB72 SWAP2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBDF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD6 SWAP1 PUSH2 0x26FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBEB DUP4 DUP3 DUP8 DUP8 PUSH2 0x10BB JUMP JUMPDEST PUSH2 0xC2A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC21 SWAP1 PUSH2 0x276A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xCA2 DUP7 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xC6C SWAP2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST DUP4 DUP9 PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xC80 SWAP2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST DUP10 PUSH1 0x60 ADD CALLDATALOAD DUP11 PUSH1 0x80 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xC98 SWAP2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST DUP12 PUSH1 0xA0 ADD CALLDATALOAD PUSH2 0x1143 JUMP JUMPDEST DUP6 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xCB5 SWAP2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0xAE16A7B9F34EB013DDE3E7E431986599FF512137255EFCD247D5528A550DEEE7 DUP10 PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xD17 SWAP2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST DUP11 PUSH1 0x60 ADD CALLDATALOAD DUP12 PUSH1 0xA0 ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH2 0xD30 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP PUSH2 0xD43 PUSH2 0x15F7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xD76 PUSH2 0xDF4 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDE8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDDF SWAP2 SWAP1 PUSH2 0x207C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDF1 DUP2 PUSH2 0xF3B JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xDFC PUSH2 0x1600 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE1A PUSH2 0x6C4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE79 JUMPI PUSH2 0xE3D PUSH2 0x1600 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE70 SWAP2 SWAP1 PUSH2 0x207C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF34 PUSH32 0xBF903F52C02FFC68F1C2367D8D2F116D1A25163FE798CB658496619AB6B1BF2D DUP4 PUSH1 0x0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xEB4 SWAP2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST DUP5 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xEC7 SWAP2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST DUP6 PUSH1 0x40 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xEDA SWAP2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST DUP7 PUSH1 0x60 ADD CALLDATALOAD DUP8 PUSH1 0x80 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xEF2 SWAP2 SWAP1 PUSH2 0x1D04 JUMP JUMPDEST DUP9 PUSH1 0xA0 ADD CALLDATALOAD DUP10 PUSH1 0xC0 ADD CALLDATALOAD DUP11 PUSH1 0xE0 ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF19 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x278A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x1608 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1035 PUSH1 0x2 PUSH32 0x0 PUSH2 0x1622 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1070 PUSH1 0x3 PUSH32 0x0 PUSH2 0x1622 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x10B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1122 DUP6 DUP6 DUP6 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0x16D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP7 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1198 SWAP2 SWAP1 PUSH2 0x1DE3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11B5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11D9 SWAP2 SWAP1 PUSH2 0x282C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x122F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1226 SWAP1 PUSH2 0x28A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2710 PUSH1 0x5 SLOAD DUP5 PUSH2 0x1242 SWAP2 SWAP1 PUSH2 0x28C5 JUMP JUMPDEST PUSH2 0x124C SWAP2 SWAP1 PUSH2 0x2936 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x125C DUP9 DUP9 DUP8 PUSH2 0x16FE JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP5 DUP2 DUP5 PUSH2 0x126D SWAP2 SWAP1 PUSH2 0x2967 JUMP JUMPDEST GT ISZERO PUSH2 0x12AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A5 SWAP1 PUSH2 0x29E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP8 PUSH2 0x12BD SWAP2 SWAP1 PUSH2 0x2A07 JUMP JUMPDEST PUSH2 0x12C7 SWAP2 SWAP1 PUSH2 0x2A07 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP8 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP14 DUP14 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x130B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A3B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x132A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x134E SWAP2 SWAP1 PUSH2 0x2A9E JUMP JUMPDEST PUSH2 0x138D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1384 SWAP1 PUSH2 0x2B17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 GT ISZERO PUSH2 0x1478 JUMPI DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP14 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13F5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A3B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1414 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1438 SWAP2 SWAP1 PUSH2 0x2A9E JUMP JUMPDEST PUSH2 0x1477 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x146E SWAP1 PUSH2 0x2B83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 DUP4 GT DUP1 ISZERO PUSH2 0x14B5 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x157A JUMPI DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP14 DUP7 DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14F7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A3B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1516 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x153A SWAP2 SWAP1 PUSH2 0x2A9E JUMP JUMPDEST PUSH2 0x1579 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1570 SWAP1 PUSH2 0x2BEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42842E0E DUP13 DUP15 DUP13 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15B7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A3B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15E5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x161B PUSH2 0x1615 PUSH2 0x1796 JUMP JUMPDEST DUP4 PUSH2 0x184D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xFF PUSH1 0x0 SHL DUP4 EQ PUSH2 0x163F JUMPI PUSH2 0x1638 DUP4 PUSH2 0x188E JUMP JUMPDEST SWAP1 POP PUSH2 0x16CC JUMP JUMPDEST DUP2 DUP1 SLOAD PUSH2 0x164B SWAP1 PUSH2 0x2C3E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1677 SWAP1 PUSH2 0x2C3E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x16C4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1699 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x16C4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x16A7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x16E2 DUP7 DUP7 PUSH2 0x1902 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x16F2 DUP3 DUP3 PUSH2 0x195E JUMP JUMPDEST DUP3 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2A55205A DUP6 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x173C SWAP3 SWAP2 SWAP1 PUSH2 0x2436 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1775 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1772 SWAP2 SWAP1 PUSH2 0x2C84 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1785 JUMPI PUSH1 0x0 DUP1 SWAP2 POP SWAP2 POP PUSH2 0x178E JUMP JUMPDEST DUP2 DUP2 SWAP4 POP SWAP4 POP POP POP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x1812 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x183F JUMPI PUSH32 0x0 SWAP1 POP PUSH2 0x184A JUMP JUMPDEST PUSH2 0x1847 PUSH2 0x1AC2 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP4 PUSH1 0x2 DUP3 ADD MSTORE DUP3 PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x42 DUP2 KECCAK256 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x189B DUP4 PUSH2 0x1B58 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18BA JUMPI PUSH2 0x18B9 PUSH2 0x239B JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x18EC JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE DUP4 PUSH1 0x20 DUP3 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x41 DUP5 MLOAD SUB PUSH2 0x1947 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x20 DUP8 ADD MLOAD SWAP3 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x0 BYTE SWAP1 POP PUSH2 0x1939 DUP9 DUP3 DUP6 DUP6 PUSH2 0x1BA8 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x1957 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP6 MLOAD PUSH1 0x0 SHL SWAP3 POP SWAP3 POP SWAP3 POP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1972 JUMPI PUSH2 0x1971 PUSH2 0x2CC4 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1985 JUMPI PUSH2 0x1984 PUSH2 0x2CC4 JUMP JUMPDEST JUMPDEST SUB ISZERO PUSH2 0x1ABE JUMPI PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x199F JUMPI PUSH2 0x199E PUSH2 0x2CC4 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x19B2 JUMPI PUSH2 0x19B1 PUSH2 0x2CC4 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x19E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF645EEDF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x19FD JUMPI PUSH2 0x19FC PUSH2 0x2CC4 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1A10 JUMPI PUSH2 0x1A0F PUSH2 0x2CC4 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1A55 JUMPI DUP1 PUSH1 0x0 SHR PUSH1 0x40 MLOAD PUSH32 0xFCE698F700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A4C SWAP2 SWAP1 PUSH2 0x1DE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x1A68 JUMPI PUSH2 0x1A67 PUSH2 0x2CC4 JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1A7B JUMPI PUSH2 0x1A7A PUSH2 0x2CC4 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1ABD JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD78BCE0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AB4 SWAP2 SWAP1 PUSH2 0x2CF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH32 0x0 PUSH32 0x0 CHAINID ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1B3D SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 PUSH1 0x0 SHR AND SWAP1 POP PUSH1 0x1F DUP2 GT ISZERO PUSH2 0x1B9F JUMPI PUSH1 0x40 MLOAD PUSH32 0xB3512B0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 PUSH1 0x0 SHR GT ISZERO PUSH2 0x1BE8 JUMPI PUSH1 0x0 PUSH1 0x3 DUP6 SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1C92 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x1C0D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D7D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C2F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C83 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP PUSH2 0x1C92 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 SHL SWAP4 POP SWAP4 POP SWAP4 POP POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CD1 DUP3 PUSH2 0x1CA6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CE1 DUP2 PUSH2 0x1CC6 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CFE DUP2 PUSH2 0x1CD8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D1A JUMPI PUSH2 0x1D19 PUSH2 0x1C9C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D28 DUP5 DUP3 DUP6 ADD PUSH2 0x1CEF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D44 DUP2 PUSH2 0x1D31 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D4F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D61 DUP2 PUSH2 0x1D3B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D7D JUMPI PUSH2 0x1D7C PUSH2 0x1C9C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D8B DUP5 DUP3 DUP6 ADD PUSH2 0x1D52 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DA9 DUP2 PUSH2 0x1D94 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DC4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1DA0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DDD DUP2 PUSH2 0x1DCA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DF8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1DD4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E1A JUMPI PUSH2 0x1E19 PUSH2 0x1DFE JUMP JUMPDEST JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E3A JUMPI PUSH2 0x1E39 PUSH2 0x1C9C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E48 DUP5 DUP3 DUP6 ADD PUSH2 0x1E03 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E86 DUP2 PUSH2 0x1E51 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1EC6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1EAB JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EEE DUP3 PUSH2 0x1E8C JUMP JUMPDEST PUSH2 0x1EF8 DUP2 DUP6 PUSH2 0x1E97 JUMP JUMPDEST SWAP4 POP PUSH2 0x1F08 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1EA8 JUMP JUMPDEST PUSH2 0x1F11 DUP2 PUSH2 0x1ED2 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F25 DUP2 PUSH2 0x1CC6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1F34 DUP2 PUSH2 0x1D31 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F6F DUP2 PUSH2 0x1DCA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F81 DUP4 DUP4 PUSH2 0x1F66 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FA5 DUP3 PUSH2 0x1F3A JUMP JUMPDEST PUSH2 0x1FAF DUP2 DUP6 PUSH2 0x1F45 JUMP JUMPDEST SWAP4 POP PUSH2 0x1FBA DUP4 PUSH2 0x1F56 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1FEB JUMPI DUP2 MLOAD PUSH2 0x1FD2 DUP9 DUP3 PUSH2 0x1F75 JUMP JUMPDEST SWAP8 POP PUSH2 0x1FDD DUP4 PUSH2 0x1F8D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1FBE JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x200D PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x1E7D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x201F DUP2 DUP10 PUSH2 0x1EE3 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2033 DUP2 DUP9 PUSH2 0x1EE3 JUMP JUMPDEST SWAP1 POP PUSH2 0x2042 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x1DD4 JUMP JUMPDEST PUSH2 0x204F PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x1F1C JUMP JUMPDEST PUSH2 0x205C PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x1F2B JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x206E DUP2 DUP5 PUSH2 0x1F9A JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2091 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F1C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20A0 DUP2 PUSH2 0x1DCA JUMP JUMPDEST DUP2 EQ PUSH2 0x20AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x20BD DUP2 PUSH2 0x2097 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20D9 JUMPI PUSH2 0x20D8 PUSH2 0x1C9C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20E7 DUP5 DUP3 DUP6 ADD PUSH2 0x20AE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2115 JUMPI PUSH2 0x2114 PUSH2 0x20F0 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2132 JUMPI PUSH2 0x2131 PUSH2 0x20F5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x214E JUMPI PUSH2 0x214D PUSH2 0x20FA JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x120 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x216F JUMPI PUSH2 0x216E PUSH2 0x1C9C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x217D DUP7 DUP3 DUP8 ADD PUSH2 0x1E03 JUMP JUMPDEST SWAP4 POP POP PUSH2 0x100 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x219F JUMPI PUSH2 0x219E PUSH2 0x1CA1 JUMP JUMPDEST JUMPDEST PUSH2 0x21AB DUP7 DUP3 DUP8 ADD PUSH2 0x20FF JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x526563697069656E742063616E6E6F74206265207A65726F0000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21ED PUSH1 0x18 DUP4 PUSH2 0x1E97 JUMP JUMPDEST SWAP2 POP PUSH2 0x21F8 DUP3 PUSH2 0x21B7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x221C DUP2 PUSH2 0x21E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2238 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1F1C JUMP JUMPDEST PUSH2 0x2245 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F1C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E6F74206120706172747920746F20746865206F726465720000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2282 PUSH1 0x18 DUP4 PUSH2 0x1E97 JUMP JUMPDEST SWAP2 POP PUSH2 0x228D DUP3 PUSH2 0x224C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22B1 DUP2 PUSH2 0x2275 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F726465723A20416C72656164792068616E646C656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22EE PUSH1 0x16 DUP4 PUSH2 0x1E97 JUMP JUMPDEST SWAP2 POP PUSH2 0x22F9 DUP3 PUSH2 0x22B8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x231D DUP2 PUSH2 0x22E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x235E DUP3 PUSH2 0x1DCA JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2390 JUMPI PUSH2 0x238F PUSH2 0x2324 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4665652070657263656E742063616E6E6F742065786365656420313030303000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2400 PUSH1 0x1F DUP4 PUSH2 0x1E97 JUMP JUMPDEST SWAP2 POP PUSH2 0x240B DUP3 PUSH2 0x23CA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x242F DUP2 PUSH2 0x23F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x244B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1DD4 JUMP JUMPDEST PUSH2 0x2458 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1DD4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F726465723A2045787069726564000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2495 PUSH1 0xE DUP4 PUSH2 0x1E97 JUMP JUMPDEST SWAP2 POP PUSH2 0x24A0 DUP3 PUSH2 0x245F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24C4 DUP2 PUSH2 0x2488 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F726465723A20496E76616C6964207369676E61747572650000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2501 PUSH1 0x18 DUP4 PUSH2 0x1E97 JUMP JUMPDEST SWAP2 POP PUSH2 0x250C DUP3 PUSH2 0x24CB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2530 DUP2 PUSH2 0x24F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F726465723A204E6F7420666F7220796F750000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x256D PUSH1 0x12 DUP4 PUSH2 0x1E97 JUMP JUMPDEST SWAP2 POP PUSH2 0x2578 DUP3 PUSH2 0x2537 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x259C DUP2 PUSH2 0x2560 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x25B8 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1F1C JUMP JUMPDEST PUSH2 0x25C5 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1DD4 JUMP JUMPDEST PUSH2 0x25D2 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1DD4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4F666665723A2045787069726564000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2610 PUSH1 0xE DUP4 PUSH2 0x1E97 JUMP JUMPDEST SWAP2 POP PUSH2 0x261B DUP3 PUSH2 0x25DA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x263F DUP2 PUSH2 0x2603 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F666665723A20416C72656164792068616E646C656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x267C PUSH1 0x16 DUP4 PUSH2 0x1E97 JUMP JUMPDEST SWAP2 POP PUSH2 0x2687 DUP3 PUSH2 0x2646 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26AB DUP2 PUSH2 0x266F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F666665723A204E6F7420666F7220796F750000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26E8 PUSH1 0x12 DUP4 PUSH2 0x1E97 JUMP JUMPDEST SWAP2 POP PUSH2 0x26F3 DUP3 PUSH2 0x26B2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2717 DUP2 PUSH2 0x26DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F666665723A20496E76616C6964206275796572207369676E61747572650000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2754 PUSH1 0x1E DUP4 PUSH2 0x1E97 JUMP JUMPDEST SWAP2 POP PUSH2 0x275F DUP3 PUSH2 0x271E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2783 DUP2 PUSH2 0x2747 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x27A0 PUSH1 0x0 DUP4 ADD DUP13 PUSH2 0x1F2B JUMP JUMPDEST PUSH2 0x27AD PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x1F1C JUMP JUMPDEST PUSH2 0x27BA PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x1F1C JUMP JUMPDEST PUSH2 0x27C7 PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x1F1C JUMP JUMPDEST PUSH2 0x27D4 PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x1DD4 JUMP JUMPDEST PUSH2 0x27E1 PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x1F1C JUMP JUMPDEST PUSH2 0x27EE PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x1DD4 JUMP JUMPDEST PUSH2 0x27FB PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x1DD4 JUMP JUMPDEST PUSH2 0x2809 PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x1DD4 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2826 DUP2 PUSH2 0x1CD8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2842 JUMPI PUSH2 0x2841 PUSH2 0x1C9C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2850 DUP5 DUP3 DUP6 ADD PUSH2 0x2817 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x53656C6C6572206E6F206C6F6E676572206F776E73204E465400000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x288F PUSH1 0x19 DUP4 PUSH2 0x1E97 JUMP JUMPDEST SWAP2 POP PUSH2 0x289A DUP3 PUSH2 0x2859 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28BE DUP2 PUSH2 0x2882 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28D0 DUP3 PUSH2 0x1DCA JUMP JUMPDEST SWAP2 POP PUSH2 0x28DB DUP4 PUSH2 0x1DCA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x28E9 DUP2 PUSH2 0x1DCA JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2900 JUMPI PUSH2 0x28FF PUSH2 0x2324 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2941 DUP3 PUSH2 0x1DCA JUMP JUMPDEST SWAP2 POP PUSH2 0x294C DUP4 PUSH2 0x1DCA JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x295C JUMPI PUSH2 0x295B PUSH2 0x2907 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2972 DUP3 PUSH2 0x1DCA JUMP JUMPDEST SWAP2 POP PUSH2 0x297D DUP4 PUSH2 0x1DCA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2995 JUMPI PUSH2 0x2994 PUSH2 0x2324 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4665657320657863656564207072696365000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29D1 PUSH1 0x11 DUP4 PUSH2 0x1E97 JUMP JUMPDEST SWAP2 POP PUSH2 0x29DC DUP3 PUSH2 0x299B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A00 DUP2 PUSH2 0x29C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A12 DUP3 PUSH2 0x1DCA JUMP JUMPDEST SWAP2 POP PUSH2 0x2A1D DUP4 PUSH2 0x1DCA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2A35 JUMPI PUSH2 0x2A34 PUSH2 0x2324 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2A50 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1F1C JUMP JUMPDEST PUSH2 0x2A5D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1F1C JUMP JUMPDEST PUSH2 0x2A6A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1DD4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2A7B DUP2 PUSH2 0x1D94 JUMP JUMPDEST DUP2 EQ PUSH2 0x2A86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2A98 DUP2 PUSH2 0x2A72 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2AB4 JUMPI PUSH2 0x2AB3 PUSH2 0x1C9C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2AC2 DUP5 DUP3 DUP6 ADD PUSH2 0x2A89 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E7366657220746F2073656C6C6572206661696C656400000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B01 PUSH1 0x19 DUP4 PUSH2 0x1E97 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B0C DUP3 PUSH2 0x2ACB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B30 DUP2 PUSH2 0x2AF4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x506C6174666F726D20666565207472616E73666572206661696C656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B6D PUSH1 0x1C DUP4 PUSH2 0x1E97 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B78 DUP3 PUSH2 0x2B37 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B9C DUP2 PUSH2 0x2B60 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x526F79616C747920666565207472616E73666572206661696C65640000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BD9 PUSH1 0x1B DUP4 PUSH2 0x1E97 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BE4 DUP3 PUSH2 0x2BA3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C08 DUP2 PUSH2 0x2BCC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2C56 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2C69 JUMPI PUSH2 0x2C68 PUSH2 0x2C0F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2C7E DUP2 PUSH2 0x2097 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2C9B JUMPI PUSH2 0x2C9A PUSH2 0x1C9C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2CA9 DUP6 DUP3 DUP7 ADD PUSH2 0x2817 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2CBA DUP6 DUP3 DUP7 ADD PUSH2 0x2C6F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2D08 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F2B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2D23 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1F2B JUMP JUMPDEST PUSH2 0x2D30 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1F2B JUMP JUMPDEST PUSH2 0x2D3D PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1F2B JUMP JUMPDEST PUSH2 0x2D4A PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1DD4 JUMP JUMPDEST PUSH2 0x2D57 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1F1C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D77 DUP2 PUSH2 0x2D61 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2D92 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1F2B JUMP JUMPDEST PUSH2 0x2D9F PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2D6E JUMP JUMPDEST PUSH2 0x2DAC PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1F2B JUMP JUMPDEST PUSH2 0x2DB9 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1F2B JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY DUP16 LOG1 BASEFEE PREVRANDAO 0x26 SHL 0xEE CALLDATALOAD 0x5E 0xAC LOG0 LT 0xC EXTCODEHASH LOG0 PUSH13 0x5B1C92B1DDFD82E1E62BDC3848 ADDMOD PUSH32 0x64736F6C63430008140033000000000000000000000000000000000000000000 ","sourceMap":"758:9020:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3478:281;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1874:43;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1749:45;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6671:497;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7295:76;;;:::i;:::-;;2293:101:0;;;:::i;:::-;;5243:557:12;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;1592:33:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3177:295:18;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4037:1156;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5445:1087;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1551:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3478:281:18;1531:13:0;:11;:13::i;:::-;3596:1:18::1;3571:27;;:13;:27;;::::0;3563:64:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;3642;3670:20;;;;;;;;;;;3692:13;3642:64;;;;;;;:::i;:::-;;;;;;;;3739:13;3716:20;;:36;;;;;;;;;;;;;;;;;;3478:281:::0;:::o;1874:43::-;;;;;;;;;;;;;;;;;;;;;;:::o;1749:45::-;;;;;;;;;;;;;;;;;:::o;6671:497::-;6733:12;6748:10;6733:25;;6862:5;:12;;;;;;;;;;:::i;:::-;6854:20;;:4;:20;;;:43;;;;6886:5;:11;;;;;;;;;;:::i;:::-;6878:19;;:4;:19;;;6854:43;6846:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;6937:17;6957;6968:5;6957:10;:17::i;:::-;6937:37;;6993:11;:22;7005:9;6993:22;;;;;;;;;;;;;;;;;;;;;6992:23;6984:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;7078:4;7053:11;:22;7065:9;7053:22;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;7141:5;:13;;;7123:5;:16;;;;;;;;;;:::i;:::-;7097:64;;7112:9;7097:64;7156:4;7097:64;;;;;;:::i;:::-;;;;;;;;6723:445;;6671:497;:::o;7295:76::-;7340:10;:22;7351:10;7340:22;;;;;;;;;;;;;;;;:24;;;;;;;;;:::i;:::-;;;;;;7295:76::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;5243:557:12:-;5341:13;5368:18;5400:21;5435:15;5464:25;5503:12;5529:27;5632:13;:11;:13::i;:::-;5659:16;:14;:16::i;:::-;5689:13;5724:4;5751:1;5743:10;;5781:1;5767:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5581:212;;;;;;;;;;;;;;;;;;;;;5243:557;;;;;;;:::o;1592:33:18:-;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;3177:295:18:-;1531:13:0;:11;:13::i;:::-;3287:5:18::1;3269:14;:23;;3261:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;3359:61;3385:18;;3405:14;3359:61;;;;;;;:::i;:::-;;;;;;;;3451:14;3430:18;:35;;;;3177:295:::0;:::o;4037:1156::-;2500:21:7;:19;:21::i;:::-;4204:5:18::1;:14;;;4186:15;:32;4178:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;4256:14;4273:5;:12;;;;;;;;;;:::i;:::-;4256:29;;4295:17;4315;4326:5;4315:10;:17::i;:::-;4295:37;;4400:11;:22;4412:9;4400:22;;;;;;;;;;;;;;;;;;;;;4399:23;4391:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;4513:46;4530:6;4538:9;4549;;4513:16;:46::i;:::-;4505:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;4663:4;4638:11;:22;4650:9;4638:22;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;4711:13;4727:10;4711:26;;4805:1;4782:25;;:5;:11;;;;;;;;;;:::i;:::-;:25;;;4778:153;;4840:5;:11;;;;;;;;;;:::i;:::-;4831:20;;:5;:20;;;4823:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;4778:153;4974:96;4988:5;4995;:12;;;;;;;;;;:::i;:::-;5009:5;:16;;;;;;;;;;:::i;:::-;5027:5;:13;;;5042:5;:14;;;;;;;;;;:::i;:::-;5058:5;:11;;;4974:13;:96::i;:::-;5134:5;5094:92;;5120:5;:12;;;;;;;;;;:::i;:::-;5094:92;;5109:9;5094:92;5141:5;:16;;;;;;;;;;:::i;:::-;5159:5;:13;;;5174:5;:11;;;5094:92;;;;;;;;:::i;:::-;;;;;;;;4129:1064;;;2542:20:7::0;:18;:20::i;:::-;4037:1156:18;;;:::o;5445:1087::-;2500:21:7;:19;:21::i;:::-;5612:5:18::1;:14;;;5594:15;:32;5586:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;5656:14;5673:5;:11;;;;;;;;;;:::i;:::-;5656:28;;5734:14;5751:10;5734:27;;5802:17;5822;5833:5;5822:10;:17::i;:::-;5802:37;;5892:11;:22;5904:9;5892:22;;;;;;;;;;;;;;;;;;;;;5891:23;5883:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;6027:5;:12;;;;;;;;;;:::i;:::-;6017:22;;:6;:22;;;6009:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;6117:46;6134:6;6142:9;6153;;6117:16;:46::i;:::-;6109:89;;;;;;;;;;;;:::i;:::-;;;;;;;;;6273:4;6248:11;:22;6260:9;6248:22;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;6321:96;6335:5;:11;;;;;;;;;;:::i;:::-;6348:6;6356:5;:16;;;;;;;;;;:::i;:::-;6374:5;:13;;;6389:5;:14;;;;;;;;;;:::i;:::-;6405:5;:11;;;6321:13;:96::i;:::-;6467:5;:11;;;;;;;;;;:::i;:::-;6433:92;;6459:6;6433:92;;6448:9;6433:92;6480:5;:16;;;;;;;;;;:::i;:::-;6498:5;:13;;;6513:5;:11;;;6433:92;;;;;;;;:::i;:::-;;;;;;;;5537:995;;;2542:20:7::0;:18;:20::i;:::-;5445:1087:18;;;:::o;1551:35::-;;;;;;;;;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;7411:390:18:-;7476:7;7502:292;2473:159;7582:5;:12;;;;;;;;;;:::i;:::-;7608:5;:11;;;;;;;;;;:::i;:::-;7633:5;:16;;;;;;;;;;:::i;:::-;7663:5;:13;;;7690:5;:14;;;;;;;;;;:::i;:::-;7718:5;:11;;;7743:5;:11;;;7768:5;:14;;;7529:263;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7519:274;;;;;;7502:16;:292::i;:::-;7495:299;;7411:390;;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;6120:126:12:-;6166:13;6198:41;6225:13;6198:5;:26;;:41;;;;:::i;:::-;6191:48;;6120:126;:::o;6572:135::-;6621:13;6653:47;6683:16;6653:8;:29;;:47;;;;:::i;:::-;6646:54;;6572:135;:::o;2575:307:7:-;1899:1;2702:7;;:18;2698:86;;2743:30;;;;;;;;;;;;;;2698:86;1899:1;2858:7;:17;;;;2575:307::o;7807:179:18:-;7914:4;7973:6;7937:42;;:32;7951:6;7959:9;;7937:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:13;:32::i;:::-;:42;;;7930:49;;7807:179;;;;;;:::o;7992:1444::-;8251:11;8273:10;8251:33;;8326:6;8302:30;;:3;:11;;;8314:7;8302:20;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:30;;;8294:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;8400:19;8453:5;8431:18;;8423:5;:26;;;;:::i;:::-;8422:36;;;;:::i;:::-;8400:58;;8469:24;8495:18;8517:43;8533:10;8545:7;8554:5;8517:15;:43::i;:::-;8468:92;;;;8606:5;8592:10;8578:11;:24;;;;:::i;:::-;:33;;8570:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;8643:22;8690:10;8676:11;8668:5;:19;;;;:::i;:::-;:32;;;;:::i;:::-;8643:57;;8767:12;8789:8;8767:31;;8942:5;:18;;;8961:5;8968:6;8976:14;8942:49;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8934:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;9049:1;9035:11;:15;9031:127;;;9062:5;:18;;;9081:5;9088:20;;;;;;;;;;;9110:11;9062:60;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9054:101;;;;;;;;;;;;:::i;:::-;;;;;;;;;9031:127;9184:1;9171:10;:14;:48;;;;;9217:1;9189:30;;:16;:30;;;;9171:48;9167:154;;;9231:5;:18;;;9250:5;9257:16;9275:10;9231:55;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9223:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;9167:154;9385:3;:20;;;9406:6;9414:5;9421:7;9385:44;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8125:1311;;;;;;7992:1444;;;;;;:::o;2888:208:7:-;1857:1;3068:7;:21;;;;2888:208::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;5017:176:12:-;5094:7;5120:66;5153:20;:18;:20::i;:::-;5175:10;5120:32;:66::i;:::-;5113:73;;5017:176;;;:::o;3368:267:8:-;3462:13;1390:66;3520:17;;3510:5;3491:46;3487:142;;3560:15;3569:5;3560:8;:15::i;:::-;3553:22;;;;3487:142;3613:5;3606:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3368:267;;;;;:::o;3714:255:11:-;3792:7;3812:17;3831:18;3851:16;3871:27;3882:4;3888:9;3871:10;:27::i;:::-;3811:87;;;;;;3908:28;3920:5;3927:8;3908:11;:28::i;:::-;3953:9;3946:16;;;;;3714:255;;;;:::o;9442:334:18:-;9545:7;9554;9586:11;9577:33;;;9611:8;9621:6;9577:51;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;9573:197;;9761:1;9765;9745:22;;;;;;9573:197;9701:8;9711:13;9693:32;;;;;;9442:334;;;;;;;:::o;3945:262:12:-;3998:7;4038:11;4021:28;;4029:4;4021:28;;;:63;;;;;4070:14;4053:13;:31;4021:63;4017:184;;;4107:22;4100:29;;;;4017:184;4167:23;:21;:23::i;:::-;4160:30;;3945:262;;:::o;3874:374:13:-;3967:14;4049:4;4043:11;4079:10;4074:3;4067:23;4126:15;4119:4;4114:3;4110:14;4103:39;4178:10;4171:4;4166:3;4162:14;4155:34;4227:4;4222:3;4212:20;4202:30;;4018:224;3874:374;;;;:::o;2078:378:8:-;2137:13;2162:11;2176:16;2187:4;2176:10;:16::i;:::-;2162:30;;2280:17;2311:2;2300:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2280:34;;2375:3;2370;2363:16;2415:4;2408;2403:3;2399:14;2392:28;2446:3;2439:10;;;;2078:378;;;:::o;2129:778:11:-;2232:17;2251:16;2269:14;2319:2;2299:9;:16;:22;2295:606;;2337:9;2360;2383:7;2604:4;2593:9;2589:20;2583:27;2578:32;;2653:4;2642:9;2638:20;2632:27;2627:32;;2710:4;2699:9;2695:20;2689:27;2686:1;2681:36;2676:41;;2751:25;2762:4;2768:1;2771;2774;2751:10;:25::i;:::-;2744:32;;;;;;;;;;;2295:606;2823:1;2827:35;2872:9;:16;2864:25;;2807:83;;;;;;2129:778;;;;;;:::o;7280:532::-;7375:20;7366:29;;;;;;;;:::i;:::-;;:5;:29;;;;;;;;:::i;:::-;;;7362:444;7411:7;7362:444;7471:29;7462:38;;;;;;;;:::i;:::-;;:5;:38;;;;;;;;:::i;:::-;;;7458:348;;7523:23;;;;;;;;;;;;;;7458:348;7576:35;7567:44;;;;;;;;:::i;:::-;;:5;:44;;;;;;;;:::i;:::-;;;7563:243;;7670:8;7662:17;;7634:46;;;;;;;;;;;:::i;:::-;;;;;;;;7563:243;7710:30;7701:39;;;;;;;;:::i;:::-;;:5;:39;;;;;;;;:::i;:::-;;;7697:109;;7786:8;7763:32;;;;;;;;;;;:::i;:::-;;;;;;;;7697:109;7280:532;;;:::o;4213:179:12:-;4268:7;2079:95;4326:11;4339:14;4355:13;4378:4;4304:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4294:91;;;;;;4287:98;;4213:179;:::o;2528:245:8:-;2589:7;2608:14;2661:4;2652;2625:33;;:40;2608:57;;2688:2;2679:6;:11;2675:69;;;2713:20;;;;;;;;;;;;;;2675:69;2760:6;2753:13;;;2528:245;;;:::o;5203:1551:11:-;5329:17;5348:16;5366:14;6283:66;6278:1;6270:10;;:79;6266:164;;;6381:1;6385:30;6417:1;6365:54;;;;;;;;6266:164;6524:14;6541:24;6551:4;6557:1;6560;6563;6541:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6524:41;;6597:1;6579:20;;:6;:20;;;6575:113;;6631:1;6635:29;6674:1;6666:10;;6615:62;;;;;;;;;6575:113;6706:6;6714:20;6744:1;6736:10;;6698:49;;;;;;;5203:1551;;;;;;;;;:::o;88:117:19:-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:122::-;1332:24;1350:5;1332:24;:::i;:::-;1325:5;1322:35;1312:63;;1371:1;1368;1361:12;1312:63;1259:122;:::o;1387:139::-;1433:5;1471:6;1458:20;1449:29;;1487:33;1514:5;1487:33;:::i;:::-;1387:139;;;;:::o;1532:329::-;1591:6;1640:2;1628:9;1619:7;1615:23;1611:32;1608:119;;;1646:79;;:::i;:::-;1608:119;1766:1;1791:53;1836:7;1827:6;1816:9;1812:22;1791:53;:::i;:::-;1781:63;;1737:117;1532:329;;;;:::o;1867:90::-;1901:7;1944:5;1937:13;1930:21;1919:32;;1867:90;;;:::o;1963:109::-;2044:21;2059:5;2044:21;:::i;:::-;2039:3;2032:34;1963:109;;:::o;2078:210::-;2165:4;2203:2;2192:9;2188:18;2180:26;;2216:65;2278:1;2267:9;2263:17;2254:6;2216:65;:::i;:::-;2078:210;;;;:::o;2294:77::-;2331:7;2360:5;2349:16;;2294:77;;;:::o;2377:118::-;2464:24;2482:5;2464:24;:::i;:::-;2459:3;2452:37;2377:118;;:::o;2501:222::-;2594:4;2632:2;2621:9;2617:18;2609:26;;2645:71;2713:1;2702:9;2698:17;2689:6;2645:71;:::i;:::-;2501:222;;;;:::o;2729:117::-;2838:1;2835;2828:12;2884:230;2955:5;2996:3;2987:6;2982:3;2978:16;2974:26;2971:113;;;3003:79;;:::i;:::-;2971:113;3102:6;3093:15;;2884:230;;;;:::o;3120:380::-;3204:6;3253:3;3241:9;3232:7;3228:23;3224:33;3221:120;;;3260:79;;:::i;:::-;3221:120;3380:1;3405:78;3475:7;3466:6;3455:9;3451:22;3405:78;:::i;:::-;3395:88;;3351:142;3120:380;;;;:::o;3506:149::-;3542:7;3582:66;3575:5;3571:78;3560:89;;3506:149;;;:::o;3661:115::-;3746:23;3763:5;3746:23;:::i;:::-;3741:3;3734:36;3661:115;;:::o;3782:99::-;3834:6;3868:5;3862:12;3852:22;;3782:99;;;:::o;3887:169::-;3971:11;4005:6;4000:3;3993:19;4045:4;4040:3;4036:14;4021:29;;3887:169;;;;:::o;4062:246::-;4143:1;4153:113;4167:6;4164:1;4161:13;4153:113;;;4252:1;4247:3;4243:11;4237:18;4233:1;4228:3;4224:11;4217:39;4189:2;4186:1;4182:10;4177:15;;4153:113;;;4300:1;4291:6;4286:3;4282:16;4275:27;4124:184;4062:246;;;:::o;4314:102::-;4355:6;4406:2;4402:7;4397:2;4390:5;4386:14;4382:28;4372:38;;4314:102;;;:::o;4422:377::-;4510:3;4538:39;4571:5;4538:39;:::i;:::-;4593:71;4657:6;4652:3;4593:71;:::i;:::-;4586:78;;4673:65;4731:6;4726:3;4719:4;4712:5;4708:16;4673:65;:::i;:::-;4763:29;4785:6;4763:29;:::i;:::-;4758:3;4754:39;4747:46;;4514:285;4422:377;;;;:::o;4805:118::-;4892:24;4910:5;4892:24;:::i;:::-;4887:3;4880:37;4805:118;;:::o;4929:::-;5016:24;5034:5;5016:24;:::i;:::-;5011:3;5004:37;4929:118;;:::o;5053:114::-;5120:6;5154:5;5148:12;5138:22;;5053:114;;;:::o;5173:184::-;5272:11;5306:6;5301:3;5294:19;5346:4;5341:3;5337:14;5322:29;;5173:184;;;;:::o;5363:132::-;5430:4;5453:3;5445:11;;5483:4;5478:3;5474:14;5466:22;;5363:132;;;:::o;5501:108::-;5578:24;5596:5;5578:24;:::i;:::-;5573:3;5566:37;5501:108;;:::o;5615:179::-;5684:10;5705:46;5747:3;5739:6;5705:46;:::i;:::-;5783:4;5778:3;5774:14;5760:28;;5615:179;;;;:::o;5800:113::-;5870:4;5902;5897:3;5893:14;5885:22;;5800:113;;;:::o;5949:732::-;6068:3;6097:54;6145:5;6097:54;:::i;:::-;6167:86;6246:6;6241:3;6167:86;:::i;:::-;6160:93;;6277:56;6327:5;6277:56;:::i;:::-;6356:7;6387:1;6372:284;6397:6;6394:1;6391:13;6372:284;;;6473:6;6467:13;6500:63;6559:3;6544:13;6500:63;:::i;:::-;6493:70;;6586:60;6639:6;6586:60;:::i;:::-;6576:70;;6432:224;6419:1;6416;6412:9;6407:14;;6372:284;;;6376:14;6672:3;6665:10;;6073:608;;;5949:732;;;;:::o;6687:1215::-;7036:4;7074:3;7063:9;7059:19;7051:27;;7088:69;7154:1;7143:9;7139:17;7130:6;7088:69;:::i;:::-;7204:9;7198:4;7194:20;7189:2;7178:9;7174:18;7167:48;7232:78;7305:4;7296:6;7232:78;:::i;:::-;7224:86;;7357:9;7351:4;7347:20;7342:2;7331:9;7327:18;7320:48;7385:78;7458:4;7449:6;7385:78;:::i;:::-;7377:86;;7473:72;7541:2;7530:9;7526:18;7517:6;7473:72;:::i;:::-;7555:73;7623:3;7612:9;7608:19;7599:6;7555:73;:::i;:::-;7638;7706:3;7695:9;7691:19;7682:6;7638:73;:::i;:::-;7759:9;7753:4;7749:20;7743:3;7732:9;7728:19;7721:49;7787:108;7890:4;7881:6;7787:108;:::i;:::-;7779:116;;6687:1215;;;;;;;;;;:::o;7908:222::-;8001:4;8039:2;8028:9;8024:18;8016:26;;8052:71;8120:1;8109:9;8105:17;8096:6;8052:71;:::i;:::-;7908:222;;;;:::o;8136:122::-;8209:24;8227:5;8209:24;:::i;:::-;8202:5;8199:35;8189:63;;8248:1;8245;8238:12;8189:63;8136:122;:::o;8264:139::-;8310:5;8348:6;8335:20;8326:29;;8364:33;8391:5;8364:33;:::i;:::-;8264:139;;;;:::o;8409:329::-;8468:6;8517:2;8505:9;8496:7;8492:23;8488:32;8485:119;;;8523:79;;:::i;:::-;8485:119;8643:1;8668:53;8713:7;8704:6;8693:9;8689:22;8668:53;:::i;:::-;8658:63;;8614:117;8409:329;;;;:::o;8744:117::-;8853:1;8850;8843:12;8867:117;8976:1;8973;8966:12;8990:117;9099:1;9096;9089:12;9126:552;9183:8;9193:6;9243:3;9236:4;9228:6;9224:17;9220:27;9210:122;;9251:79;;:::i;:::-;9210:122;9364:6;9351:20;9341:30;;9394:18;9386:6;9383:30;9380:117;;;9416:79;;:::i;:::-;9380:117;9530:4;9522:6;9518:17;9506:29;;9584:3;9576:4;9568:6;9564:17;9554:8;9550:32;9547:41;9544:128;;;9591:79;;:::i;:::-;9544:128;9126:552;;;;;:::o;9684:724::-;9788:6;9796;9804;9853:3;9841:9;9832:7;9828:23;9824:33;9821:120;;;9860:79;;:::i;:::-;9821:120;9980:1;10005:78;10075:7;10066:6;10055:9;10051:22;10005:78;:::i;:::-;9995:88;;9951:142;10160:3;10149:9;10145:19;10132:33;10192:18;10184:6;10181:30;10178:117;;;10214:79;;:::i;:::-;10178:117;10327:64;10383:7;10374:6;10363:9;10359:22;10327:64;:::i;:::-;10309:82;;;;10103:298;9684:724;;;;;:::o;10414:174::-;10554:26;10550:1;10542:6;10538:14;10531:50;10414:174;:::o;10594:366::-;10736:3;10757:67;10821:2;10816:3;10757:67;:::i;:::-;10750:74;;10833:93;10922:3;10833:93;:::i;:::-;10951:2;10946:3;10942:12;10935:19;;10594:366;;;:::o;10966:419::-;11132:4;11170:2;11159:9;11155:18;11147:26;;11219:9;11213:4;11209:20;11205:1;11194:9;11190:17;11183:47;11247:131;11373:4;11247:131;:::i;:::-;11239:139;;10966:419;;;:::o;11391:332::-;11512:4;11550:2;11539:9;11535:18;11527:26;;11563:71;11631:1;11620:9;11616:17;11607:6;11563:71;:::i;:::-;11644:72;11712:2;11701:9;11697:18;11688:6;11644:72;:::i;:::-;11391:332;;;;;:::o;11729:174::-;11869:26;11865:1;11857:6;11853:14;11846:50;11729:174;:::o;11909:366::-;12051:3;12072:67;12136:2;12131:3;12072:67;:::i;:::-;12065:74;;12148:93;12237:3;12148:93;:::i;:::-;12266:2;12261:3;12257:12;12250:19;;11909:366;;;:::o;12281:419::-;12447:4;12485:2;12474:9;12470:18;12462:26;;12534:9;12528:4;12524:20;12520:1;12509:9;12505:17;12498:47;12562:131;12688:4;12562:131;:::i;:::-;12554:139;;12281:419;;;:::o;12706:172::-;12846:24;12842:1;12834:6;12830:14;12823:48;12706:172;:::o;12884:366::-;13026:3;13047:67;13111:2;13106:3;13047:67;:::i;:::-;13040:74;;13123:93;13212:3;13123:93;:::i;:::-;13241:2;13236:3;13232:12;13225:19;;12884:366;;;:::o;13256:419::-;13422:4;13460:2;13449:9;13445:18;13437:26;;13509:9;13503:4;13499:20;13495:1;13484:9;13480:17;13473:47;13537:131;13663:4;13537:131;:::i;:::-;13529:139;;13256:419;;;:::o;13681:180::-;13729:77;13726:1;13719:88;13826:4;13823:1;13816:15;13850:4;13847:1;13840:15;13867:233;13906:3;13929:24;13947:5;13929:24;:::i;:::-;13920:33;;13975:66;13968:5;13965:77;13962:103;;14045:18;;:::i;:::-;13962:103;14092:1;14085:5;14081:13;14074:20;;13867:233;;;:::o;14106:180::-;14154:77;14151:1;14144:88;14251:4;14248:1;14241:15;14275:4;14272:1;14265:15;14292:181;14432:33;14428:1;14420:6;14416:14;14409:57;14292:181;:::o;14479:366::-;14621:3;14642:67;14706:2;14701:3;14642:67;:::i;:::-;14635:74;;14718:93;14807:3;14718:93;:::i;:::-;14836:2;14831:3;14827:12;14820:19;;14479:366;;;:::o;14851:419::-;15017:4;15055:2;15044:9;15040:18;15032:26;;15104:9;15098:4;15094:20;15090:1;15079:9;15075:17;15068:47;15132:131;15258:4;15132:131;:::i;:::-;15124:139;;14851:419;;;:::o;15276:332::-;15397:4;15435:2;15424:9;15420:18;15412:26;;15448:71;15516:1;15505:9;15501:17;15492:6;15448:71;:::i;:::-;15529:72;15597:2;15586:9;15582:18;15573:6;15529:72;:::i;:::-;15276:332;;;;;:::o;15614:164::-;15754:16;15750:1;15742:6;15738:14;15731:40;15614:164;:::o;15784:366::-;15926:3;15947:67;16011:2;16006:3;15947:67;:::i;:::-;15940:74;;16023:93;16112:3;16023:93;:::i;:::-;16141:2;16136:3;16132:12;16125:19;;15784:366;;;:::o;16156:419::-;16322:4;16360:2;16349:9;16345:18;16337:26;;16409:9;16403:4;16399:20;16395:1;16384:9;16380:17;16373:47;16437:131;16563:4;16437:131;:::i;:::-;16429:139;;16156:419;;;:::o;16581:174::-;16721:26;16717:1;16709:6;16705:14;16698:50;16581:174;:::o;16761:366::-;16903:3;16924:67;16988:2;16983:3;16924:67;:::i;:::-;16917:74;;17000:93;17089:3;17000:93;:::i;:::-;17118:2;17113:3;17109:12;17102:19;;16761:366;;;:::o;17133:419::-;17299:4;17337:2;17326:9;17322:18;17314:26;;17386:9;17380:4;17376:20;17372:1;17361:9;17357:17;17350:47;17414:131;17540:4;17414:131;:::i;:::-;17406:139;;17133:419;;;:::o;17558:168::-;17698:20;17694:1;17686:6;17682:14;17675:44;17558:168;:::o;17732:366::-;17874:3;17895:67;17959:2;17954:3;17895:67;:::i;:::-;17888:74;;17971:93;18060:3;17971:93;:::i;:::-;18089:2;18084:3;18080:12;18073:19;;17732:366;;;:::o;18104:419::-;18270:4;18308:2;18297:9;18293:18;18285:26;;18357:9;18351:4;18347:20;18343:1;18332:9;18328:17;18321:47;18385:131;18511:4;18385:131;:::i;:::-;18377:139;;18104:419;;;:::o;18529:442::-;18678:4;18716:2;18705:9;18701:18;18693:26;;18729:71;18797:1;18786:9;18782:17;18773:6;18729:71;:::i;:::-;18810:72;18878:2;18867:9;18863:18;18854:6;18810:72;:::i;:::-;18892;18960:2;18949:9;18945:18;18936:6;18892:72;:::i;:::-;18529:442;;;;;;:::o;18977:164::-;19117:16;19113:1;19105:6;19101:14;19094:40;18977:164;:::o;19147:366::-;19289:3;19310:67;19374:2;19369:3;19310:67;:::i;:::-;19303:74;;19386:93;19475:3;19386:93;:::i;:::-;19504:2;19499:3;19495:12;19488:19;;19147:366;;;:::o;19519:419::-;19685:4;19723:2;19712:9;19708:18;19700:26;;19772:9;19766:4;19762:20;19758:1;19747:9;19743:17;19736:47;19800:131;19926:4;19800:131;:::i;:::-;19792:139;;19519:419;;;:::o;19944:172::-;20084:24;20080:1;20072:6;20068:14;20061:48;19944:172;:::o;20122:366::-;20264:3;20285:67;20349:2;20344:3;20285:67;:::i;:::-;20278:74;;20361:93;20450:3;20361:93;:::i;:::-;20479:2;20474:3;20470:12;20463:19;;20122:366;;;:::o;20494:419::-;20660:4;20698:2;20687:9;20683:18;20675:26;;20747:9;20741:4;20737:20;20733:1;20722:9;20718:17;20711:47;20775:131;20901:4;20775:131;:::i;:::-;20767:139;;20494:419;;;:::o;20919:168::-;21059:20;21055:1;21047:6;21043:14;21036:44;20919:168;:::o;21093:366::-;21235:3;21256:67;21320:2;21315:3;21256:67;:::i;:::-;21249:74;;21332:93;21421:3;21332:93;:::i;:::-;21450:2;21445:3;21441:12;21434:19;;21093:366;;;:::o;21465:419::-;21631:4;21669:2;21658:9;21654:18;21646:26;;21718:9;21712:4;21708:20;21704:1;21693:9;21689:17;21682:47;21746:131;21872:4;21746:131;:::i;:::-;21738:139;;21465:419;;;:::o;21890:180::-;22030:32;22026:1;22018:6;22014:14;22007:56;21890:180;:::o;22076:366::-;22218:3;22239:67;22303:2;22298:3;22239:67;:::i;:::-;22232:74;;22315:93;22404:3;22315:93;:::i;:::-;22433:2;22428:3;22424:12;22417:19;;22076:366;;;:::o;22448:419::-;22614:4;22652:2;22641:9;22637:18;22629:26;;22701:9;22695:4;22691:20;22687:1;22676:9;22672:17;22665:47;22729:131;22855:4;22729:131;:::i;:::-;22721:139;;22448:419;;;:::o;22873:1108::-;23190:4;23228:3;23217:9;23213:19;23205:27;;23242:71;23310:1;23299:9;23295:17;23286:6;23242:71;:::i;:::-;23323:72;23391:2;23380:9;23376:18;23367:6;23323:72;:::i;:::-;23405;23473:2;23462:9;23458:18;23449:6;23405:72;:::i;:::-;23487;23555:2;23544:9;23540:18;23531:6;23487:72;:::i;:::-;23569:73;23637:3;23626:9;23622:19;23613:6;23569:73;:::i;:::-;23652;23720:3;23709:9;23705:19;23696:6;23652:73;:::i;:::-;23735;23803:3;23792:9;23788:19;23779:6;23735:73;:::i;:::-;23818;23886:3;23875:9;23871:19;23862:6;23818:73;:::i;:::-;23901;23969:3;23958:9;23954:19;23945:6;23901:73;:::i;:::-;22873:1108;;;;;;;;;;;;:::o;23987:143::-;24044:5;24075:6;24069:13;24060:22;;24091:33;24118:5;24091:33;:::i;:::-;23987:143;;;;:::o;24136:351::-;24206:6;24255:2;24243:9;24234:7;24230:23;24226:32;24223:119;;;24261:79;;:::i;:::-;24223:119;24381:1;24406:64;24462:7;24453:6;24442:9;24438:22;24406:64;:::i;:::-;24396:74;;24352:128;24136:351;;;;:::o;24493:175::-;24633:27;24629:1;24621:6;24617:14;24610:51;24493:175;:::o;24674:366::-;24816:3;24837:67;24901:2;24896:3;24837:67;:::i;:::-;24830:74;;24913:93;25002:3;24913:93;:::i;:::-;25031:2;25026:3;25022:12;25015:19;;24674:366;;;:::o;25046:419::-;25212:4;25250:2;25239:9;25235:18;25227:26;;25299:9;25293:4;25289:20;25285:1;25274:9;25270:17;25263:47;25327:131;25453:4;25327:131;:::i;:::-;25319:139;;25046:419;;;:::o;25471:410::-;25511:7;25534:20;25552:1;25534:20;:::i;:::-;25529:25;;25568:20;25586:1;25568:20;:::i;:::-;25563:25;;25623:1;25620;25616:9;25645:30;25663:11;25645:30;:::i;:::-;25634:41;;25824:1;25815:7;25811:15;25808:1;25805:22;25785:1;25778:9;25758:83;25735:139;;25854:18;;:::i;:::-;25735:139;25519:362;25471:410;;;;:::o;25887:180::-;25935:77;25932:1;25925:88;26032:4;26029:1;26022:15;26056:4;26053:1;26046:15;26073:185;26113:1;26130:20;26148:1;26130:20;:::i;:::-;26125:25;;26164:20;26182:1;26164:20;:::i;:::-;26159:25;;26203:1;26193:35;;26208:18;;:::i;:::-;26193:35;26250:1;26247;26243:9;26238:14;;26073:185;;;;:::o;26264:191::-;26304:3;26323:20;26341:1;26323:20;:::i;:::-;26318:25;;26357:20;26375:1;26357:20;:::i;:::-;26352:25;;26400:1;26397;26393:9;26386:16;;26421:3;26418:1;26415:10;26412:36;;;26428:18;;:::i;:::-;26412:36;26264:191;;;;:::o;26461:167::-;26601:19;26597:1;26589:6;26585:14;26578:43;26461:167;:::o;26634:366::-;26776:3;26797:67;26861:2;26856:3;26797:67;:::i;:::-;26790:74;;26873:93;26962:3;26873:93;:::i;:::-;26991:2;26986:3;26982:12;26975:19;;26634:366;;;:::o;27006:419::-;27172:4;27210:2;27199:9;27195:18;27187:26;;27259:9;27253:4;27249:20;27245:1;27234:9;27230:17;27223:47;27287:131;27413:4;27287:131;:::i;:::-;27279:139;;27006:419;;;:::o;27431:194::-;27471:4;27491:20;27509:1;27491:20;:::i;:::-;27486:25;;27525:20;27543:1;27525:20;:::i;:::-;27520:25;;27569:1;27566;27562:9;27554:17;;27593:1;27587:4;27584:11;27581:37;;;27598:18;;:::i;:::-;27581:37;27431:194;;;;:::o;27631:442::-;27780:4;27818:2;27807:9;27803:18;27795:26;;27831:71;27899:1;27888:9;27884:17;27875:6;27831:71;:::i;:::-;27912:72;27980:2;27969:9;27965:18;27956:6;27912:72;:::i;:::-;27994;28062:2;28051:9;28047:18;28038:6;27994:72;:::i;:::-;27631:442;;;;;;:::o;28079:116::-;28149:21;28164:5;28149:21;:::i;:::-;28142:5;28139:32;28129:60;;28185:1;28182;28175:12;28129:60;28079:116;:::o;28201:137::-;28255:5;28286:6;28280:13;28271:22;;28302:30;28326:5;28302:30;:::i;:::-;28201:137;;;;:::o;28344:345::-;28411:6;28460:2;28448:9;28439:7;28435:23;28431:32;28428:119;;;28466:79;;:::i;:::-;28428:119;28586:1;28611:61;28664:7;28655:6;28644:9;28640:22;28611:61;:::i;:::-;28601:71;;28557:125;28344:345;;;;:::o;28695:175::-;28835:27;28831:1;28823:6;28819:14;28812:51;28695:175;:::o;28876:366::-;29018:3;29039:67;29103:2;29098:3;29039:67;:::i;:::-;29032:74;;29115:93;29204:3;29115:93;:::i;:::-;29233:2;29228:3;29224:12;29217:19;;28876:366;;;:::o;29248:419::-;29414:4;29452:2;29441:9;29437:18;29429:26;;29501:9;29495:4;29491:20;29487:1;29476:9;29472:17;29465:47;29529:131;29655:4;29529:131;:::i;:::-;29521:139;;29248:419;;;:::o;29673:178::-;29813:30;29809:1;29801:6;29797:14;29790:54;29673:178;:::o;29857:366::-;29999:3;30020:67;30084:2;30079:3;30020:67;:::i;:::-;30013:74;;30096:93;30185:3;30096:93;:::i;:::-;30214:2;30209:3;30205:12;30198:19;;29857:366;;;:::o;30229:419::-;30395:4;30433:2;30422:9;30418:18;30410:26;;30482:9;30476:4;30472:20;30468:1;30457:9;30453:17;30446:47;30510:131;30636:4;30510:131;:::i;:::-;30502:139;;30229:419;;;:::o;30654:177::-;30794:29;30790:1;30782:6;30778:14;30771:53;30654:177;:::o;30837:366::-;30979:3;31000:67;31064:2;31059:3;31000:67;:::i;:::-;30993:74;;31076:93;31165:3;31076:93;:::i;:::-;31194:2;31189:3;31185:12;31178:19;;30837:366;;;:::o;31209:419::-;31375:4;31413:2;31402:9;31398:18;31390:26;;31462:9;31456:4;31452:20;31448:1;31437:9;31433:17;31426:47;31490:131;31616:4;31490:131;:::i;:::-;31482:139;;31209:419;;;:::o;31634:180::-;31682:77;31679:1;31672:88;31779:4;31776:1;31769:15;31803:4;31800:1;31793:15;31820:320;31864:6;31901:1;31895:4;31891:12;31881:22;;31948:1;31942:4;31938:12;31969:18;31959:81;;32025:4;32017:6;32013:17;32003:27;;31959:81;32087:2;32079:6;32076:14;32056:18;32053:38;32050:84;;32106:18;;:::i;:::-;32050:84;31871:269;31820:320;;;:::o;32146:143::-;32203:5;32234:6;32228:13;32219:22;;32250:33;32277:5;32250:33;:::i;:::-;32146:143;;;;:::o;32295:507::-;32374:6;32382;32431:2;32419:9;32410:7;32406:23;32402:32;32399:119;;;32437:79;;:::i;:::-;32399:119;32557:1;32582:64;32638:7;32629:6;32618:9;32614:22;32582:64;:::i;:::-;32572:74;;32528:128;32695:2;32721:64;32777:7;32768:6;32757:9;32753:22;32721:64;:::i;:::-;32711:74;;32666:129;32295:507;;;;;:::o;32808:180::-;32856:77;32853:1;32846:88;32953:4;32950:1;32943:15;32977:4;32974:1;32967:15;32994:222;33087:4;33125:2;33114:9;33110:18;33102:26;;33138:71;33206:1;33195:9;33191:17;33182:6;33138:71;:::i;:::-;32994:222;;;;:::o;33222:664::-;33427:4;33465:3;33454:9;33450:19;33442:27;;33479:71;33547:1;33536:9;33532:17;33523:6;33479:71;:::i;:::-;33560:72;33628:2;33617:9;33613:18;33604:6;33560:72;:::i;:::-;33642;33710:2;33699:9;33695:18;33686:6;33642:72;:::i;:::-;33724;33792:2;33781:9;33777:18;33768:6;33724:72;:::i;:::-;33806:73;33874:3;33863:9;33859:19;33850:6;33806:73;:::i;:::-;33222:664;;;;;;;;:::o;33892:86::-;33927:7;33967:4;33960:5;33956:16;33945:27;;33892:86;;;:::o;33984:112::-;34067:22;34083:5;34067:22;:::i;:::-;34062:3;34055:35;33984:112;;:::o;34102:545::-;34275:4;34313:3;34302:9;34298:19;34290:27;;34327:71;34395:1;34384:9;34380:17;34371:6;34327:71;:::i;:::-;34408:68;34472:2;34461:9;34457:18;34448:6;34408:68;:::i;:::-;34486:72;34554:2;34543:9;34539:18;34530:6;34486:72;:::i;:::-;34568;34636:2;34625:9;34621:18;34612:6;34568:72;:::i;:::-;34102:545;;;;;;;:::o"},"methodIdentifiers":{"cancelOrder((address,address,address,uint256,address,uint256,uint256,uint256))":"49a03152","eip712Domain()":"84b0196e","fulfillOffer((address,address,address,uint256,address,uint256,uint256,uint256),bytes)":"de5b482d","fulfillOrder((address,address,address,uint256,address,uint256,uint256,uint256),bytes)":"da0f62a2","incrementNonce()":"627cdcb9","orderStatus(bytes32)":"2dff692d","owner()":"8da5cb5b","platformFeePercent()":"8c639a85","platformFeeRecipient()":"eb13554f","renounceOwnership()":"715018a6","setPlatformFeePercent(uint256)":"cab230d2","setPlatformFeeRecipient(address)":"1871e243","transferOwnership(address)":"f2fde38b","userNonces(address)":"2f7801f4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_platformFeePercent\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"OrderCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"orderHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"OrderFulfilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldFeePercent\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFeePercent\",\"type\":\"uint256\"}],\"name\":\"PlatformFeePercentUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldRecipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newRecipient\",\"type\":\"address\"}],\"name\":\"PlatformFeeRecipientUpdated\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct Marketplace.Order\",\"name\":\"order\",\"type\":\"tuple\"}],\"name\":\"cancelOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct Marketplace.Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"fulfillOffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct Marketplace.Order\",\"name\":\"order\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"fulfillOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"incrementNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"orderStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"platformFeePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"platformFeeRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFeePercent\",\"type\":\"uint256\"}],\"name\":\"setPlatformFeePercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newRecipient\",\"type\":\"address\"}],\"name\":\"setPlatformFeeRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userNonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"\\u6240\\u6709\\u8ba2\\u5355\\u5728\\u94fe\\u4e0b\\u521b\\u5efa\\u548c\\u7b7e\\u540d\\uff0c\\u53ea\\u6709\\u5728\\u6210\\u4ea4\\u65f6\\u624d\\u7531\\u5176\\u4e2d\\u4e00\\u65b9\\u63d0\\u4ea4\\u5230\\u94fe\\u4e0a\\u6267\\u884c\\u3002\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"},\"fulfillOffer((address,address,address,uint256,address,uint256,uint256,uint256),bytes)\":{\"params\":{\"order\":\"\\u5305\\u542b\\u6240\\u6709\\u62a5\\u4ef7\\u4fe1\\u606f\\u7684\\u7ed3\\u6784\\u4f53\\uff0c\\u7531\\u4e70\\u5bb6\\u7b7e\\u540d\\u3002\",\"signature\":\"\\u4e70\\u5bb6\\u7684 EIP712 \\u7b7e\\u540d\\u3002\"}},\"fulfillOrder((address,address,address,uint256,address,uint256,uint256,uint256),bytes)\":{\"params\":{\"order\":\"\\u5305\\u542b\\u6240\\u6709\\u8ba2\\u5355\\u4fe1\\u606f\\u7684\\u7ed3\\u6784\\u4f53\\uff0c\\u7531\\u5356\\u5bb6\\u7b7e\\u540d\\u3002\",\"signature\":\"\\u5356\\u5bb6\\u7684 EIP712 \\u7b7e\\u540d\\u3002\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"\\u4e00\\u4e2a\\u57fa\\u4e8e\\u94fe\\u4e0b\\u7b7e\\u540d\\u8ba2\\u5355\\u7c3f\\u7684\\u53bb\\u4e2d\\u5fc3\\u5316 NFT \\u5e02\\u573a\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"cancelOrder((address,address,address,uint256,address,uint256,uint256,uint256))\":{\"notice\":\"\\u5728\\u94fe\\u4e0a\\u53d6\\u6d88\\u4e00\\u4e2a\\u5df2\\u7b7e\\u540d\\u7684\\u8ba2\\u5355\\uff0c\\u4f7f\\u5176\\u6c38\\u4e45\\u5931\\u6548\\u3002\"},\"fulfillOffer((address,address,address,uint256,address,uint256,uint256,uint256),bytes)\":{\"notice\":\"\\u3010\\u573a\\u666f\\u4e8c\\uff1a\\u5356\\u5bb6\\u63a5\\u53d7\\u62a5\\u4ef7\\u3011\\u6267\\u884c\\u4e00\\u4e2a\\u7531\\u4e70\\u5bb6\\u7b7e\\u540d\\u7684\\u62a5\\u4ef7\\u8ba2\\u5355\\u3002\"},\"fulfillOrder((address,address,address,uint256,address,uint256,uint256,uint256),bytes)\":{\"notice\":\"\\u3010\\u573a\\u666f\\u4e00\\uff1a\\u4e70\\u5bb6\\u8d2d\\u4e70\\u3011\\u6267\\u884c\\u4e00\\u4e2a\\u7531\\u5356\\u5bb6\\u7b7e\\u540d\\u7684\\u9500\\u552e\\u8ba2\\u5355\\u3002\"},\"incrementNonce()\":{\"notice\":\"\\u9012\\u589e\\u7528\\u6237\\u7684 nonce\\uff0c\\u8fd9\\u5c06\\u4f7f\\u7528\\u6237\\u6240\\u6709\\u4f7f\\u7528\\u65e7 nonce \\u7684\\u7b7e\\u540d\\u5168\\u90e8\\u5931\\u6548\\u3002\"}},\"notice\":\"\\u8be5\\u5408\\u7ea6\\u4e0d\\u5b58\\u50a8\\u6302\\u5355\\u6216\\u62a5\\u4ef7\\u72b6\\u6001\\uff0c\\u53ea\\u8d1f\\u8d23\\u9a8c\\u8bc1\\u7b7e\\u540d\\u5e76\\u6267\\u884c\\u539f\\u5b50\\u4ea4\\u6362\\u3002\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Marketplace.sol\":\"Marketplace\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0x3b017a19c1730050d0fdff8dfa9255741634699aa4217442724746ca49e13292\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05530a2959e8be01cd88993970924cd6081c3462395f6fc0e73c034519259b05\",\"dweb:/ipfs/QmXAG8dF9fiYE8iVWJYWxmbEMNL6RvBAxzRGq2nyLanB2M\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x1fcf8cceb1a67e6c8512267e780933c4a3f63ef44756e6c818fda79be51c8402\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://617d7d57f6f9cd449068b4d23daf485676d083aae648e038d05eb3a13291de35\",\"dweb:/ipfs/QmPADWPiGaSzZDFNpFEUx4ZPqhzPkYncBpHyTfAGcfsqzy\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x0c60057e7351874f086db8dc9291b7ada9ad62cb7725befd2991430d04a74572\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33cdfd1fc36410d45046f88ff9864350146b194736c32834baa38d99b843ffbe\",\"dweb:/ipfs/QmdVmqgFKjgEBURy4KUwWDA6J1LEg1BKcHcXsx4nkeHAD2\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x26670fef37d4adf55570ba78815eec5f31cb017e708f61886add4fc4da665631\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b16d45febff462bafd8a5669f904796a835baf607df58a8461916d3bf4f08c59\",\"dweb:/ipfs/QmU2eJFpjmT4vxeJWJyLeQb8Xht1kdB8Y6MKLDPFA9WPux\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/Marketplace.sol\":{\"keccak256\":\"0x7003f36d7786d53ba828e799cd52190db9ac4ae8d535193c65727d9565462e98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c217cfb77f37a99a10e9c7fcc390c1ab755ef4611d59efc3165ecdfab12a1643\",\"dweb:/ipfs/QmT4pzfwYBXqcq9MshqraeTQWeGHRoKHJrE6PkGR7udq8g\"]}},\"version\":1}"}}}}}